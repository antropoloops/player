{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Player/Player.tsx\";\nimport React from \"react\";\nimport { player } from \"../../Player\";\nimport { getAudioContext } from \"../../Player/AudioContext\";\nimport { Scroll } from \"../Scroll\";\nimport { Header } from \"../shared/Header\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Clips } from \"./Clips\";\nimport \"./index.css\";\nimport Preview from \"./Preview\";\nimport { useResourceLoadingStatus } from \"./useResourceLoadingStatus\";\nimport { Visuals } from \"./Visuals\";\nconst SKIP = false;\nexport const Player = ({\n  audioset\n}) => {\n  const resourceStatus = useResourceLoadingStatus();\n  const isReady = SKIP || resourceStatus.status === \"ready\";\n\n  const _useDeviceType = useDeviceType(),\n        isDesktop = _useDeviceType.isDesktop;\n\n  const isVisual = isDesktop || isReady;\n\n  const handleStart = () => {\n    getAudioContext().then(() => player.resources.load()).then(() => player.control.keyboard.active = true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App Player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Header, {\n    meta: audioset.meta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, isReady ? React.createElement(Clips, {\n    audioset: audioset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(Preview, {\n    audioset: audioset,\n    resourceStatus: resourceStatus,\n    onStart: handleStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Player\"), isVisual && React.createElement(\"div\", {\n    className: \"visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Visuals, {\n    audioset: audioset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Player.tsx"],"names":["React","player","getAudioContext","Scroll","Header","useDeviceType","Clips","Preview","useResourceLoadingStatus","Visuals","SKIP","Player","audioset","resourceStatus","isReady","status","isDesktop","isVisual","handleStart","then","resources","load","control","keyboard","active","meta"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,IAAI,GAAG,KAAb;AAMA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AACnD,QAAMC,cAAc,GAAGL,wBAAwB,EAA/C;AACA,QAAMM,OAAO,GAAGJ,IAAI,IAAIG,cAAc,CAACE,MAAf,KAA0B,OAAlD;;AAFmD,yBAG7BV,aAAa,EAHgB;AAAA,QAG3CW,SAH2C,kBAG3CA,SAH2C;;AAKnD,QAAMC,QAAQ,GAAGD,SAAS,IAAIF,OAA9B;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxBhB,IAAAA,eAAe,GACZiB,IADH,CACQ,MAAMlB,MAAM,CAACmB,SAAP,CAAiBC,IAAjB,EADd,EAEGF,IAFH,CAEQ,MAAOlB,MAAM,CAACqB,OAAP,CAAeC,QAAf,CAAwBC,MAAxB,GAAiC,IAFhD;AAGD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEZ,QAAQ,CAACa,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,OAAO,GACN,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEA,QADZ;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,OAAO,EAAEK,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,CAFF,EAeE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,EAgBGD,QAAQ,IACP;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEL,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CAjBJ,CADF;AAsBD,CAnCM","sourcesContent":["import React from \"react\";\nimport { Audioset } from \"../../Audioset\";\nimport { player } from \"../../Player\";\nimport { getAudioContext } from \"../../Player/AudioContext\";\nimport { Scroll } from \"../Scroll\";\nimport { Header } from \"../shared/Header\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Clips } from \"./Clips\";\nimport \"./index.css\";\nimport Preview from \"./Preview\";\nimport { useResourceLoadingStatus } from \"./useResourceLoadingStatus\";\nimport { Visuals } from \"./Visuals\";\n\nconst SKIP = false;\n\nexport interface PlayerProps {\n  audioset: Audioset;\n}\n\nexport const Player = ({ audioset }: PlayerProps) => {\n  const resourceStatus = useResourceLoadingStatus();\n  const isReady = SKIP || resourceStatus.status === \"ready\";\n  const { isDesktop } = useDeviceType();\n\n  const isVisual = isDesktop || isReady;\n\n  const handleStart = () => {\n    getAudioContext()\n      .then(() => player.resources.load())\n      .then(() => (player.control.keyboard.active = true));\n  };\n\n  return (\n    <div className=\"App Player\">\n      <Header meta={audioset.meta} />\n      <Scroll>\n        <div className=\"content\">\n          {isReady ? (\n            <Clips audioset={audioset} />\n          ) : (\n            <Preview\n              audioset={audioset}\n              resourceStatus={resourceStatus}\n              onStart={handleStart}\n            />\n          )}\n        </div>\n      </Scroll>\n      <div className=\"footer\">Player</div>\n      {isVisual && (\n        <div className=\"visuals\">{<Visuals audioset={audioset} />}</div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}