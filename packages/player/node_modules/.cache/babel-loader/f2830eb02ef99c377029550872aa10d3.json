{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/App/Bundle.tsx\";\nimport React from \"react\";\nimport { isAudioset } from \"../../audioset\";\nimport { Player } from \"../Player\";\nimport { Project as ProjectView } from \"../Project\";\nimport \"./App.css\";\nimport Loading from \"../shared/Loading\";\nimport NotFound from \"./NotFound\";\nimport { useRemoteBundle } from \"./useRemoteBundle\";\nexport const Bundle = ({\n  idOrUrl\n}) => {\n  const _useRemoteBundle = useRemoteBundle(idOrUrl),\n        bundle = _useRemoteBundle.bundle,\n        loading = _useRemoteBundle.loading;\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  } else if (bundle) {\n    return isAudioset(bundle) ? React.createElement(Player, {\n      audioset: bundle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }) : React.createElement(ProjectView, {\n      project: bundle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(NotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/App/Bundle.tsx"],"names":["React","isAudioset","Player","Project","ProjectView","Loading","NotFound","useRemoteBundle","Bundle","idOrUrl","bundle","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAAoC,gBAApC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAKA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AAAA,2BACtBF,eAAe,CAACE,OAAD,CADO;AAAA,QAC1CC,MAD0C,oBAC1CA,MAD0C;AAAA,QAClCC,OADkC,oBAClCA,OADkC;;AAElD,MAAIA,OAAJ,EAAa;AACX,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAID,MAAJ,EAAY;AACjB,WAAOT,UAAU,CAACS,MAAD,CAAV,GACL,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAGL,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAKD,GANM,MAMA;AACL,WAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAbM","sourcesContent":["import React from \"react\";\nimport { isAudioset, Project } from \"../../audioset\";\nimport { Player } from \"../Player\";\nimport { Project as ProjectView } from \"../Project\";\nimport \"./App.css\";\nimport Loading from \"../shared/Loading\";\nimport NotFound from \"./NotFound\";\nimport { useRemoteBundle } from \"./useRemoteBundle\";\n\ninterface BundleProps {\n  idOrUrl: string;\n}\nexport const Bundle = ({ idOrUrl }: BundleProps) => {\n  const { bundle, loading } = useRemoteBundle(idOrUrl);\n  if (loading) {\n    return <Loading />;\n  } else if (bundle) {\n    return isAudioset(bundle) ? (\n      <Player audioset={bundle} />\n    ) : (\n      <ProjectView project={bundle as Project} />\n    );\n  } else {\n    return <NotFound />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}