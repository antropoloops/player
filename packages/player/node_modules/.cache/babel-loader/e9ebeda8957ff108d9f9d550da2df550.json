{"ast":null,"code":"// see howler.js\nvar codecs=null;export default function getSupportedAudioCodecs(){if(codecs){return codecs;}codecs=checkSupportedCodecs();return codecs;}function checkSupportedCodecs(){var test=document.createElement(\"audio\");if(!test||!test.canPlayType){return{mp3:false,wav:false,ogg:false,weba:false};}else{var canPlay=function canPlay(str){return!!test.canPlayType(str).replace(/^no$/,\"\");};return{mp3:canPlay(\"audio/mpeg;\")||canPlay(\"audio/mp3;\"),ogg:canPlay('audio/ogg; codecs=\"vorbis\"'),wav:canPlay('audio/wav; codecs=\"1\"'),weba:canPlay('audio/webm; codecs=\"vorbis\"')};}}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/test-audio-codecs/index.ts"],"names":["codecs","getSupportedAudioCodecs","checkSupportedCodecs","test","document","createElement","canPlayType","mp3","wav","ogg","weba","canPlay","str","replace"],"mappings":"AAAA;AAOA,GAAIA,CAAAA,MAA8B,CAAG,IAArC,CAEA,cAAe,SAASC,CAAAA,uBAAT,EAAoD,CACjE,GAAID,MAAJ,CAAY,CACV,MAAOA,CAAAA,MAAP,CACD,CACDA,MAAM,CAAGE,oBAAoB,EAA7B,CACA,MAAOF,CAAAA,MAAP,CACD,CAED,QAASE,CAAAA,oBAAT,EAAiD,CAC/C,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb,CACA,GAAI,CAACF,IAAD,EAAS,CAACA,IAAI,CAACG,WAAnB,CAAgC,CAC9B,MAAO,CACLC,GAAG,CAAE,KADA,CAELC,GAAG,CAAE,KAFA,CAGLC,GAAG,CAAE,KAHA,CAILC,IAAI,CAAE,KAJD,CAAP,CAMD,CAPD,IAOO,CACL,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,QACd,CAAC,CAACT,IAAI,CAACG,WAAL,CAAiBM,GAAjB,EAAsBC,OAAtB,CAA8B,MAA9B,CAAsC,EAAtC,CADY,EAAhB,CAEA,MAAO,CACLN,GAAG,CAAEI,OAAO,CAAC,aAAD,CAAP,EAA0BA,OAAO,CAAC,YAAD,CADjC,CAELF,GAAG,CAAEE,OAAO,CAAC,4BAAD,CAFP,CAGLH,GAAG,CAAEG,OAAO,CAAC,uBAAD,CAHP,CAILD,IAAI,CAAEC,OAAO,CAAC,6BAAD,CAJR,CAAP,CAMD,CACF","sourcesContent":["// see howler.js\ninterface SupportedCodecs {\n  mp3: boolean;\n  ogg: boolean;\n  wav: boolean;\n  weba: boolean;\n}\nlet codecs: SupportedCodecs | null = null;\n\nexport default function getSupportedAudioCodecs(): SupportedCodecs {\n  if (codecs) {\n    return codecs;\n  }\n  codecs = checkSupportedCodecs();\n  return codecs;\n}\n\nfunction checkSupportedCodecs(): SupportedCodecs {\n  const test = document.createElement(\"audio\");\n  if (!test || !test.canPlayType) {\n    return {\n      mp3: false,\n      wav: false,\n      ogg: false,\n      weba: false,\n    };\n  } else {\n    const canPlay = (str: string): boolean =>\n      !!test.canPlayType(str).replace(/^no$/, \"\");\n    return {\n      mp3: canPlay(\"audio/mpeg;\") || canPlay(\"audio/mp3;\"),\n      ogg: canPlay('audio/ogg; codecs=\"vorbis\"'),\n      wav: canPlay('audio/wav; codecs=\"1\"'),\n      weba: canPlay('audio/webm; codecs=\"vorbis\"'),\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}