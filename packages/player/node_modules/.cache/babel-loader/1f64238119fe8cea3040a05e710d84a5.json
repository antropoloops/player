{"ast":null,"code":"// see howler.js\nlet codecs = null;\nexport default function getSupportedAudioCodecs() {\n  if (codecs) {\n    return codecs;\n  }\n\n  codecs = checkSupportedCodecs();\n  return codecs;\n}\n\nfunction checkSupportedCodecs() {\n  const test = document.createElement(\"audio\");\n\n  if (!test || !test.canPlayType) {\n    return {\n      mp3: false,\n      wav: false,\n      ogg: false,\n      weba: false\n    };\n  } else {\n    const canPlay = str => !!test.canPlayType(str).replace(/^no$/, \"\");\n\n    return {\n      mp3: canPlay(\"audio/mpeg;\") || canPlay(\"audio/mp3;\"),\n      ogg: canPlay('audio/ogg; codecs=\"vorbis\"'),\n      wav: canPlay('audio/wav; codecs=\"1\"'),\n      weba: canPlay('audio/webm; codecs=\"vorbis\"')\n    };\n  }\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/test-audio-codecs/index.ts"],"names":["codecs","getSupportedAudioCodecs","checkSupportedCodecs","test","document","createElement","canPlayType","mp3","wav","ogg","weba","canPlay","str","replace"],"mappings":"AAAA;AAOA,IAAIA,MAA8B,GAAG,IAArC;AAEA,eAAe,SAASC,uBAAT,GAAoD;AACjE,MAAID,MAAJ,EAAY;AACV,WAAOA,MAAP;AACD;;AACDA,EAAAA,MAAM,GAAGE,oBAAoB,EAA7B;AACA,SAAOF,MAAP;AACD;;AAED,SAASE,oBAAT,GAAiD;AAC/C,QAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;;AACA,MAAI,CAACF,IAAD,IAAS,CAACA,IAAI,CAACG,WAAnB,EAAgC;AAC9B,WAAO;AACLC,MAAAA,GAAG,EAAE,KADA;AAELC,MAAAA,GAAG,EAAE,KAFA;AAGLC,MAAAA,GAAG,EAAE,KAHA;AAILC,MAAAA,IAAI,EAAE;AAJD,KAAP;AAMD,GAPD,MAOO;AACL,UAAMC,OAAO,GAAIC,GAAD,IACd,CAAC,CAACT,IAAI,CAACG,WAAL,CAAiBM,GAAjB,EAAsBC,OAAtB,CAA8B,MAA9B,EAAsC,EAAtC,CADJ;;AAEA,WAAO;AACLN,MAAAA,GAAG,EAAEI,OAAO,CAAC,aAAD,CAAP,IAA0BA,OAAO,CAAC,YAAD,CADjC;AAELF,MAAAA,GAAG,EAAEE,OAAO,CAAC,4BAAD,CAFP;AAGLH,MAAAA,GAAG,EAAEG,OAAO,CAAC,uBAAD,CAHP;AAILD,MAAAA,IAAI,EAAEC,OAAO,CAAC,6BAAD;AAJR,KAAP;AAMD;AACF","sourcesContent":["// see howler.js\ninterface SupportedCodecs {\n  mp3: boolean;\n  ogg: boolean;\n  wav: boolean;\n  weba: boolean;\n}\nlet codecs: SupportedCodecs | null = null;\n\nexport default function getSupportedAudioCodecs(): SupportedCodecs {\n  if (codecs) {\n    return codecs;\n  }\n  codecs = checkSupportedCodecs();\n  return codecs;\n}\n\nfunction checkSupportedCodecs(): SupportedCodecs {\n  const test = document.createElement(\"audio\");\n  if (!test || !test.canPlayType) {\n    return {\n      mp3: false,\n      wav: false,\n      ogg: false,\n      weba: false,\n    };\n  } else {\n    const canPlay = (str: string): boolean =>\n      !!test.canPlayType(str).replace(/^no$/, \"\");\n    return {\n      mp3: canPlay(\"audio/mpeg;\") || canPlay(\"audio/mp3;\"),\n      ogg: canPlay('audio/ogg; codecs=\"vorbis\"'),\n      wav: canPlay('audio/wav; codecs=\"1\"'),\n      weba: canPlay('audio/webm; codecs=\"vorbis\"'),\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}