{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Player.tsx\";\nimport React, { useEffect } from \"react\";\nimport { autoUnlockAudio } from \"../../player/AudioContext\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Controller } from \"./Controller\";\nimport { Preview } from \"./Preview\";\nimport { Sidebar } from \"./Sidebar\";\nimport { useFullscreen } from \"./useFullscreen\";\nimport { useKeyboardListener } from \"./useKeyboardListener\";\nimport { usePlayer } from \"./usePlayer\";\nexport const Player = ({\n  audioset\n}) => {\n  var _player$control;\n\n  const player = usePlayer(audioset);\n\n  const _useFullscreen = useFullscreen(),\n        isFullscreen = _useFullscreen.isFullscreen,\n        toggleFullscreen = _useFullscreen.toggleFullscreen;\n\n  const _useDeviceType = useDeviceType(),\n        isDesktop = _useDeviceType.isDesktop;\n\n  useKeyboardListener((_player$control = player.control) === null || _player$control === void 0 ? void 0 : _player$control.keyboard);\n  useEffect(() => {\n    autoUnlockAudio();\n  }, []);\n  const areVisualsVisible = isDesktop || player.isStarted;\n  const isSidebarVisible = !isFullscreen;\n  return React.createElement(\"div\", {\n    className: \"App Player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, isSidebarVisible && React.createElement(Sidebar, {\n    audioset: audioset,\n    onFullscreen: toggleFullscreen,\n    onStopAll: () => {\n      var _player$control2;\n\n      return player === null || player === void 0 ? void 0 : (_player$control2 = player.control) === null || _player$control2 === void 0 ? void 0 : _player$control2.stopAll(0);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Preview, {\n    audioset: audioset,\n    isReady: player.isStarted,\n    onStart: () => player.setStarted(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), player.control && React.createElement(Controller, {\n    audioset: audioset,\n    state: player.state,\n    control: player.control,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), areVisualsVisible && React.createElement(\"div\", {\n    className: \"visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"visuals\",\n    ref: player.visualsRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Player.tsx"],"names":["React","useEffect","autoUnlockAudio","useDeviceType","Controller","Preview","Sidebar","useFullscreen","useKeyboardListener","usePlayer","Player","audioset","player","isFullscreen","toggleFullscreen","isDesktop","control","keyboard","areVisualsVisible","isStarted","isSidebarVisible","stopAll","setStarted","state","visualsRef"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAMA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AAAA;;AACnD,QAAMC,MAAM,GAAGH,SAAS,CAACE,QAAD,CAAxB;;AADmD,yBAERJ,aAAa,EAFL;AAAA,QAE3CM,YAF2C,kBAE3CA,YAF2C;AAAA,QAE7BC,gBAF6B,kBAE7BA,gBAF6B;;AAAA,yBAG7BX,aAAa,EAHgB;AAAA,QAG3CY,SAH2C,kBAG3CA,SAH2C;;AAInDP,EAAAA,mBAAmB,oBAACI,MAAM,CAACI,OAAR,oDAAC,gBAAgBC,QAAjB,CAAnB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMgB,iBAAiB,GAAGH,SAAS,IAAIH,MAAM,CAACO,SAA9C;AACA,QAAMC,gBAAgB,GAAG,CAACP,YAA1B;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,gBAAgB,IACf,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAET,QADZ;AAEE,IAAA,YAAY,EAAEG,gBAFhB;AAGE,IAAA,SAAS,EAAE;AAAA;;AAAA,aAAMF,MAAN,aAAMA,MAAN,2CAAMA,MAAM,CAAEI,OAAd,qDAAM,iBAAiBK,OAAjB,CAAyB,CAAzB,CAAN;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEV,QADZ;AAEE,IAAA,OAAO,EAAEC,MAAM,CAACO,SAFlB;AAGE,IAAA,OAAO,EAAE,MAAMP,MAAM,CAACU,UAAP,CAAkB,IAAlB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUGV,MAAM,CAACI,OAAP,IACC,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEL,QADZ;AAEE,IAAA,KAAK,EAAEC,MAAM,CAACW,KAFhB;AAGE,IAAA,OAAO,EAAEX,MAAM,CAACI,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAFJ,EAqBGE,iBAAiB,IAChB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,GAAG,EAAEN,MAAM,CAACY,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBJ,CADF;AA6BD,CA1CM","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { autoUnlockAudio } from \"../../player/AudioContext\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Controller } from \"./Controller\";\nimport { Preview } from \"./Preview\";\nimport { Sidebar } from \"./Sidebar\";\nimport { useFullscreen } from \"./useFullscreen\";\nimport { useKeyboardListener } from \"./useKeyboardListener\";\nimport { usePlayer } from \"./usePlayer\";\n\nexport interface PlayerProps {\n  audioset: Audioset;\n}\n\nexport const Player = ({ audioset }: PlayerProps) => {\n  const player = usePlayer(audioset);\n  const { isFullscreen, toggleFullscreen } = useFullscreen();\n  const { isDesktop } = useDeviceType();\n  useKeyboardListener(player.control?.keyboard);\n\n  useEffect(() => {\n    autoUnlockAudio();\n  }, []);\n\n  const areVisualsVisible = isDesktop || player.isStarted;\n  const isSidebarVisible = !isFullscreen;\n\n  return (\n    <div className=\"App Player\">\n      {isSidebarVisible && (\n        <Sidebar\n          audioset={audioset}\n          onFullscreen={toggleFullscreen}\n          onStopAll={() => player?.control?.stopAll(0)}\n        >\n          <Preview\n            audioset={audioset}\n            isReady={player.isStarted}\n            onStart={() => player.setStarted(true)}\n          />\n          {player.control && (\n            <Controller\n              audioset={audioset}\n              state={player.state}\n              control={player.control}\n            />\n          )}\n        </Sidebar>\n      )}\n      {areVisualsVisible && (\n        <div className=\"visuals\">\n          <div id=\"visuals\" ref={player.visualsRef} />\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}