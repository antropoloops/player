{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [sinLambda * cosPhi - cosLambda * sin1_Phi, -cosLambda * cosPhi - sinLambda * sin1_Phi];\n}\n\nwiechelRaw.invert = function (x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [atan2(k * b, D * (1 + w)), D ? -asin(k * a / D) : 0];\n};\n\nexport default function () {\n  return projection(wiechelRaw).rotate([0, -90, 45]).scale(124.75).clipAngle(180 - 1e-3);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/wiechel.js"],"names":["geoProjection","projection","asin","atan2","cos","sin","sqrt","wiechelRaw","lambda","phi","cosPhi","sinPhi","sin1_Phi","cosLambda","sinLambda","invert","x","y","w","k","b","a","D","rotate","scale","clipAngle"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAzB,QAA0C,QAA1C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,WAA1C;AAEA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,GAA5B,EAAiC;AACtC,MAAIC,MAAM,GAAGN,GAAG,CAACK,GAAD,CAAhB;AAAA,MACIE,MAAM,GAAGP,GAAG,CAACI,MAAD,CAAH,GAAcE,MAD3B;AAAA,MAEIE,QAAQ,GAAG,IAAID,MAFnB;AAAA,MAGIE,SAAS,GAAGT,GAAG,CAACI,MAAM,GAAGL,KAAK,CAACE,GAAG,CAACG,MAAD,CAAH,GAAcE,MAAf,EAAuB,CAACL,GAAG,CAACI,GAAD,CAA3B,CAAf,CAHnB;AAAA,MAIIK,SAAS,GAAGT,GAAG,CAACG,MAAD,CAJnB;AAKAE,EAAAA,MAAM,GAAGJ,IAAI,CAAC,IAAIK,MAAM,GAAGA,MAAd,CAAb;AACA,SAAO,CACLG,SAAS,GAAGJ,MAAZ,GAAqBG,SAAS,GAAGD,QAD5B,EAEL,CAACC,SAAD,GAAaH,MAAb,GAAsBI,SAAS,GAAGF,QAF7B,CAAP;AAID;;AAEDL,UAAU,CAACQ,MAAX,GAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjC,MAAIC,CAAC,GAAG,CAACF,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAb,IAAkB,CAAC,CAA3B;AAAA,MACIE,CAAC,GAAGb,IAAI,CAAC,CAACY,CAAD,IAAM,IAAIA,CAAV,CAAD,CADZ;AAAA,MAEIE,CAAC,GAAGH,CAAC,GAAGC,CAAJ,GAAQF,CAAC,GAAGG,CAFpB;AAAA,MAGIE,CAAC,GAAGL,CAAC,GAAGE,CAAJ,GAAQD,CAAC,GAAGE,CAHpB;AAAA,MAIIG,CAAC,GAAGhB,IAAI,CAACe,CAAC,GAAGA,CAAJ,GAAQD,CAAC,GAAGA,CAAb,CAJZ;AAKA,SAAO,CACLjB,KAAK,CAACgB,CAAC,GAAGC,CAAL,EAAQE,CAAC,IAAI,IAAIJ,CAAR,CAAT,CADA,EAELI,CAAC,GAAG,CAACpB,IAAI,CAACiB,CAAC,GAAGE,CAAJ,GAAQC,CAAT,CAAR,GAAsB,CAFlB,CAAP;AAID,CAVD;;AAYA,eAAe,YAAW;AACxB,SAAOrB,UAAU,CAACM,UAAD,CAAV,CACFgB,MADE,CACK,CAAC,CAAD,EAAI,CAAC,EAAL,EAAS,EAAT,CADL,EAEFC,KAFE,CAEI,MAFJ,EAGFC,SAHE,CAGQ,MAAM,IAHd,CAAP;AAID","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [\n    sinLambda * cosPhi - cosLambda * sin1_Phi,\n    -cosLambda * cosPhi - sinLambda * sin1_Phi\n  ];\n}\n\nwiechelRaw.invert = function(x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [\n    atan2(k * b, D * (1 + w)),\n    D ? -asin(k * a / D) : 0\n  ];\n};\n\nexport default function() {\n  return projection(wiechelRaw)\n      .rotate([0, -90, 45])\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n"]},"metadata":{},"sourceType":"module"}