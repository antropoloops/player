{"ast":null,"code":"import { abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh } from \"./math.js\"; // Returns [sn, cn, dn](u + iv|m).\n\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [[0, b[0] / b[1]], [1 / b[1], 0], [b[2] / b[1], 0]];\n  }\n\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [[a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c], [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c], [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]];\n} // Returns [sn, cn, dn, ph](u|m).\n\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [t - ai * b, b + ai * t, 1 - m * t * t / 2, u - ai];\n  }\n\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [t + ai * (twon - u) / (b * b), phi - ai * t * phi * (twon - u), phi + ai * t * phi * (twon + u), 2 * atan(exp(u)) - halfPi + ai * (twon - u) / b];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n} // Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\n\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi), ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)];\n  }\n\n  return [0, ellipticF(atan(sinhPsi), 1 - m) * sign(psi)];\n} // Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\n\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n\n  return phi / (pow(2, i) * a);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/elliptic.js"],"names":["abs","asin","atan","cos","cosh","epsilon","exp","halfPi","log","pi","pow","quarterPi","sign","sin","sinh","sqrt","tan","tanh","ellipticJi","u","v","m","a","b","c","ellipticJ","ai","phi","t","twon","i","ellipticFi","psi","r","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticF","dPhi"],"mappings":"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","sourcesContent":["import {abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh} from \"./math.js\";\n\n// Returns [sn, cn, dn](u + iv|m).\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [\n      [0, b[0] / b[1]],\n      [1 / b[1], 0],\n      [b[2] / b[1], 0]\n    ];\n  }\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [\n    [a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c],\n    [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c],\n    [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]\n  ];\n}\n\n// Returns [sn, cn, dn, ph](u|m).\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [\n      t - ai * b,\n      b + ai * t,\n      1 - m * t * t / 2,\n      u - ai\n    ];\n  }\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [\n      t + ai * (twon - u) / (b * b),\n      phi - ai * t * phi * (twon - u),\n      phi + ai * t * phi * (twon + u),\n      2 * atan(exp(u)) - halfPi + ai * (twon - u) / b\n    ];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n}\n\n// Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [\n      ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi),\n      ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)\n    ];\n  }\n  return [\n    0,\n    ellipticF(atan(sinhPsi), 1 - m) * sign(psi)\n  ];\n}\n\n// Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n  return phi / (pow(2, i) * a);\n}\n"]},"metadata":{},"sourceType":"module"}