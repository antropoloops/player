{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipClosed.tsx\";\nimport React, { useReducer } from \"react\";\nimport { player } from \"../../player\";\nimport { hasKeyboard } from \"../hasKeyboard\";\nimport \"./ClipClosed.css\";\nexport const ClosedClip = ({\n  clip,\n  onClick\n}) => {\n  const _useReducer = useReducer(x => !x, false),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        isMapKeyboard = _useReducer2[0],\n        toggleMapKeyboard = _useReducer2[1];\n\n  const clipKey = player.control && player.control.keyboard.getKey(clip.id) || \"\";\n\n  function handleKeyToggle() {\n    if (!player.control) {\n      return;\n    }\n\n    const keyboard = player.control.keyboard;\n\n    if (isMapKeyboard) {\n      keyboard.stopMapMode();\n    } else {\n      keyboard.startMapMode(clip.id, newKey => {\n        toggleMapKeyboard(null);\n      });\n    }\n\n    toggleMapKeyboard(null);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Clip closed\",\n    id: \"clip-\".concat(clip.id),\n    style: {\n      backgroundColor: clip.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: clip.title,\n    src: clip.coverUrl,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"meta noselect\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, clip.title)), hasKeyboard() && React.createElement(\"div\", {\n    className: \"keyboard noselect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: isMapKeyboard ? \"active\" : \"inactive\",\n    onClick: handleKeyToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, clipKey)));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipClosed.tsx"],"names":["React","useReducer","player","hasKeyboard","ClosedClip","clip","onClick","x","isMapKeyboard","toggleMapKeyboard","clipKey","control","keyboard","getKey","id","handleKeyToggle","stopMapMode","startMapMode","newKey","backgroundColor","color","title","coverUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,kBAAP;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA4B;AAAA,sBACTL,UAAU,CAACM,CAAC,IAAI,CAACA,CAAP,EAAU,KAAV,CADD;AAAA;AAAA,QAC7CC,aAD6C;AAAA,QAC9BC,iBAD8B;;AAGpD,QAAMC,OAAe,GAClBR,MAAM,CAACS,OAAP,IAAkBT,MAAM,CAACS,OAAP,CAAeC,QAAf,CAAwBC,MAAxB,CAA+BR,IAAI,CAACS,EAApC,CAAnB,IAA+D,EADjE;;AAGA,WAASC,eAAT,GAA2B;AACzB,QAAI,CAACb,MAAM,CAACS,OAAZ,EAAqB;AACnB;AACD;;AAHwB,UAIjBC,QAJiB,GAIJV,MAAM,CAACS,OAJH,CAIjBC,QAJiB;;AAMzB,QAAIJ,aAAJ,EAAmB;AACjBI,MAAAA,QAAQ,CAACI,WAAT;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACK,YAAT,CAAsBZ,IAAI,CAACS,EAA3B,EAAgCI,MAAD,IAAoB;AACjDT,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,OAFD;AAGD;;AACDA,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AAED,SACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,EAAE,iBAAUJ,IAAI,CAACS,EAAf,CAFJ;AAGE,IAAA,KAAK,EAAE;AAAEK,MAAAA,eAAe,EAAEd,IAAI,CAACe;AAAxB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEf,IAAI,CAACgB,KAAf;AAAsB,IAAA,GAAG,EAAEhB,IAAI,CAACiB,QAAhC;AAA0C,IAAA,OAAO,EAAEhB,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAQE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEA,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,IAAI,CAACgB,KAA5B,CADF,CARF,EAWGlB,WAAW,MACV;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEK,aAAa,GAAG,QAAH,GAAc,UADxC;AAEE,IAAA,OAAO,EAAEO,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,OAJH,CADF,CAZJ,CADF;AAwBD,CA9CM","sourcesContent":["import React, { useReducer } from \"react\";\nimport { player } from \"../../player\";\nimport { hasKeyboard } from \"../hasKeyboard\";\nimport \"./ClipClosed.css\";\n\nexport const ClosedClip = ({ clip, onClick }: any) => {\n  const [isMapKeyboard, toggleMapKeyboard] = useReducer(x => !x, false);\n\n  const clipKey: string =\n    (player.control && player.control.keyboard.getKey(clip.id)) || \"\";\n\n  function handleKeyToggle() {\n    if (!player.control) {\n      return;\n    }\n    const { keyboard } = player.control;\n\n    if (isMapKeyboard) {\n      keyboard.stopMapMode();\n    } else {\n      keyboard.startMapMode(clip.id, (newKey: string) => {\n        toggleMapKeyboard(null);\n      });\n    }\n    toggleMapKeyboard(null);\n  }\n\n  return (\n    <div\n      className=\"Clip closed\"\n      id={`clip-${clip.id}`}\n      style={{ backgroundColor: clip.color }}\n    >\n      <div className=\"cover\">\n        <img alt={clip.title} src={clip.coverUrl} onClick={onClick} />\n      </div>\n      <div className=\"meta noselect\" onClick={onClick}>\n        <h3 className=\"title\">{clip.title}</h3>\n      </div>\n      {hasKeyboard() && (\n        <div className=\"keyboard noselect\">\n          <span\n            className={isMapKeyboard ? \"active\" : \"inactive\"}\n            onClick={handleKeyToggle}\n          >\n            {clipKey}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}