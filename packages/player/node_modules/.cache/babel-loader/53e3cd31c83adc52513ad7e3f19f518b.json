{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nexport var visitEachAudioNodeOnce = function visitEachAudioNodeOnce(cycles, visitor) {\n  var counts = new Map();\n\n  var _iterator = _createForOfIteratorHelper(cycles),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cycle = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(cycle),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var audioNode = _step2.value;\n          var count = counts.get(audioNode);\n          counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  counts.forEach(function (count, audioNode) {\n    return visitor(audioNode, count);\n  });\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/helpers/visit-each-audio-node-once.js"],"names":["visitEachAudioNodeOnce","cycles","visitor","counts","Map","cycle","audioNode","count","get","set","undefined","forEach"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,MAAD,EAASC,OAAT,EAAqB;AACvD,MAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AADuD,6CAEnCH,MAFmC;AAAA;;AAAA;AAEvD,wDAA4B;AAAA,UAAjBI,KAAiB;;AAAA,kDACAA,KADA;AAAA;;AAAA;AACxB,+DAA+B;AAAA,cAApBC,SAAoB;AAC3B,cAAMC,KAAK,GAAGJ,MAAM,CAACK,GAAP,CAAWF,SAAX,CAAd;AACAH,UAAAA,MAAM,CAACM,GAAP,CAAWH,SAAX,EAAuBC,KAAK,KAAKG,SAAX,GAAwB,CAAxB,GAA4BH,KAAK,GAAG,CAA1D;AACH;AAJuB;AAAA;AAAA;AAAA;AAAA;AAK3B;AAPsD;AAAA;AAAA;AAAA;AAAA;;AAQvDJ,EAAAA,MAAM,CAACQ,OAAP,CAAe,UAACJ,KAAD,EAAQD,SAAR;AAAA,WAAsBJ,OAAO,CAACI,SAAD,EAAYC,KAAZ,CAA7B;AAAA,GAAf;AACH,CATM","sourcesContent":["export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, (count === undefined) ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=/build/es2018/helpers/visit-each-audio-node-once.js.map"]},"metadata":{},"sourceType":"module"}