{"ast":null,"code":"// import { addResizeObserver } from \"./addResizeObserver\";\nimport Display from \"./display\";\nimport Visuals from \"./visuals\";\nexport class VisualControl {\n  //  private resizeObserver?: ResizeObserver;\n  constructor(audioset, el) {\n    this.el = el;\n    this.display = void 0;\n    this.visuals = void 0;\n    this.display = new Display(el);\n    this.visuals = new Visuals(audioset, this.display);\n    setupVisuals(audioset, this.visuals); // this.resizeObserver = addResizeObserver(\n    //   el,\n    //   debounce((width: number, height: number) => {\n    //     console.log(\"resize!\", width, height);\n    //     this.visuals.resizeSvg(width, height);\n    //   }),\n    // );\n  }\n\n  startClip(clipId) {\n    this.visuals.show(clipId);\n  }\n\n  stopClip(clipId) {\n    this.visuals.hide(clipId);\n  }\n\n  detach() {// if (this.resizeObserver) {\n    //   this.resizeObserver.unobserve(this.display.el);\n    // }\n  }\n\n}\n\nfunction setupVisuals(audioset, visuals) {\n  if (audioset.visuals.mode === \"map\") {\n    fetch(audioset.visuals.geomap.url).then(response => response.json()).then(data => visuals.setGeodata(data));\n  } else {\n    visuals.setup();\n  }\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/index.ts"],"names":["Display","Visuals","VisualControl","constructor","audioset","el","display","visuals","setupVisuals","startClip","clipId","show","stopClip","hide","detach","mode","fetch","geomap","url","then","response","json","data","setGeodata","setup"],"mappings":"AAEA;AACA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,aAAN,CAAoB;AAGzB;AAEAC,EAAAA,WAAW,CAACC,QAAD,EAA6BC,EAA7B,EAAsC;AAAA,SAATA,EAAS,GAATA,EAAS;AAAA,SAJzCC,OAIyC;AAAA,SAHzCC,OAGyC;AAC/C,SAAKD,OAAL,GAAe,IAAIN,OAAJ,CAAYK,EAAZ,CAAf;AACA,SAAKE,OAAL,GAAe,IAAIN,OAAJ,CAAYG,QAAZ,EAAsB,KAAKE,OAA3B,CAAf;AACAE,IAAAA,YAAY,CAACJ,QAAD,EAAW,KAAKG,OAAhB,CAAZ,CAH+C,CAK/C;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEME,EAAAA,SAAP,CAAiBC,MAAjB,EAAiC;AAC/B,SAAKH,OAAL,CAAaI,IAAb,CAAkBD,MAAlB;AACD;;AAEME,EAAAA,QAAP,CAAgBF,MAAhB,EAAgC;AAC9B,SAAKH,OAAL,CAAaM,IAAb,CAAkBH,MAAlB;AACD;;AAEMI,EAAAA,MAAP,GAAgB,CACd;AACA;AACA;AACD;;AA/BwB;;AAkC3B,SAASN,YAAT,CAAsBJ,QAAtB,EAA0CG,OAA1C,EAA4D;AAC1D,MAAIH,QAAQ,CAACG,OAAT,CAAiBQ,IAAjB,KAA0B,KAA9B,EAAqC;AACnCC,IAAAA,KAAK,CAACZ,QAAQ,CAACG,OAAT,CAAiBU,MAAjB,CAAwBC,GAAzB,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIf,OAAO,CAACgB,UAAR,CAAmBD,IAAnB,CAFhB;AAGD,GAJD,MAIO;AACLf,IAAAA,OAAO,CAACiB,KAAR;AACD;AACF","sourcesContent":["import debounce from \"lodash.debounce\";\nimport { Audioset } from \"../audioset\";\n// import { addResizeObserver } from \"./addResizeObserver\";\nimport Display from \"./display\";\nimport Visuals from \"./visuals\";\n\nexport class VisualControl {\n  private display: Display;\n  private visuals: Visuals;\n  //  private resizeObserver?: ResizeObserver;\n\n  constructor(audioset: Audioset, private el: any) {\n    this.display = new Display(el);\n    this.visuals = new Visuals(audioset, this.display);\n    setupVisuals(audioset, this.visuals);\n\n    // this.resizeObserver = addResizeObserver(\n    //   el,\n    //   debounce((width: number, height: number) => {\n    //     console.log(\"resize!\", width, height);\n    //     this.visuals.resizeSvg(width, height);\n    //   }),\n    // );\n  }\n\n  public startClip(clipId: string) {\n    this.visuals.show(clipId);\n  }\n\n  public stopClip(clipId: string) {\n    this.visuals.hide(clipId);\n  }\n\n  public detach() {\n    // if (this.resizeObserver) {\n    //   this.resizeObserver.unobserve(this.display.el);\n    // }\n  }\n}\n\nfunction setupVisuals(audioset: Audioset, visuals: Visuals) {\n  if (audioset.visuals.mode === \"map\") {\n    fetch(audioset.visuals.geomap.url)\n      .then(response => response.json())\n      .then(data => visuals.setGeodata(data));\n  } else {\n    visuals.setup();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}