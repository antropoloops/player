{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport * as Screenfull from \"screenfull\";\nexport function useFullscreen() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isFullscreen = _useState2[0],\n        setIsFullscreen = _useState2[1];\n\n  useEffect(() => {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n\n      const handleChange = event => {\n        setIsFullscreen(screen.isFullscreen);\n      };\n\n      screen.on(\"change\", handleChange);\n      return () => {\n        screen.off(\"change\", handleChange);\n      };\n    }\n  });\n\n  function toggleFullscreen() {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n      screen.isFullscreen ? screen.exit() : screen.request();\n    }\n  }\n\n  return {\n    isFullscreen,\n    toggleFullscreen\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/useFullscreen.ts"],"names":["useEffect","useState","Screenfull","useFullscreen","isFullscreen","setIsFullscreen","isEnabled","screen","handleChange","event","on","off","toggleFullscreen","exit","request"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,UAAZ,MAA4B,YAA5B;AAOA,OAAO,SAASC,aAAT,GAAqC;AAAA,oBACFF,QAAQ,CAAC,KAAD,CADN;AAAA;AAAA,QACnCG,YADmC;AAAA,QACrBC,eADqB;;AAE1CL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,UAAU,CAACI,SAAf,EAA0B;AACxB,YAAMC,MAAM,GAAGL,UAAf;;AACA,YAAMM,YAAY,GAAIC,KAAD,IAAkB;AACrCJ,QAAAA,eAAe,CAACE,MAAM,CAACH,YAAR,CAAf;AACD,OAFD;;AAIAG,MAAAA,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoBF,YAApB;AACA,aAAO,MAAM;AACXD,QAAAA,MAAM,CAACI,GAAP,CAAW,QAAX,EAAqBH,YAArB;AACD,OAFD;AAGD;AACF,GAZQ,CAAT;;AAaA,WAASI,gBAAT,GAA4B;AAC1B,QAAIV,UAAU,CAACI,SAAf,EAA0B;AACxB,YAAMC,MAAM,GAAGL,UAAf;AACAK,MAAAA,MAAM,CAACH,YAAP,GAAsBG,MAAM,CAACM,IAAP,EAAtB,GAAsCN,MAAM,CAACO,OAAP,EAAtC;AACD;AACF;;AACD,SAAO;AAAEV,IAAAA,YAAF;AAAgBQ,IAAAA;AAAhB,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport * as Screenfull from \"screenfull\";\n\nexport interface Fullscreen {\n  isFullscreen: boolean;\n  toggleFullscreen: () => void;\n}\n\nexport function useFullscreen(): Fullscreen {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  useEffect(() => {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n      const handleChange = (event: Event) => {\n        setIsFullscreen(screen.isFullscreen);\n      };\n\n      screen.on(\"change\", handleChange);\n      return () => {\n        screen.off(\"change\", handleChange);\n      };\n    }\n  });\n  function toggleFullscreen() {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n      screen.isFullscreen ? screen.exit() : screen.request();\n    }\n  }\n  return { isFullscreen, toggleFullscreen };\n}\n"]},"metadata":{},"sourceType":"module"}