{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n  return (nativeContext, options) => {\n    const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, ntvCntxt => ntvCntxt.createDynamicsCompressor());\n    assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options); // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    } // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n\n\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n    return nativeDynamicsCompressorNode;\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/native-dynamics-compressor-node-factory.js"],"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","createNativeDynamicsCompressorNodeFactory","createNativeAudioNode","createNotSupportedError","nativeContext","options","nativeDynamicsCompressorNode","ntvCntxt","createDynamicsCompressor","channelCount","channelCountMode"],"mappings":"AAAA,SAASA,oCAAT,QAAqD,uDAArD;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AACA,OAAO,MAAMC,yCAAyC,GAAG,CAACC,qBAAD,EAAwBC,uBAAxB,KAAoD;AACzG,SAAO,CAACC,aAAD,EAAgBC,OAAhB,KAA4B;AAC/B,UAAMC,4BAA4B,GAAGJ,qBAAqB,CAACE,aAAD,EAAiBG,QAAD,IAAcA,QAAQ,CAACC,wBAAT,EAA9B,CAA1D;AACAR,IAAAA,4BAA4B,CAACM,4BAAD,EAA+BD,OAA/B,CAA5B,CAF+B,CAG/B;;AACA,QAAIA,OAAO,CAACI,YAAR,GAAuB,CAA3B,EAA8B;AAC1B,YAAMN,uBAAuB,EAA7B;AACH,KAN8B,CAO/B;;;AACA,QAAIE,OAAO,CAACK,gBAAR,KAA6B,KAAjC,EAAwC;AACpC,YAAMP,uBAAuB,EAA7B;AACH;;AACDJ,IAAAA,oCAAoC,CAACO,4BAAD,EAA+BD,OAA/B,EAAwC,QAAxC,CAApC;AACAN,IAAAA,oCAAoC,CAACO,4BAAD,EAA+BD,OAA/B,EAAwC,MAAxC,CAApC;AACAN,IAAAA,oCAAoC,CAACO,4BAAD,EAA+BD,OAA/B,EAAwC,OAAxC,CAApC;AACAN,IAAAA,oCAAoC,CAACO,4BAAD,EAA+BD,OAA/B,EAAwC,SAAxC,CAApC;AACAN,IAAAA,oCAAoC,CAACO,4BAAD,EAA+BD,OAA/B,EAAwC,WAAxC,CAApC;AACA,WAAOC,4BAAP;AACH,GAjBD;AAkBH,CAnBM","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDynamicsCompressor());\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-dynamics-compressor-node-factory.js.map"]},"metadata":{},"sourceType":"module"}