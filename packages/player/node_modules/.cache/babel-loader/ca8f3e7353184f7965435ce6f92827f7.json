{"ast":null,"code":"export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw createNotSupportedError();\n      }\n\n      const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n      super(context, true, nativeMediaStreamAudioSourceNode, null);\n      this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n    }\n\n    get mediaStream() {\n      return this._nativeMediaStreamAudioSourceNode.mediaStream;\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/media-stream-audio-source-node-constructor.js"],"names":["createMediaStreamAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaStreamAudioSourceNode","createNotSupportedError","getNativeContext","isNativeOfflineAudioContext","MediaStreamAudioSourceNode","constructor","context","options","nativeContext","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","mediaStream"],"mappings":"AAAA,OAAO,MAAMA,2CAA2C,GAAG,CAACC,oBAAD,EAAuBC,sCAAvB,EAA+DC,uBAA/D,EAAwFC,gBAAxF,EAA0GC,2BAA1G,KAA0I;AACjM,SAAO,MAAMC,0BAAN,SAAyCL,oBAAzC,CAA8D;AACjEM,IAAAA,WAAW,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAC1B,YAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAD,CAAtC;;AACA,UAAIH,2BAA2B,CAACK,aAAD,CAA/B,EAAgD;AAC5C,cAAMP,uBAAuB,EAA7B;AACH;;AACD,YAAMQ,gCAAgC,GAAGT,sCAAsC,CAACQ,aAAD,EAAgBD,OAAhB,CAA/E;AACA,YAAMD,OAAN,EAAe,IAAf,EAAqBG,gCAArB,EAAuD,IAAvD;AACA,WAAKC,iCAAL,GAAyCD,gCAAzC;AACH;;AACD,QAAIE,WAAJ,GAAkB;AACd,aAAO,KAAKD,iCAAL,CAAuCC,WAA9C;AACH;;AAZgE,GAArE;AAcH,CAfM","sourcesContent":["export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw createNotSupportedError();\n            }\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/media-stream-audio-source-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}