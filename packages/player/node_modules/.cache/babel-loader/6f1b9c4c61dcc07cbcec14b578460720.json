{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Project.tsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background: url(/bg-low.jpg) no-repeat center center fixed;\\n  background-size: cover;\\n  color: white;\\n\\n  & > div: {\\n    padding: 1rem;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Link } from \"react-router-dom\";\nimport { Header } from \"./shared/Header\";\nimport { Markdown } from \"./shared/Markdown\";\n\nconst Project = ({\n  audioset\n}) => {\n  const audiosets = audioset.audiosets || [];\n  const isDesktop = useMediaQuery({\n    query: \"(orientation: landscape)\"\n  });\n  return jsx(\"div\", {\n    className: \"App Project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, jsx(Header, {\n    meta: audioset.meta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), jsx(\"div\", {\n    className: \"scroll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, jsx(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, !isDesktop && jsx(Markdown, {\n    markdown: audioset.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), jsx(\"ul\", {\n    className: \"Audiosets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, audiosets.map(child => jsx(AudiosetView, {\n    key: child.id,\n    audioset: child,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))))), jsx(\"div\", {\n    css: cssReadme,\n    className: \"visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, isDesktop && jsx(Markdown, {\n    markdown: audioset.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), jsx(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Welcome\"));\n};\n\nconst cssReadme = css(_templateObject());\nexport default Project;\nconst cssCover = css(_templateObject2());\nconst cssAudioset = css(_templateObject3());\n\nconst AudiosetView = ({\n  audioset\n}) => jsx(Link, {\n  to: \"/set/\".concat(audioset.publish_path),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, jsx(\"div\", {\n  className: \"Audioset\",\n  css: cssAudioset,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, jsx(\"img\", {\n  css: cssCover,\n  src: audioset.logo_url,\n  alt: audioset.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), jsx(\"div\", {\n  className: \"meta\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, jsx(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, audioset.title, \" \\u2192\"), jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, audioset.description))));","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Project.tsx"],"names":["css","jsx","useMediaQuery","Link","Header","Markdown","Project","audioset","audiosets","isDesktop","query","meta","readme","map","child","id","cssReadme","cssCover","cssAudioset","AudiosetView","publish_path","logo_url","title","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC;AAC9C,QAAMC,SAAS,GAAGD,QAAQ,CAACC,SAAT,IAAsB,EAAxC;AACA,QAAMC,SAAS,GAAGP,aAAa,CAAC;AAC9BQ,IAAAA,KAAK,EAAE;AADuB,GAAD,CAA/B;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,MAAD;AAAQ,IAAA,IAAI,EAAEH,QAAQ,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,IAAc,IAAC,QAAD;AAAU,IAAA,QAAQ,EAAEF,QAAQ,CAACI,IAAT,CAAcC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,CAACK,GAAV,CAAcC,KAAK,IAClB,IAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAzB;AAA6B,IAAA,QAAQ,EAAED,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF,CAFF,EAYE;AAAK,IAAA,GAAG,EAAEE,SAAV;AAAqB,IAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,IAAI,IAAC,QAAD;AAAU,IAAA,QAAQ,EAAEF,QAAQ,CAACI,IAAT,CAAcC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,CAZF,EAeE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CADF;AAmBD,CAzBD;;AA2BA,MAAMI,SAAS,GAAGhB,GAAH,mBAAf;AAUA,eAAeM,OAAf;AAEA,MAAMW,QAAQ,GAAGjB,GAAH,oBAAd;AAIA,MAAMkB,WAAW,GAAGlB,GAAH,oBAAjB;;AAQA,MAAMmB,YAAY,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KACnB,IAAC,IAAD;AAAM,EAAA,EAAE,iBAAUA,QAAQ,CAACa,YAAnB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,UAAf;AAA0B,EAAA,GAAG,EAAEF,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,QAAV;AAAoB,EAAA,GAAG,EAAEV,QAAQ,CAACc,QAAlC;AAA4C,EAAA,GAAG,EAAEd,QAAQ,CAACe,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKf,QAAQ,CAACe,KAAd,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIf,QAAQ,CAACgB,WAAb,CAFF,CAFF,CADF,CADF","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Link } from \"react-router-dom\";\nimport { AudiosetProject, AudiosetReference } from \"../Audioset\";\nimport { Header } from \"./shared/Header\";\nimport { Markdown } from \"./shared/Markdown\";\n\ninterface ProjectProps {\n  audioset: AudiosetProject;\n}\n\nconst Project = ({ audioset }: ProjectProps) => {\n  const audiosets = audioset.audiosets || [];\n  const isDesktop = useMediaQuery({\n    query: \"(orientation: landscape)\",\n  });\n\n  return (\n    <div className=\"App Project\">\n      <Header meta={audioset.meta} />\n      <div className=\"scroll\">\n        <div className=\"content\">\n          {!isDesktop && <Markdown markdown={audioset.meta.readme} />}\n          <ul className=\"Audiosets\">\n            {audiosets.map(child => (\n              <AudiosetView key={child.id} audioset={child} />\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div css={cssReadme} className=\"visuals\">\n        {isDesktop && <Markdown markdown={audioset.meta.readme} />}\n      </div>\n      <div className=\"footer\">Welcome</div>\n    </div>\n  );\n};\n\nconst cssReadme = css`\n  background: url(/bg-low.jpg) no-repeat center center fixed;\n  background-size: cover;\n  color: white;\n\n  & > div: {\n    padding: 1rem;\n  }\n`;\n\nexport default Project;\n\nconst cssCover = css`\n  width: 100px;\n`;\n\nconst cssAudioset = css`\n  display: flex;\n  flex-direction: row;\n`;\n\ninterface AudiosetViewProps {\n  audioset: AudiosetReference;\n}\nconst AudiosetView = ({ audioset }: AudiosetViewProps) => (\n  <Link to={`/set/${audioset.publish_path}`}>\n    <div className=\"Audioset\" css={cssAudioset}>\n      <img css={cssCover} src={audioset.logo_url} alt={audioset.title} />\n      <div className=\"meta\">\n        <h3>{audioset.title} â†’</h3>\n        <p>{audioset.description}</p>\n      </div>\n    </div>\n  </Link>\n);\n"]},"metadata":{},"sourceType":"module"}