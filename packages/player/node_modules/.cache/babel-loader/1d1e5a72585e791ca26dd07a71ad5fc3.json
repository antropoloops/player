{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Sidebar.tsx\";\nimport React, { useState } from \"react\";\nimport { Header } from \"../shared/Header\";\nimport { Scroll } from \"../shared/Scroll\";\nimport { Controller } from \"./Controller\";\nimport { Footer } from \"./Footer\";\nimport Preview from \"./Preview\";\nexport const Sidebar = ({\n  audioset,\n  onFullscreen\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isReady = _useState2[0],\n        setReady = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    meta: audioset.meta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, isReady ? React.createElement(Controller, {\n    audioset: audioset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : React.createElement(Preview, {\n    audioset: audioset,\n    resourceStatus: {\n      stage: \"ready\",\n      total: 0\n    },\n    onStart: () => setReady(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    onFullscreen: onFullscreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Sidebar.tsx"],"names":["React","useState","Header","Scroll","Controller","Footer","Preview","Sidebar","audioset","onFullscreen","isReady","setReady","meta","stage","total"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAOA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA8C;AAAA,oBACvCR,QAAQ,CAAC,KAAD,CAD+B;AAAA;AAAA,QAC5DS,OAD4D;AAAA,QACnDC,QADmD;;AAEnE,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEH,QAAQ,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GACN,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEA,QADZ;AAEE,IAAA,cAAc,EAAE;AAAEK,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAFlB;AAGE,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAAC,IAAD,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,CAFF,EAeE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD,CArBM","sourcesContent":["import React, { useState } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { Header } from \"../shared/Header\";\nimport { Scroll } from \"../shared/Scroll\";\nimport { Controller } from \"./Controller\";\nimport { Footer } from \"./Footer\";\nimport Preview from \"./Preview\";\n\ninterface SidebarProps {\n  audioset: Audioset;\n  onFullscreen: () => void;\n}\n\nexport const Sidebar = ({ audioset, onFullscreen }: SidebarProps) => {\n  const [isReady, setReady] = useState(false);\n  return (\n    <>\n      <Header meta={audioset.meta} />\n      <Scroll>\n        <div className=\"content\">\n          {isReady ? (\n            <Controller audioset={audioset} />\n          ) : (\n            <Preview\n              audioset={audioset}\n              resourceStatus={{ stage: \"ready\", total: 0 }}\n              onStart={() => setReady(true)}\n            />\n          )}\n        </div>\n      </Scroll>\n      <Footer onFullscreen={onFullscreen} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}