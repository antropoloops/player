{"ast":null,"code":"import _objectSpread from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  detune: 0,\n  frequency: 440,\n  type: 'sine'\n};\nexport var createOscillatorNodeConstructor = function createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(OscillatorNode, _audioNodeConstructor);\n\n    var _super = _createSuper(OscillatorNode);\n\n    function OscillatorNode(context) {\n      var _this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n\n      _classCallCheck(this, OscillatorNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;\n      var nyquist = context.sampleRate / 2;\n      _this = _super.call(this, context, false, nativeOscillatorNode, oscillatorNodeRenderer); // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n\n      _this._detune = createAudioParam(_assertThisInitialized(_this), isOffline, nativeOscillatorNode.detune, 153600, -153600); // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n\n      _this._frequency = createAudioParam(_assertThisInitialized(_this), isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n      _this._nativeOscillatorNode = nativeOscillatorNode;\n      _this._onended = null;\n      _this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n\n      if (_this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n        _this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;\n      }\n\n      return _this;\n    }\n\n    _createClass(OscillatorNode, [{\n      key: \"setPeriodicWave\",\n      value: function setPeriodicWave(periodicWave) {\n        this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n\n        if (this._oscillatorNodeRenderer !== null) {\n          this._oscillatorNodeRenderer.periodicWave = periodicWave;\n        }\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        this._nativeOscillatorNode.start(when);\n\n        if (this._oscillatorNodeRenderer !== null) {\n          this._oscillatorNodeRenderer.start = when;\n        } else {\n          setInternalStateToActive(this);\n\n          var resetInternalStateToPassive = function resetInternalStateToPassive() {\n            _this2._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.\n\n\n            setTimeout(function () {\n              return setInternalStateToPassive(_this2);\n            }, 1000);\n          };\n\n          this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        this._nativeOscillatorNode.stop(when);\n\n        if (this._oscillatorNodeRenderer !== null) {\n          this._oscillatorNodeRenderer.stop = when;\n        }\n      }\n    }, {\n      key: \"detune\",\n      get: function get() {\n        return this._detune;\n      }\n    }, {\n      key: \"frequency\",\n      get: function get() {\n        return this._frequency;\n      }\n    }, {\n      key: \"onended\",\n      get: function get() {\n        return this._onended;\n      },\n      set: function set(value) {\n        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n        this._nativeOscillatorNode.onended = wrappedListener;\n        var nativeOnEnded = this._nativeOscillatorNode.onended;\n        this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n      }\n    }, {\n      key: \"type\",\n      get: function get() {\n        return this._nativeOscillatorNode.type;\n      },\n      set: function set(value) {\n        this._nativeOscillatorNode.type = value; // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n\n        if (value === 'custom') {\n          throw createInvalidStateError();\n        }\n\n        if (this._oscillatorNodeRenderer !== null) {\n          this._oscillatorNodeRenderer.periodicWave = null;\n        }\n      }\n    }]);\n\n    return OscillatorNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-constructor.js"],"names":["setInternalStateToActive","setInternalStateToPassive","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","detune","frequency","type","createOscillatorNodeConstructor","audioNodeConstructor","createAudioParam","createInvalidStateError","createNativeOscillatorNode","createOscillatorNodeRenderer","getNativeContext","isNativeOfflineAudioContext","wrapEventListener","context","options","nativeContext","mergedOptions","nativeOscillatorNode","isOffline","oscillatorNodeRenderer","nyquist","sampleRate","_detune","_frequency","_nativeOscillatorNode","_onended","_oscillatorNodeRenderer","periodicWave","undefined","setPeriodicWave","when","start","resetInternalStateToPassive","removeEventListener","setTimeout","addEventListener","stop","value","wrappedListener","onended","nativeOnEnded"],"mappings":"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","sourcesContent":["import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = ((isOffline) ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = (nativeOnEnded !== null && nativeOnEnded === wrappedListener) ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n            if (value === 'custom') {\n                throw createInvalidStateError();\n            }\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/oscillator-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}