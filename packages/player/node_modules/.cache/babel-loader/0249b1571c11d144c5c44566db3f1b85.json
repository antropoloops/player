{"ast":null,"code":"import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n  let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n\n  if (nodeToProcessorMap === undefined) {\n    nodeToProcessorMap = new WeakMap();\n    NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n  }\n\n  const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n  nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n  return audioWorkletProcessorPromise;\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor.js"],"names":["NODE_TO_PROCESSOR_MAPS","createAudioWorkletProcessorPromise","createAudioWorkletProcessor","nativeContext","nativeAudioWorkletNode","processorConstructor","audioWorkletNodeOptions","nodeToProcessorMap","get","undefined","WeakMap","set","audioWorkletProcessorPromise"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,YAAvC;AACA,SAASC,kCAAT,QAAmD,0CAAnD;AACA,OAAO,MAAMC,2BAA2B,GAAG,CAACC,aAAD,EAAgBC,sBAAhB,EAAwCC,oBAAxC,EAA8DC,uBAA9D,KAA0F;AACjI,MAAIC,kBAAkB,GAAGP,sBAAsB,CAACQ,GAAvB,CAA2BL,aAA3B,CAAzB;;AACA,MAAII,kBAAkB,KAAKE,SAA3B,EAAsC;AAClCF,IAAAA,kBAAkB,GAAG,IAAIG,OAAJ,EAArB;AACAV,IAAAA,sBAAsB,CAACW,GAAvB,CAA2BR,aAA3B,EAA0CI,kBAA1C;AACH;;AACD,QAAMK,4BAA4B,GAAGX,kCAAkC,CAACI,oBAAD,EAAuBC,uBAAvB,CAAvE;AACAC,EAAAA,kBAAkB,CAACI,GAAnB,CAAuBP,sBAAvB,EAA+CQ,4BAA/C;AACA,SAAOA,4BAAP;AACH,CATM","sourcesContent":["import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=/build/es2018/helpers/create-audio-worklet-processor.js.map"]},"metadata":{},"sourceType":"module"}