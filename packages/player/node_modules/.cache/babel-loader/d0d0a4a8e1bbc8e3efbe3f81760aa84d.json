{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/LoadAudioset.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Browser } from \"./Browser\";\nimport Loading from \"./Loading\";\nimport NotFound from \"./NotFound\";\nimport { Player } from \"./Player\";\nimport { useBundleLoadStatus } from \"./useAudiosetLoad\";\nexport const LoadAudioset = ({\n  idOrUrl\n}) => {\n  const loadStatus = useBundleLoadStatus(idOrUrl);\n\n  switch (loadStatus.stage) {\n    case \"loading\":\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n\n    case \"ready\":\n      const audioset = loadStatus.payload;\n      return audioset.type === \"project\" ? React.createElement(Browser, {\n        audioset: audioset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }) : React.createElement(Player, {\n        audioset: audioset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n\n    case \"error\":\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n\n    default:\n      return React.createElement(\"pre\", {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, JSON.stringify(loadStatus, null, 2));\n  }\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/LoadAudioset.tsx"],"names":["React","Browser","Loading","NotFound","Player","useBundleLoadStatus","LoadAudioset","idOrUrl","loadStatus","stage","audioset","payload","type","color","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,mBAAT,QAAoC,mBAApC;AAMA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoC;AAC9D,QAAMC,UAAU,GAAGH,mBAAmB,CAACE,OAAD,CAAtC;;AAEA,UAAQC,UAAU,CAACC,KAAnB;AACE,SAAK,SAAL;AACE,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,OAAL;AACE,YAAMC,QAAQ,GAAGF,UAAU,CAACG,OAA5B;AACA,aAAOD,QAAQ,CAACE,IAAT,KAAkB,SAAlB,GACL,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAEF,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAGL,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;;AAKF,SAAK,OAAL;AACE,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF;AACE,aACE;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,IAAI,CAACC,SAAL,CAAeP,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,CADH,CADF;AAbJ;AAmBD,CAtBM","sourcesContent":["import React from \"react\";\nimport { Audioset, Project } from \"../audioset\";\nimport \"./App.css\";\nimport { Browser } from \"./Browser\";\nimport Loading from \"./Loading\";\nimport NotFound from \"./NotFound\";\nimport { Player } from \"./Player\";\nimport { useBundleLoadStatus } from \"./useAudiosetLoad\";\n\ninterface LoadAudiosetProps {\n  idOrUrl: string;\n}\n\nexport const LoadAudioset = ({ idOrUrl }: LoadAudiosetProps) => {\n  const loadStatus = useBundleLoadStatus(idOrUrl);\n\n  switch (loadStatus.stage) {\n    case \"loading\":\n      return <Loading />;\n    case \"ready\":\n      const audioset = loadStatus.payload;\n      return audioset.type === \"project\" ? (\n        <Browser audioset={audioset as Project} />\n      ) : (\n        <Player audioset={audioset as Audioset} />\n      );\n    case \"error\":\n      return <NotFound />;\n    default:\n      return (\n        <pre style={{ color: \"white\" }}>\n          {JSON.stringify(loadStatus, null, 2)}\n        </pre>\n      );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}