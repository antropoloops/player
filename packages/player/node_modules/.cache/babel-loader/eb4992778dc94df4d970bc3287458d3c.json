{"ast":null,"code":"import _classCallCheck from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var BundleLoader=/*#__PURE__*/function(){function BundleLoader(onAudiosetStatusChange){_classCallCheck(this,BundleLoader);this.onAudiosetStatusChange=onAudiosetStatusChange;this.status={stage:\"pending\"};this.fetch=function(){return Promise.reject();};}_createClass(BundleLoader,[{key:\"loadBundle\",value:function loadBundle(audiosetId){var _this=this;this.setStatus({stage:\"loading\",payload:audiosetId});return this.fetch(audiosetId).then(function(audioset){return _this.setStatus({stage:\"ready\",payload:audioset});}).catch(function(error){return _this.setStatus({stage:\"error\",error:error});});}},{key:\"setStatus\",value:function setStatus(status){this.status=status;this.onAudiosetStatusChange(status);return status;}}]);return BundleLoader;}();","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/audioset/BundleLoader.ts"],"names":["BundleLoader","onAudiosetStatusChange","status","stage","fetch","Promise","reject","audiosetId","setStatus","payload","then","audioset","catch","error"],"mappings":"sTASA,UAAaA,CAAAA,YAAb,yBAGE,sBAAoBC,sBAApB,CAA0D,yCAAtCA,sBAAsC,CAAtCA,sBAAsC,MAFnDC,MAEmD,CAFxB,CAAEC,KAAK,CAAE,SAAT,CAEwB,MAEnDC,KAFmD,CAE5B,iBAAMC,CAAAA,OAAO,CAACC,MAAR,EAAN,EAF4B,CAAE,CAH9D,uEAOoBC,UAPpB,CAOmE,gBAC/D,KAAKC,SAAL,CAAe,CAAEL,KAAK,CAAE,SAAT,CAAoBM,OAAO,CAAEF,UAA7B,CAAf,EACA,MAAO,MAAKH,KAAL,CAAWG,UAAX,EACJG,IADI,CACC,SAACC,QAAD,QAAc,CAAA,KAAI,CAACH,SAAL,CAAe,CAAEL,KAAK,CAAE,OAAT,CAAkBM,OAAO,CAAEE,QAA3B,CAAf,CAAd,EADD,EAEJC,KAFI,CAEE,SAACC,KAAD,QAAW,CAAA,KAAI,CAACL,SAAL,CAAe,CAAEL,KAAK,CAAE,OAAT,CAAkBU,KAAK,CAALA,KAAlB,CAAf,CAAX,EAFF,CAAP,CAGD,CAZH,4CAcoBX,MAdpB,CAc8C,CAC1C,KAAKA,MAAL,CAAcA,MAAd,CACA,KAAKD,sBAAL,CAA4BC,MAA5B,EACA,MAAOA,CAAAA,MAAP,CACD,CAlBH","sourcesContent":["import { Bundle } from \"./Bundle\";\nimport { LoadStatus } from \"./LoadStatus\";\n\nexport type BundleLoadStatus = LoadStatus<Bundle, string>;\n\nexport type FetchAudioset = (id: string) => Promise<Bundle>;\n\ntype LoadListener = (status: BundleLoadStatus) => void;\n\nexport class BundleLoader {\n  public status: BundleLoadStatus = { stage: \"pending\" };\n\n  constructor(private onAudiosetStatusChange: LoadListener) {}\n\n  public fetch: FetchAudioset = () => Promise.reject();\n\n  public loadBundle(audiosetId: string): Promise<BundleLoadStatus> {\n    this.setStatus({ stage: \"loading\", payload: audiosetId });\n    return this.fetch(audiosetId)\n      .then((audioset) => this.setStatus({ stage: \"ready\", payload: audioset }))\n      .catch((error) => this.setStatus({ stage: \"error\", error }));\n  }\n\n  private setStatus(status: BundleLoadStatus) {\n    this.status = status;\n    this.onAudiosetStatusChange(status);\n    return status;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}