{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var context;export function getAudioContext(){return _getAudioContext.apply(this,arguments);}function _getAudioContext(){_getAudioContext=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!context){_context.next=2;break;}return _context.abrupt(\"return\",context);case 2:context=createAudioContext();if(!context.resume){_context.next=8;break;}console.log(\"trying to resume...\");_context.next=7;return context.resume();case 7:console.log(\"resumed!\");case 8:console.log(\"context ready!\");return _context.abrupt(\"return\",context);case 10:case\"end\":return _context.stop();}}},_callee);}));return _getAudioContext.apply(this,arguments);}function createAudioContext(){console.log(\"create context\");// iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\nvar ctx=new AudioContext();var buffer=ctx.createBuffer(1,1,ctx.sampleRate);var source=ctx.createBufferSource();source.buffer=buffer;source.connect(ctx.destination);source.start(0);return ctx;}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/Player/AudioContext.ts"],"names":["context","getAudioContext","createAudioContext","resume","console","log","ctx","AudioContext","buffer","createBuffer","sampleRate","source","createBufferSource","connect","destination","start"],"mappings":"qTAAA,MAAO,IAAIA,CAAAA,OAAJ,CAEP,eAAsBC,CAAAA,eAAtB,kD,qGAAO,uIACDD,OADC,yDACeA,OADf,SAGLA,OAAO,CAAGE,kBAAkB,EAA5B,CAHK,IAIDF,OAAO,CAACG,MAJP,yBAKHC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EALG,sBAMGL,CAAAA,OAAO,CAACG,MAAR,EANH,QAOHC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAPG,OASLD,OAAO,CAACC,GAAR,CAAY,gBAAZ,EATK,gCAUEL,OAVF,yD,kDAaP,QAASE,CAAAA,kBAAT,EAA8B,CAC5BE,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA;AACA,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,YAAJ,EAAZ,CACA,GAAMC,CAAAA,MAAM,CAAGF,GAAG,CAACG,YAAJ,CAAiB,CAAjB,CAAoB,CAApB,CAAuBH,GAAG,CAACI,UAA3B,CAAf,CACA,GAAMC,CAAAA,MAAM,CAAGL,GAAG,CAACM,kBAAJ,EAAf,CACAD,MAAM,CAACH,MAAP,CAAgBA,MAAhB,CACAG,MAAM,CAACE,OAAP,CAAeP,GAAG,CAACQ,WAAnB,EACAH,MAAM,CAACI,KAAP,CAAa,CAAb,EACA,MAAOT,CAAAA,GAAP,CACD","sourcesContent":["export let context: AudioContext | undefined;\n\nexport async function getAudioContext(): Promise<AudioContext> {\n  if (context) return context;\n\n  context = createAudioContext();\n  if (context.resume) {\n    console.log(\"trying to resume...\");\n    await context.resume();\n    console.log(\"resumed!\");\n  }\n  console.log(\"context ready!\");\n  return context;\n}\n\nfunction createAudioContext() {\n  console.log(\"create context\");\n  // iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\n  const ctx = new AudioContext();\n  const buffer = ctx.createBuffer(1, 1, ctx.sampleRate);\n  const source = ctx.createBufferSource();\n  source.buffer = buffer;\n  source.connect(ctx.destination);\n  source.start(0);\n  return ctx;\n}\n"]},"metadata":{},"sourceType":"module"}