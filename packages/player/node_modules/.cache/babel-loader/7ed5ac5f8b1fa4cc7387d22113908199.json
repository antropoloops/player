{"ast":null,"code":"import { debounce } from \"lodash\";\nimport Visuals from \"./visuals\";\nimport Display from \"./display\";\nexport default function createVisuals(audioset, el) {\n  const display = new Display(el);\n  const visuals = new Visuals(audioset, display);\n  setupVisuals(audioset, visuals);\n  window.addEventListener(\"resize\", debounce(() => {\n    visuals.resizeSvg();\n  }));\n  return {\n    start: clipId => visuals.show(clipId),\n    stop: clipId => visuals.hide(clipId)\n  };\n}\n\nfunction setupVisuals(audioset, visuals) {\n  if (audioset.visuals.mode === \"map\") {\n    fetch(audioset.visuals.geomap.url).then(response => response.json()).then(data => visuals.setGeodata(data));\n  } else {\n    visuals.setup();\n  }\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/index.ts"],"names":["debounce","Visuals","Display","createVisuals","audioset","el","display","visuals","setupVisuals","window","addEventListener","resizeSvg","start","clipId","show","stop","hide","mode","fetch","geomap","url","then","response","json","data","setGeodata","setup"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,eAAe,SAASC,aAAT,CAAuBC,QAAvB,EAA2CC,EAA3C,EAAoD;AACjE,QAAMC,OAAO,GAAG,IAAIJ,OAAJ,CAAYG,EAAZ,CAAhB;AACA,QAAME,OAAO,GAAG,IAAIN,OAAJ,CAAYG,QAAZ,EAAsBE,OAAtB,CAAhB;AAEAE,EAAAA,YAAY,CAACJ,QAAD,EAAWG,OAAX,CAAZ;AAEAE,EAAAA,MAAM,CAACC,gBAAP,CACE,QADF,EAEEV,QAAQ,CAAC,MAAM;AACbO,IAAAA,OAAO,CAACI,SAAR;AACD,GAFO,CAFV;AAOA,SAAO;AACLC,IAAAA,KAAK,EAAGC,MAAD,IAAoBN,OAAO,CAACO,IAAR,CAAaD,MAAb,CADtB;AAELE,IAAAA,IAAI,EAAGF,MAAD,IAAoBN,OAAO,CAACS,IAAR,CAAaH,MAAb;AAFrB,GAAP;AAID;;AACD,SAASL,YAAT,CAAsBJ,QAAtB,EAA0CG,OAA1C,EAA4D;AAC1D,MAAIH,QAAQ,CAACG,OAAT,CAAiBU,IAAjB,KAA0B,KAA9B,EAAqC;AACnCC,IAAAA,KAAK,CAACd,QAAQ,CAACG,OAAT,CAAiBY,MAAjB,CAAwBC,GAAzB,CAAL,CAAmCC,IAAnC,CAAyCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAtD,EAAuEF,IAAvE,CAA6EG,IAAD,IAAUjB,OAAO,CAACkB,UAAR,CAAmBD,IAAnB,CAAtF;AACD,GAFD,MAEO;AACLjB,IAAAA,OAAO,CAACmB,KAAR;AACD;AACF","sourcesContent":["import { debounce } from \"lodash\";\nimport Visuals from \"./visuals\";\nimport Display from \"./display\";\nimport { Audioset } from \"../Audioset\";\n\nexport default function createVisuals(audioset: Audioset, el: any) {\n  const display = new Display(el);\n  const visuals = new Visuals(audioset, display);\n\n  setupVisuals(audioset, visuals);\n\n  window.addEventListener(\n    \"resize\",\n    debounce(() => {\n      visuals.resizeSvg();\n    }),\n  );\n\n  return {\n    start: (clipId: string) => visuals.show(clipId),\n    stop: (clipId: string) => visuals.hide(clipId),\n  };\n}\nfunction setupVisuals(audioset: Audioset, visuals: Visuals) {\n  if (audioset.visuals.mode === \"map\") {\n    fetch(audioset.visuals.geomap.url).then((response) => response.json()).then((data) => visuals.setGeodata(data));\n  } else {\n    visuals.setup();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}