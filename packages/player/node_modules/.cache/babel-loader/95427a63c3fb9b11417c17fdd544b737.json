{"ast":null,"code":"import { createAudioset } from \"../../audioset\"; // const PRODUCTION = `https://antropoloops-production.s3.eu-west-3.amazonaws.com/files`;\n\nconst STAGING = `https://play-admin.antropoloops.com/api/1.0/index`; // const getProductionUrl = (idOrUrl: string) =>\n//   idOrUrl.endsWith(\".json\")\n//     ? idOrUrl\n//     : `${PRODUCTION}/${idOrUrl}.audioset.json`;\n// const dbServerUrl = (idOrUrl: string) =>\n//   idOrUrl === \"index\"\n//     ? `http://localhost:1234/index`\n//     : `http://localhost:1234/set/${idOrUrl}`;\n\nconst getStaginUrl = idOrUrl => idOrUrl.endsWith(\".json\") ? idOrUrl : idOrUrl === \"index\" ? STAGING : `${STAGING}/${idOrUrl}`; // const getUrl = getProductionUrl; // dbServerUrl;\n\n\nconst getUrl = getStaginUrl;\nexport function fetchAudioset(idOrUrl) {\n  return fetch(getUrl(idOrUrl)).then(r => r.json()).then(createAudioset);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/ui/lib/fetchAudioset.ts"],"names":["createAudioset","STAGING","getStaginUrl","idOrUrl","endsWith","getUrl","fetchAudioset","fetch","then","r","json"],"mappings":"AAAA,SAAiBA,cAAjB,QAAuC,gBAAvC,C,CAEA;;AACA,MAAMC,OAAO,GAAI,mDAAjB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAIC,OAAD,IACnBA,OAAO,CAACC,QAAR,CAAiB,OAAjB,IACID,OADJ,GAEIA,OAAO,KAAK,OAAZ,GACAF,OADA,GAEC,GAAEA,OAAQ,IAAGE,OAAQ,EAL5B,C,CAOA;;;AACA,MAAME,MAAM,GAAGH,YAAf;AAEA,OAAO,SAASI,aAAT,CAAuBH,OAAvB,EAAyD;AAC9D,SAAOI,KAAK,CAACF,MAAM,CAACF,OAAD,CAAP,CAAL,CACJK,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADR,EAEJF,IAFI,CAECR,cAFD,CAAP;AAGD","sourcesContent":["import { Bundle, createAudioset } from \"../../audioset\";\n\n// const PRODUCTION = `https://antropoloops-production.s3.eu-west-3.amazonaws.com/files`;\nconst STAGING = `https://play-admin.antropoloops.com/api/1.0/index`;\n\n// const getProductionUrl = (idOrUrl: string) =>\n//   idOrUrl.endsWith(\".json\")\n//     ? idOrUrl\n//     : `${PRODUCTION}/${idOrUrl}.audioset.json`;\n\n// const dbServerUrl = (idOrUrl: string) =>\n//   idOrUrl === \"index\"\n//     ? `http://localhost:1234/index`\n//     : `http://localhost:1234/set/${idOrUrl}`;\n\nconst getStaginUrl = (idOrUrl: string) =>\n  idOrUrl.endsWith(\".json\")\n    ? idOrUrl\n    : idOrUrl === \"index\"\n    ? STAGING\n    : `${STAGING}/${idOrUrl}`;\n\n// const getUrl = getProductionUrl; // dbServerUrl;\nconst getUrl = getStaginUrl;\n\nexport function fetchAudioset(idOrUrl: string): Promise<Bundle> {\n  return fetch(getUrl(idOrUrl))\n    .then((r) => r.json())\n    .then(createAudioset);\n}\n"]},"metadata":{},"sourceType":"module"}