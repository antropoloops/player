{"ast":null,"code":"import _defineProperty from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{KeyboardControler}from\"./KeyboardControler\";/**\n * Controls the playing state of clips and tracks\n */export var AudiosetControl=/*#__PURE__*/function(){function AudiosetControl(audioset,listener){var _this=this;_classCallCheck(this,AudiosetControl);this.listener=listener;this.keyboard=void 0;this.clips={};this.tracks={};this.clipIdsOfTrack={};this.trackIdOfClip={};this.commands=[];this.clipsCount=0;this.tracksCount=0;this.keyboard=new KeyboardControler(audioset,this);audioset.clips.forEach(function(clip){_this.clips[clip.id]={state:\"stopped\"};_this.trackIdOfClip[clip.id]=clip.trackId;});audioset.tracks.forEach(function(track){var volume=track.volume||1;_this.tracks[track.id]={state:\"stopped\",volume:volume};_this.clipIdsOfTrack[track.id]=track.clipIds;});}_createClass(AudiosetControl,[{key:\"toggleClip\",value:function toggleClip(clipId,time){var clipState=this.clips[clipId];if(!clipState){return;}else if(clipState.state===\"stopped\"){this.startClip(clipId,time);}else if(clipState.state===\"playing\"){this.stopClip(clipId,time);}}/**\n   * Start a clip\n   * @param clipId\n   */},{key:\"startClip\",value:function startClip(clipId,time){var _this2=this;var clipState=this.clips[clipId];if(!clipState||clipState.state===\"playing\"){return;}var trackId=this.trackIdOfClip[clipId];var sameTrackClipIds=this.clipIdsOfTrack[trackId];this._emitChanges(function(){sameTrackClipIds.forEach(function(trackClipId){return _this2._stopClip(trackClipId,time);});_this2._startTrack(trackId,time);_this2._startClip(clipId,time);});}/**\n   * Stops a clip\n   */},{key:\"stopClip\",value:function stopClip(clipId,time){var _this3=this;var clipState=this.clips[clipId];if(!clipState||clipState.state===\"stopped\"){return;}var trackId=this.trackIdOfClip[clipId];this._emitChanges(function(){_this3._stopClip(clipId,time);_this3._stopTrack(trackId,time);});}/**\n   * Stops all clips\n   */},{key:\"stopAll\",value:function stopAll(time){var _this4=this;this._emitChanges(function(){Object.keys(_this4.clips).forEach(function(clipId){return _this4._stopClip(clipId,time);});Object.keys(_this4.tracks).forEach(function(trackId){return _this4._stopTrack(trackId,time);});});}},{key:\"getState\",value:function getState(){return{playingClipsCount:this.clipsCount,playingTracksCount:this.tracksCount,clips:_objectSpread({},this.clips),tracks:_objectSpread({},this.tracks)};}//// PRIVATE ////\n},{key:\"_emitChanges\",value:function _emitChanges(changes){var _this5=this;changes();this.commands.forEach(function(command){_this5.listener.onControlCommand(command);});this.commands=[];this.listener.onControlStateChanged(this.getState());}},{key:\"_startClip\",value:function _startClip(clipId,time){if(this.clips[clipId].state===\"playing\"){return;}this.clipsCount+=1;this.clips[clipId]={state:\"playing\"};this.commands.push({command:\"startClip\",clipId:clipId,time:time});}},{key:\"_stopClip\",value:function _stopClip(clipId,time){if(this.clips[clipId].state===\"stopped\"){return;}this.clipsCount-=1;this.clips[clipId]={state:\"stopped\"};this.commands.push({command:\"stopClip\",clipId:clipId,time:time});}},{key:\"_startTrack\",value:function _startTrack(trackId,time){var trackState=this.tracks[trackId];if(trackState.state===\"playing\"){return;}this.tracksCount+=1;this.tracks[trackId]={state:\"playing\",volume:trackState.volume};this.commands.push({command:\"startTrack\",trackId:trackId,time:time});}},{key:\"_stopTrack\",value:function _stopTrack(trackId,time){var trackState=this.tracks[trackId];if(trackState.state===\"stopped\"){return;}this.tracksCount-=1;this.tracks[trackId]={state:\"stopped\",volume:trackState.volume};this.commands.push({command:\"stopTrack\",trackId:trackId,time:time});}}]);return AudiosetControl;}();","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/player/AudiosetControl.ts"],"names":["KeyboardControler","AudiosetControl","audioset","listener","keyboard","clips","tracks","clipIdsOfTrack","trackIdOfClip","commands","clipsCount","tracksCount","forEach","clip","id","state","trackId","track","volume","clipIds","clipId","time","clipState","startClip","stopClip","sameTrackClipIds","_emitChanges","trackClipId","_stopClip","_startTrack","_startClip","_stopTrack","Object","keys","playingClipsCount","playingTracksCount","changes","command","onControlCommand","onControlStateChanged","getState","push","trackState"],"mappings":"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","sourcesContent":["import { Audioset, Clip } from \"../audioset\";\nimport { KeyboardControler } from \"./KeyboardControler\";\n\nexport type PlayingState = \"stopped\" | \"playing\"; // | \"playScheduled\" |  \"stopScheduled\";\n\nexport interface ClipPlayingState {\n  readonly state: PlayingState;\n}\n\nexport interface TrackPlayingState {\n  readonly state: PlayingState;\n  readonly volume: number;\n}\n\nexport interface StartClip {\n  command: \"startClip\";\n  clipId: string;\n  time: number;\n}\nexport interface StopClip {\n  command: \"stopClip\";\n  clipId: string;\n  time: number;\n}\nexport interface StartTrack {\n  command: \"startTrack\";\n  trackId: string;\n  time: number;\n}\nexport interface StopTrack {\n  command: \"stopTrack\";\n  trackId: string;\n  time: number;\n}\n\nexport type ControlCommand = StartClip | StopClip | StartTrack | StopTrack;\n\ntype ClipPlayingStateByClipId = Record<string, ClipPlayingState>;\ntype TrackPlayingStateByTrackId = Record<string, TrackPlayingState>;\n\nexport interface ControlState {\n  playingClipsCount: number;\n  playingTracksCount: number;\n  clips: ClipPlayingStateByClipId;\n  tracks: TrackPlayingStateByTrackId;\n}\n\nexport interface ControlListener {\n  onControlStateChanged: (state: ControlState) => void;\n  onControlCommand: (command: ControlCommand) => void;\n}\n\n/**\n * Controls the playing state of clips and tracks\n */\nexport class AudiosetControl {\n  public readonly keyboard: KeyboardControler;\n  private clips: ClipPlayingStateByClipId = {};\n  private tracks: TrackPlayingStateByTrackId = {};\n  private clipIdsOfTrack: Record<string, string[]> = {};\n  private trackIdOfClip: Record<string, string> = {};\n  private commands: ControlCommand[] = [];\n  private clipsCount: number = 0;\n  private tracksCount: number = 0;\n\n  constructor(audioset: Audioset, private listener: ControlListener) {\n    this.keyboard = new KeyboardControler(audioset, this);\n    audioset.clips.forEach((clip: Clip) => {\n      this.clips[clip.id] = { state: \"stopped\" };\n      this.trackIdOfClip[clip.id] = clip.trackId;\n    });\n    audioset.tracks.forEach(track => {\n      const volume = track.volume || 1;\n      this.tracks[track.id] = { state: \"stopped\", volume };\n      this.clipIdsOfTrack[track.id] = track.clipIds;\n    });\n  }\n\n  public toggleClip(clipId: string, time: number) {\n    const clipState = this.clips[clipId];\n    if (!clipState) {\n      return;\n    } else if (clipState.state === \"stopped\") {\n      this.startClip(clipId, time);\n    } else if (clipState.state === \"playing\") {\n      this.stopClip(clipId, time);\n    }\n  }\n\n  /**\n   * Start a clip\n   * @param clipId\n   */\n  public startClip(clipId: string, time: number) {\n    const clipState = this.clips[clipId];\n    if (!clipState || clipState.state === \"playing\") {\n      return;\n    }\n\n    const trackId = this.trackIdOfClip[clipId];\n    const sameTrackClipIds = this.clipIdsOfTrack[trackId];\n    this._emitChanges(() => {\n      sameTrackClipIds.forEach(trackClipId =>\n        this._stopClip(trackClipId, time),\n      );\n      this._startTrack(trackId, time);\n      this._startClip(clipId, time);\n    });\n  }\n\n  /**\n   * Stops a clip\n   */\n  public stopClip(clipId: string, time: number) {\n    const clipState = this.clips[clipId];\n    if (!clipState || clipState.state === \"stopped\") {\n      return;\n    }\n\n    const trackId = this.trackIdOfClip[clipId];\n\n    this._emitChanges(() => {\n      this._stopClip(clipId, time);\n      this._stopTrack(trackId, time);\n    });\n  }\n\n  /**\n   * Stops all clips\n   */\n  public stopAll(time: number) {\n    this._emitChanges(() => {\n      Object.keys(this.clips).forEach(clipId => this._stopClip(clipId, time));\n      Object.keys(this.tracks).forEach(trackId =>\n        this._stopTrack(trackId, time),\n      );\n    });\n  }\n\n  public getState(): ControlState {\n    return {\n      playingClipsCount: this.clipsCount,\n      playingTracksCount: this.tracksCount,\n      clips: { ...this.clips },\n      tracks: { ...this.tracks },\n    };\n  }\n\n  //// PRIVATE ////\n  private _emitChanges(changes: () => void) {\n    changes();\n\n    this.commands.forEach(command => {\n      this.listener.onControlCommand(command);\n    });\n    this.commands = [];\n\n    this.listener.onControlStateChanged(this.getState());\n  }\n\n  private _startClip(clipId: string, time: number) {\n    if (this.clips[clipId].state === \"playing\") {\n      return;\n    }\n\n    this.clipsCount += 1;\n    this.clips[clipId] = { state: \"playing\" };\n    this.commands.push({ command: \"startClip\", clipId, time });\n  }\n  private _stopClip(clipId: string, time: number) {\n    if (this.clips[clipId].state === \"stopped\") {\n      return;\n    }\n\n    this.clipsCount -= 1;\n    this.clips[clipId] = { state: \"stopped\" };\n    this.commands.push({ command: \"stopClip\", clipId, time });\n  }\n  private _startTrack(trackId: string, time: number) {\n    const trackState = this.tracks[trackId];\n    if (trackState.state === \"playing\") {\n      return;\n    }\n\n    this.tracksCount += 1;\n    this.tracks[trackId] = { state: \"playing\", volume: trackState.volume };\n    this.commands.push({ command: \"startTrack\", trackId, time });\n  }\n  private _stopTrack(trackId: string, time: number) {\n    const trackState = this.tracks[trackId];\n    if (trackState.state === \"stopped\") {\n      return;\n    }\n\n    this.tracksCount -= 1;\n    this.tracks[trackId] = { state: \"stopped\", volume: trackState.volume };\n    this.commands.push({ command: \"stopTrack\", trackId, time });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}