{"ast":null,"code":"import _slicedToArray from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from\"react\";import{ArrowDown,ArrowUp}from\"../shared/Icons\";import{Markdown}from\"../shared/Markdown\";import\"./ClipOpen.css\";export var OpenClip=function OpenClip(_ref){var ref=_ref.ref,clip=_ref.clip,onClick=_ref.onClick;var _useReducer=useReducer(function(x){return!x;},false),_useReducer2=_slicedToArray(_useReducer,2),isReadmeVisible=_useReducer2[0],toggleReadme=_useReducer2[1];var hasReadme=clip.readme;var Icon=isReadmeVisible?ArrowUp:ArrowDown;var clipToggle=React.createElement(\"div\",{className:\"clipToggle\",onClick:hasReadme&&toggleReadme||undefined},React.createElement(\"div\",{className:\"clipName noselect\"},clip.name),hasReadme&&React.createElement(Icon,null));var clipInfo=React.createElement(\"div\",{className:\"clipInfo noselect\",onClick:onClick},React.createElement(\"h3\",{className:\"title\"},clip.title),React.createElement(\"p\",null,clip.artist));var cover2=clip.resources.cover2&&clip.resources.cover2.small;return React.createElement(\"div\",{ref:ref,className:\"Clip open\",style:{backgroundColor:clip.color}},React.createElement(\"div\",{className:\"covers\"},React.createElement(\"div\",{className:\"cover\"},React.createElement(\"img\",{alt:clip.title,src:clip.coverUrl,onClick:onClick})),cover2?React.createElement(\"div\",{className:\"cover\"},React.createElement(\"img\",{alt:clip.title,src:cover2,onClick:onClick})):React.createElement(\"div\",{className:\"cover info\"},clipInfo,\" \",clipToggle)),cover2&&React.createElement(\"div\",{className:\"meta\"},clipToggle,clipInfo),React.createElement(Markdown,{className:\"expand \".concat(isReadmeVisible?\"visible\":\"hidden\"),markdown:clip.readme}));};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipOpen.tsx"],"names":["React","useReducer","ArrowDown","ArrowUp","Markdown","OpenClip","ref","clip","onClick","x","isReadmeVisible","toggleReadme","hasReadme","readme","Icon","clipToggle","undefined","name","clipInfo","title","artist","cover2","resources","small","backgroundColor","color","coverUrl"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,SAAT,CAAoBC,OAApB,KAAmC,iBAAnC,CACA,OAASC,QAAT,KAAyB,oBAAzB,CACA,MAAO,gBAAP,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiC,IAA9BC,CAAAA,GAA8B,MAA9BA,GAA8B,CAAzBC,IAAyB,MAAzBA,IAAyB,CAAnBC,OAAmB,MAAnBA,OAAmB,iBACfP,UAAU,CAAC,SAAAQ,CAAC,QAAI,CAACA,CAAL,EAAF,CAAU,KAAV,CADK,4CAChDC,eADgD,iBAC/BC,YAD+B,iBAEvD,GAAMC,CAAAA,SAAS,CAAGL,IAAI,CAACM,MAAvB,CAEA,GAAMC,CAAAA,IAAI,CAAGJ,eAAe,CAAGP,OAAH,CAAaD,SAAzC,CAEA,GAAMa,CAAAA,UAAU,CACd,2BACE,SAAS,CAAC,YADZ,CAEE,OAAO,CAAGH,SAAS,EAAID,YAAd,EAA+BK,SAF1C,EAIE,2BAAK,SAAS,CAAC,mBAAf,EAAoCT,IAAI,CAACU,IAAzC,CAJF,CAKGL,SAAS,EAAI,oBAAC,IAAD,MALhB,CADF,CASA,GAAMM,CAAAA,QAAQ,CACZ,2BAAK,SAAS,CAAC,mBAAf,CAAmC,OAAO,CAAEV,OAA5C,EACE,0BAAI,SAAS,CAAC,OAAd,EAAuBD,IAAI,CAACY,KAA5B,CADF,CAEE,6BAAIZ,IAAI,CAACa,MAAT,CAFF,CADF,CAOA,GAAMC,CAAAA,MAAM,CAAGd,IAAI,CAACe,SAAL,CAAeD,MAAf,EAAyBd,IAAI,CAACe,SAAL,CAAeD,MAAf,CAAsBE,KAA9D,CACA,MACE,4BACE,GAAG,CAAEjB,GADP,CAEE,SAAS,CAAC,WAFZ,CAGE,KAAK,CAAE,CAAEkB,eAAe,CAAEjB,IAAI,CAACkB,KAAxB,CAHT,EAKE,2BAAK,SAAS,CAAC,QAAf,EACE,2BAAK,SAAS,CAAC,OAAf,EACE,2BAAK,GAAG,CAAElB,IAAI,CAACY,KAAf,CAAsB,GAAG,CAAEZ,IAAI,CAACmB,QAAhC,CAA0C,OAAO,CAAElB,OAAnD,EADF,CADF,CAIGa,MAAM,CACL,2BAAK,SAAS,CAAC,OAAf,EACE,2BAAK,GAAG,CAAEd,IAAI,CAACY,KAAf,CAAsB,GAAG,CAAEE,MAA3B,CAAmC,OAAO,CAAEb,OAA5C,EADF,CADK,CAKL,2BAAK,SAAS,CAAC,YAAf,EACGU,QADH,KACcH,UADd,CATJ,CALF,CAmBGM,MAAM,EACL,2BAAK,SAAS,CAAC,MAAf,EACGN,UADH,CAEGG,QAFH,CApBJ,CAyBE,oBAAC,QAAD,EACE,SAAS,kBAAYR,eAAe,CAAG,SAAH,CAAe,QAA1C,CADX,CAEE,QAAQ,CAAEH,IAAI,CAACM,MAFjB,EAzBF,CADF,CAgCD,CAvDM","sourcesContent":["import React, { useReducer } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./ClipOpen.css\";\n\nexport const OpenClip = ({ ref, clip, onClick }: any) => {\n  const [isReadmeVisible, toggleReadme] = useReducer(x => !x, false);\n  const hasReadme = clip.readme;\n\n  const Icon = isReadmeVisible ? ArrowUp : ArrowDown;\n\n  const clipToggle = (\n    <div\n      className=\"clipToggle\"\n      onClick={(hasReadme && toggleReadme) || undefined}\n    >\n      <div className=\"clipName noselect\">{clip.name}</div>\n      {hasReadme && <Icon />}\n    </div>\n  );\n  const clipInfo = (\n    <div className=\"clipInfo noselect\" onClick={onClick}>\n      <h3 className=\"title\">{clip.title}</h3>\n      <p>{clip.artist}</p>\n    </div>\n  );\n\n  const cover2 = clip.resources.cover2 && clip.resources.cover2.small;\n  return (\n    <div\n      ref={ref}\n      className=\"Clip open\"\n      style={{ backgroundColor: clip.color }}\n    >\n      <div className=\"covers\">\n        <div className=\"cover\">\n          <img alt={clip.title} src={clip.coverUrl} onClick={onClick} />\n        </div>\n        {cover2 ? (\n          <div className=\"cover\">\n            <img alt={clip.title} src={cover2} onClick={onClick} />\n          </div>\n        ) : (\n          <div className=\"cover info\">\n            {clipInfo} {clipToggle}\n          </div>\n        )}\n      </div>\n      {cover2 && (\n        <div className=\"meta\">\n          {clipToggle}\n          {clipInfo}\n        </div>\n      )}\n      <Markdown\n        className={`expand ${isReadmeVisible ? \"visible\" : \"hidden\"}`}\n        markdown={clip.readme}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}