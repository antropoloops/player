{"ast":null,"code":"import _classCallCheck from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/**\n * Creates an AudioEngine instance\n * @param context\n */export function createAudioEngine(context){return new AudioContextEngine(context);}var AudioContextEngine=/*#__PURE__*/function(){function AudioContextEngine(context){_classCallCheck(this,AudioContextEngine);this.context=context;this.output=void 0;this.output=context.destination;}_createClass(AudioContextEngine,[{key:\"createAudioSource\",value:function createAudioSource(props){var source=this.context.createBufferSource();source.buffer=props.buffer;source.loop=true;source.connect(props.output);return source;}},{key:\"createTrack\",value:function createTrack(props){var track=this.context.createGain();track.gain.value=props.volume||0.7;track.connect(props.output);return{input:track,disconnect:function disconnect(){return track.disconnect();}};}}]);return AudioContextEngine;}();","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/sampler/AudioEngine.ts"],"names":["createAudioEngine","context","AudioContextEngine","output","destination","props","source","createBufferSource","buffer","loop","connect","track","createGain","gain","value","volume","input","disconnect"],"mappings":"sTAGA;;;GAIA,MAAO,SAASA,CAAAA,iBAAT,CAA2BC,OAA3B,CAAgE,CACrE,MAAO,IAAIC,CAAAA,kBAAJ,CAAuBD,OAAvB,CAAP,CACD,C,GA2BKC,CAAAA,kB,yBAEJ,4BAAoBD,OAApB,CAA4C,+CAAxBA,OAAwB,CAAxBA,OAAwB,MADrCE,MACqC,QAC1C,KAAKA,MAAL,CAAcF,OAAO,CAACG,WAAtB,CACD,C,2FAEwBC,K,CAA2C,CAClE,GAAMC,CAAAA,MAAM,CAAG,KAAKL,OAAL,CAAaM,kBAAb,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgBH,KAAK,CAACG,MAAtB,CACAF,MAAM,CAACG,IAAP,CAAc,IAAd,CACAH,MAAM,CAACI,OAAP,CAAeL,KAAK,CAACF,MAArB,EACA,MAAOG,CAAAA,MAAP,CACD,C,gDACkBD,K,CAAoC,CACrD,GAAMM,CAAAA,KAAK,CAAG,KAAKV,OAAL,CAAaW,UAAb,EAAd,CACAD,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAmBT,KAAK,CAACU,MAAN,EAAgB,GAAnC,CACAJ,KAAK,CAACD,OAAN,CAAcL,KAAK,CAACF,MAApB,EACA,MAAO,CAAEa,KAAK,CAAEL,KAAT,CAAgBM,UAAU,CAAE,4BAAMN,CAAAA,KAAK,CAACM,UAAN,EAAN,EAA5B,CAAP,CACD,C","sourcesContent":["import { IAudioContext, IAudioNode } from \"standardized-audio-context\";\n\ntype AudioNode = IAudioNode<IAudioContext>;\n/**\n * Creates an AudioEngine instance\n * @param context\n */\nexport function createAudioEngine(context: IAudioContext): AudioEngine {\n  return new AudioContextEngine(context);\n}\nexport interface AudioEngine {\n  output: AudioNode;\n  createTrack: (props: AudioTrackProps) => AudioTrack;\n  createAudioSource: (props: AudioSourceProperties) => AudioSource;\n}\n\nexport interface AudioTrackProps {\n  output: AudioNode;\n  volume: number;\n}\nexport interface AudioSourceProperties {\n  output: AudioNode;\n  buffer: any;\n}\n\n// tslint:disable-next-line: no-empty-interface\nexport interface AudioTrack {\n  input: AudioNode;\n  disconnect(): void;\n}\n\nexport interface AudioSource {\n  start: (time: number) => void;\n  stop: (time: number) => void;\n}\n\nclass AudioContextEngine implements AudioEngine {\n  public output: any;\n  constructor(private context: IAudioContext) {\n    this.output = context.destination;\n  }\n\n  public createAudioSource(props: AudioSourceProperties): AudioSource {\n    const source = this.context.createBufferSource();\n    source.buffer = props.buffer;\n    source.loop = true;\n    source.connect(props.output);\n    return source;\n  }\n  public createTrack(props: AudioTrackProps): AudioTrack {\n    const track = this.context.createGain();\n    track.gain.value = props.volume || 0.7;\n    track.connect(props.output);\n    return { input: track, disconnect: () => track.disconnect() };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}