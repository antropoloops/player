{"ast":null,"code":"import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n  return (nativeContext, baseLatency, options) => {\n    // Bug #9: Safari does not support IIRFilterNodes.\n    if (nativeContext.createIIRFilter === undefined) {\n      return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n    }\n\n    const nativeIIRFilterNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n    });\n    assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n    return nativeIIRFilterNode;\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-factory.js"],"names":["assignNativeAudioNodeOptions","createNativeIIRFilterNodeFactory","createNativeAudioNode","createNativeIIRFilterNodeFaker","nativeContext","baseLatency","options","createIIRFilter","undefined","nativeIIRFilterNode","ntvCntxt","feedforward","feedback"],"mappings":"AAAA,SAASA,4BAAT,QAA6C,6CAA7C;AACA,OAAO,MAAMC,gCAAgC,GAAG,CAACC,qBAAD,EAAwBC,8BAAxB,KAA2D;AACvG,SAAO,CAACC,aAAD,EAAgBC,WAAhB,EAA6BC,OAA7B,KAAyC;AAC5C;AACA,QAAIF,aAAa,CAACG,eAAd,KAAkCC,SAAtC,EAAiD;AAC7C,aAAOL,8BAA8B,CAACC,aAAD,EAAgBC,WAAhB,EAA6BC,OAA7B,CAArC;AACH;;AACD,UAAMG,mBAAmB,GAAGP,qBAAqB,CAACE,aAAD,EAAiBM,QAAD,IAAc;AAC3E,aAAOA,QAAQ,CAACH,eAAT,CAAyBD,OAAO,CAACK,WAAjC,EAA8CL,OAAO,CAACM,QAAtD,CAAP;AACH,KAFgD,CAAjD;AAGAZ,IAAAA,4BAA4B,CAACS,mBAAD,EAAsBH,OAAtB,CAA5B;AACA,WAAOG,mBAAP;AACH,GAVD;AAWH,CAZM","sourcesContent":["import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        const nativeIIRFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n        });\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-iir-filter-node-factory.js.map"]},"metadata":{},"sourceType":"module"}