{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Player/Preview.tsx\";\nimport React from \"react\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Preview.css\";\n\nconst Preview = ({\n  audioset,\n  onStart,\n  resourceStatus\n}) => {\n  return React.createElement(\"div\", {\n    className: \"Preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: audioset.meta.title,\n    src: audioset.meta.logo_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, audioset.meta.description), React.createElement(Markdown, {\n    markdown: audioset.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), resourceStatus.status === \"loading\" && newFunction(resourceStatus), resourceStatus.status === \"pending\" && React.createElement(\"button\", {\n    onClick: onStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Entrar\")));\n};\n\nexport default Preview;\n\nfunction newFunction(status) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Cargando...\"), status.completed, \"/\", status.total);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Preview.tsx"],"names":["React","Markdown","Preview","audioset","onStart","resourceStatus","meta","title","logo_url","description","readme","status","newFunction","completed","total"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,eAAP;;AAQA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAyD;AACvE,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,QAAQ,CAACG,IAAT,CAAcC,KAAxB;AAA+B,IAAA,GAAG,EAAEJ,QAAQ,CAACG,IAAT,CAAcE,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,QAAQ,CAACG,IAAT,CAAcG,WAApB,CADF,EAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEN,QAAQ,CAACG,IAAT,CAAcI,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGL,cAAc,CAACM,MAAf,KAA0B,SAA1B,IAAuCC,WAAW,CAACP,cAAD,CAHrD,EAIGA,cAAc,CAACM,MAAf,KAA0B,SAA1B,IACC;AAAQ,IAAA,OAAO,EAAEP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CAHF,CADF;AAcD,CAfD;;AAiBA,eAAeF,OAAf;;AAEA,SAASU,WAAT,CAAqBD,MAArB,EAAgE;AAC9D,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGA,MAAM,CAACE,SAFV,OAEsBF,MAAM,CAACG,KAF7B,CADF;AAMD","sourcesContent":["import React from \"react\";\nimport { Audioset } from \"../../Audioset\";\nimport { LoadingResources, ResourceLoadStatus } from \"../../Player/ResourceLoader\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Preview.css\";\n\ninterface PreviewProps {\n  audioset: Audioset;\n  resourceStatus: ResourceLoadStatus;\n  onStart: () => void;\n}\n\nconst Preview = ({ audioset, onStart, resourceStatus }: PreviewProps) => {\n  return (\n    <div className=\"Preview\">\n      <img alt={audioset.meta.title} src={audioset.meta.logo_url} />\n\n      <div className=\"inside\">\n        <div>{audioset.meta.description}</div>\n        <Markdown markdown={audioset.meta.readme} />\n        {resourceStatus.status === \"loading\" && newFunction(resourceStatus)}\n        {resourceStatus.status === \"pending\" && (\n          <button onClick={onStart}>Entrar</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Preview;\n\nfunction newFunction(status: LoadingResources): React.ReactNode {\n  return (\n    <div>\n      <h2>Cargando...</h2>\n      {status.completed}/{status.total}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}