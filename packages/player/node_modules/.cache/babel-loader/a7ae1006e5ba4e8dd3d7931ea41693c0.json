{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Controller.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { player } from \"../../player\";\nimport { TrackView } from \"./TrackView\";\nexport const Controller = ({\n  audioset\n}) => {\n  const state = useControlState();\n\n  if (!audioset || !audioset.tracks) {\n    return React.createElement(React.Fragment, null);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Controller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, audioset.tracks.map(track => TrackView(track, audioset, state)));\n};\n\nfunction useControlState() {\n  const _useState = useState(player.control.getState()),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => player.onControlStateChanged(controlState => {\n    setState(controlState);\n  }));\n  return state;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Controller.tsx"],"names":["React","useEffect","useState","player","TrackView","Controller","audioset","state","useControlState","tracks","map","track","control","getState","setState","onControlStateChanged","controlState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,QAAuB,cAAvB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAMA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmC;AAC3D,QAAMC,KAAK,GAAGC,eAAe,EAA7B;;AAEA,MAAI,CAACF,QAAD,IAAa,CAACA,QAAQ,CAACG,MAA3B,EAAmC;AACjC,WAAO,yCAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACG,MAAT,CAAgBC,GAAhB,CAAoBC,KAAK,IAAIP,SAAS,CAACO,KAAD,EAAQL,QAAR,EAAkBC,KAAlB,CAAtC,CADH,CADF;AAKD,CAZM;;AAcP,SAASC,eAAT,GAAyC;AAAA,oBACbN,QAAQ,CAACC,MAAM,CAACS,OAAP,CAAeC,QAAf,EAAD,CADK;AAAA;AAAA,QAChCN,KADgC;AAAA,QACzBO,QADyB;;AAEvCb,EAAAA,SAAS,CAAC,MACRE,MAAM,CAACY,qBAAP,CAA6BC,YAAY,IAAI;AAC3CF,IAAAA,QAAQ,CAACE,YAAD,CAAR;AACD,GAFD,CADO,CAAT;AAKA,SAAOT,KAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { player } from \"../../player\";\nimport { ControlState } from \"../../player/AudiosetControl\";\nimport { TrackView } from \"./TrackView\";\n\ninterface ControllerProps {\n  audioset: Audioset;\n}\n\nexport const Controller = ({ audioset }: ControllerProps) => {\n  const state = useControlState();\n\n  if (!audioset || !audioset.tracks) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"Controller\">\n      {audioset.tracks.map(track => TrackView(track, audioset, state))}\n    </div>\n  );\n};\n\nfunction useControlState(): ControlState {\n  const [state, setState] = useState(player.control.getState());\n  useEffect(() =>\n    player.onControlStateChanged(controlState => {\n      setState(controlState);\n    }),\n  );\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}