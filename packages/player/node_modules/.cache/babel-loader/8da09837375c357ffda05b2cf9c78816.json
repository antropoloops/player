{"ast":null,"code":"export const testPromiseSupport = nativeContext => {\n  // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n  const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n  try {\n    // Bug #1: Safari requires a successCallback.\n    const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {// Ignore the success callback.\n    });\n\n    if (promise === undefined) {\n      return false;\n    }\n\n    promise.catch(() => {// Ignore rejected errors.\n    });\n    return true;\n  } catch (_a) {// Ignore errors.\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js"],"names":["testPromiseSupport","nativeContext","uint32Array","Uint32Array","promise","decodeAudioData","buffer","undefined","catch","_a"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAIC,aAAD,IAAmB;AACjD;AACA,QAAMC,WAAW,GAAG,IAAIC,WAAJ,CAAgB,CAChC,UADgC,EAEhC,EAFgC,EAGhC,UAHgC,EAIhC,SAJgC,EAKhC,EALgC,EAMhC,MANgC,EAOhC,KAPgC,EAQhC,MARgC,EAShC,OATgC,EAUhC,UAVgC,EAWhC,CAXgC,EAYhC,CAZgC,CAAhB,CAApB;;AAcA,MAAI;AACA;AACA,UAAMC,OAAO,GAAGH,aAAa,CAACI,eAAd,CAA8BH,WAAW,CAACI,MAA1C,EAAkD,MAAM,CACpE;AACH,KAFe,CAAhB;;AAGA,QAAIF,OAAO,KAAKG,SAAhB,EAA2B;AACvB,aAAO,KAAP;AACH;;AACDH,IAAAA,OAAO,CAACI,KAAR,CAAc,MAAM,CAChB;AACH,KAFD;AAGA,WAAO,IAAP;AACH,GAZD,CAaA,OAAOC,EAAP,EAAW,CACP;AACH;;AACD,SAAO,KAAP;AACH,CAjCM","sourcesContent":["export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([\n        1179011410,\n        40,\n        1163280727,\n        544501094,\n        16,\n        131073,\n        44100,\n        176400,\n        1048580,\n        1635017060,\n        4,\n        0\n    ]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch (_a) {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2018/helpers/test-promise-support.js.map"]},"metadata":{},"sourceType":"module"}