{"ast":null,"code":"export const createAudioDestinationNodeRenderer = renderInputsOfAudioNode => {\n  let nativeAudioDestinationNodePromise = null;\n\n  const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n    const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n    await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n    return nativeAudioDestinationNode;\n  };\n\n  return {\n    render(proxy, nativeOfflineAudioContext, trace) {\n      if (nativeAudioDestinationNodePromise === null) {\n        nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n      return nativeAudioDestinationNodePromise;\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-renderer-factory.js"],"names":["createAudioDestinationNodeRenderer","renderInputsOfAudioNode","nativeAudioDestinationNodePromise","createAudioDestinationNode","proxy","nativeOfflineAudioContext","trace","nativeAudioDestinationNode","destination","render"],"mappings":"AAAA,OAAO,MAAMA,kCAAkC,GAAIC,uBAAD,IAA6B;AAC3E,MAAIC,iCAAiC,GAAG,IAAxC;;AACA,QAAMC,0BAA0B,GAAG,OAAOC,KAAP,EAAcC,yBAAd,EAAyCC,KAAzC,KAAmD;AAClF,UAAMC,0BAA0B,GAAGF,yBAAyB,CAACG,WAA7D;AACA,UAAMP,uBAAuB,CAACG,KAAD,EAAQC,yBAAR,EAAmCE,0BAAnC,EAA+DD,KAA/D,CAA7B;AACA,WAAOC,0BAAP;AACH,GAJD;;AAKA,SAAO;AACHE,IAAAA,MAAM,CAACL,KAAD,EAAQC,yBAAR,EAAmCC,KAAnC,EAA0C;AAC5C,UAAIJ,iCAAiC,KAAK,IAA1C,EAAgD;AAC5CA,QAAAA,iCAAiC,GAAGC,0BAA0B,CAACC,KAAD,EAAQC,yBAAR,EAAmCC,KAAnC,CAA9D;AACH;;AACD,aAAOJ,iCAAP;AACH;;AANE,GAAP;AAQH,CAfM","sourcesContent":["export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-destination-node-renderer-factory.js.map"]},"metadata":{},"sourceType":"module"}