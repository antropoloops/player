{"ast":null,"code":"export var cloneAudioWorkletNodeOptions = function cloneAudioWorkletNodeOptions(audioWorkletNodeOptions) {\n  return new Promise(function (resolve, reject) {\n    var _ref = new MessageChannel(),\n        port1 = _ref.port1,\n        port2 = _ref.port2;\n\n    port1.onmessage = function (_ref2) {\n      var data = _ref2.data;\n      port1.close();\n      port2.close();\n      resolve(data);\n    };\n\n    port1.onmessageerror = function (_ref3) {\n      var data = _ref3.data;\n      port1.close();\n      port2.close();\n      reject(data);\n    }; // This will throw an error if the audioWorkletNodeOptions are not clonable.\n\n\n    port2.postMessage(audioWorkletNodeOptions);\n  });\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/helpers/clone-audio-worklet-node-options.js"],"names":["cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","Promise","resolve","reject","MessageChannel","port1","port2","onmessage","data","close","onmessageerror","postMessage"],"mappings":"AAAA,OAAO,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,uBAAD,EAA6B;AACrE,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAAA,eACX,IAAIC,cAAJ,EADW;AAAA,QAC5BC,KAD4B,QAC5BA,KAD4B;AAAA,QACrBC,KADqB,QACrBA,KADqB;;AAEpCD,IAAAA,KAAK,CAACE,SAAN,GAAkB,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAC5BH,MAAAA,KAAK,CAACI,KAAN;AACAH,MAAAA,KAAK,CAACG,KAAN;AACAP,MAAAA,OAAO,CAACM,IAAD,CAAP;AACH,KAJD;;AAKAH,IAAAA,KAAK,CAACK,cAAN,GAAuB,iBAAc;AAAA,UAAXF,IAAW,SAAXA,IAAW;AACjCH,MAAAA,KAAK,CAACI,KAAN;AACAH,MAAAA,KAAK,CAACG,KAAN;AACAN,MAAAA,MAAM,CAACK,IAAD,CAAN;AACH,KAJD,CAPoC,CAYpC;;;AACAF,IAAAA,KAAK,CAACK,WAAN,CAAkBX,uBAAlB;AACH,GAdM,CAAP;AAeH,CAhBM","sourcesContent":["export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=/build/es2018/helpers/clone-audio-worklet-node-options.js.map"]},"metadata":{},"sourceType":"module"}