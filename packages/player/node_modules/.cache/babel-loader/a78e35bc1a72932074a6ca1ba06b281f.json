{"ast":null,"code":"import _classCallCheck from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var createEventTargetConstructor = function createEventTargetConstructor(wrapEventListener) {\n  return /*#__PURE__*/function () {\n    function EventTarget(_nativeEventTarget) {\n      _classCallCheck(this, EventTarget);\n\n      this._nativeEventTarget = _nativeEventTarget;\n      this._listeners = new WeakMap();\n    }\n\n    _createClass(EventTarget, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, listener, options) {\n        if (listener !== null) {\n          var wrappedEventListener = this._listeners.get(listener);\n\n          if (wrappedEventListener === undefined) {\n            wrappedEventListener = wrapEventListener(this, listener);\n\n            if (typeof listener === 'function') {\n              this._listeners.set(listener, wrappedEventListener);\n            }\n          }\n\n          this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        return this._nativeEventTarget.dispatchEvent(event);\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, listener, options) {\n        var wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n        this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n      }\n    }]);\n\n    return EventTarget;\n  }();\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/event-target-constructor.js"],"names":["createEventTargetConstructor","wrapEventListener","_nativeEventTarget","_listeners","WeakMap","type","listener","options","wrappedEventListener","get","undefined","set","addEventListener","event","dispatchEvent","removeEventListener"],"mappings":";;AAAA,OAAO,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,iBAAD,EAAuB;AAC/D;AACI,yBAAYC,kBAAZ,EAAgC;AAAA;;AAC5B,WAAKA,kBAAL,GAA0BA,kBAA1B;AACA,WAAKC,UAAL,GAAkB,IAAIC,OAAJ,EAAlB;AACH;;AAJL;AAAA;AAAA,uCAKqBC,IALrB,EAK2BC,QAL3B,EAKqCC,OALrC,EAK8C;AACtC,YAAID,QAAQ,KAAK,IAAjB,EAAuB;AACnB,cAAIE,oBAAoB,GAAG,KAAKL,UAAL,CAAgBM,GAAhB,CAAoBH,QAApB,CAA3B;;AACA,cAAIE,oBAAoB,KAAKE,SAA7B,EAAwC;AACpCF,YAAAA,oBAAoB,GAAGP,iBAAiB,CAAC,IAAD,EAAOK,QAAP,CAAxC;;AACA,gBAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAChC,mBAAKH,UAAL,CAAgBQ,GAAhB,CAAoBL,QAApB,EAA8BE,oBAA9B;AACH;AACJ;;AACD,eAAKN,kBAAL,CAAwBU,gBAAxB,CAAyCP,IAAzC,EAA+CG,oBAA/C,EAAqED,OAArE;AACH;AACJ;AAhBL;AAAA;AAAA,oCAiBkBM,KAjBlB,EAiByB;AACjB,eAAO,KAAKX,kBAAL,CAAwBY,aAAxB,CAAsCD,KAAtC,CAAP;AACH;AAnBL;AAAA;AAAA,0CAoBwBR,IApBxB,EAoB8BC,QApB9B,EAoBwCC,OApBxC,EAoBiD;AACzC,YAAMC,oBAAoB,GAAIF,QAAQ,KAAK,IAAd,GAAsBI,SAAtB,GAAkC,KAAKP,UAAL,CAAgBM,GAAhB,CAAoBH,QAApB,CAA/D;;AACA,aAAKJ,kBAAL,CAAwBa,mBAAxB,CAA4CV,IAA5C,EAAmDG,oBAAoB,KAAKE,SAA1B,GAAuC,IAAvC,GAA8CF,oBAAhG,EAAsHD,OAAtH;AACH;AAvBL;;AAAA;AAAA;AAyBH,CA1BM","sourcesContent":["export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = (listener === null) ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, (wrappedEventListener === undefined) ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/event-target-constructor.js.map"]},"metadata":{},"sourceType":"module"}