{"ast":null,"code":"import { getAudioContext } from \"../AudioContext\";\nexport class TimeManager {\n  constructor() {\n    this.count = 0;\n    this.startedAt = 0;\n    this.context = void 0;\n    getAudioContext().then(ctx => this.context = ctx);\n  }\n\n  startTime(time) {\n    if (!this.context) {\n      return time;\n    }\n\n    time = time || this.context.currentTime;\n\n    if (this.count === 0) {\n      this.startedAt = time;\n    }\n\n    this.count += 1;\n\n    if (this.count === 0) {\n      this.startedAt = 0;\n    }\n\n    return time;\n  }\n\n  stopTime(time) {\n    if (!this.context) {\n      return time;\n    }\n\n    this.count -= 1;\n    time = time || this.context.currentTime;\n    return time;\n  }\n\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/player/Control/TimeManager.ts"],"names":["getAudioContext","TimeManager","constructor","count","startedAt","context","then","ctx","startTime","time","currentTime","stopTime"],"mappings":"AAAA,SAASA,eAAT,QAAgC,iBAAhC;AAEA,OAAO,MAAMC,WAAN,CAAkB;AAKvBC,EAAAA,WAAW,GAAG;AAAA,SAJJC,KAII,GAJY,CAIZ;AAAA,SAHJC,SAGI,GAHgB,CAGhB;AAAA,SAFNC,OAEM;AACZL,IAAAA,eAAe,GAAGM,IAAlB,CAAuBC,GAAG,IAAK,KAAKF,OAAL,GAAeE,GAA9C;AACD;;AAEMC,EAAAA,SAAP,CAAiBC,IAAjB,EAA+B;AAC7B,QAAI,CAAC,KAAKJ,OAAV,EAAmB;AACjB,aAAOI,IAAP;AACD;;AAEDA,IAAAA,IAAI,GAAGA,IAAI,IAAI,KAAKJ,OAAL,CAAaK,WAA5B;;AAEA,QAAI,KAAKP,KAAL,KAAe,CAAnB,EAAsB;AACpB,WAAKC,SAAL,GAAiBK,IAAjB;AACD;;AACD,SAAKN,KAAL,IAAc,CAAd;;AACA,QAAI,KAAKA,KAAL,KAAe,CAAnB,EAAsB;AACpB,WAAKC,SAAL,GAAiB,CAAjB;AACD;;AACD,WAAOK,IAAP;AACD;;AAEME,EAAAA,QAAP,CAAgBF,IAAhB,EAA+B;AAC7B,QAAI,CAAC,KAAKJ,OAAV,EAAmB;AACjB,aAAOI,IAAP;AACD;;AACD,SAAKN,KAAL,IAAc,CAAd;AAEAM,IAAAA,IAAI,GAAGA,IAAI,IAAI,KAAKJ,OAAL,CAAaK,WAA5B;AACA,WAAOD,IAAP;AACD;;AAlCsB","sourcesContent":["import { getAudioContext } from \"../AudioContext\";\n\nexport class TimeManager {\n  protected count: number = 0;\n  protected startedAt: number = 0;\n  private context?: AudioContext;\n\n  constructor() {\n    getAudioContext().then(ctx => (this.context = ctx));\n  }\n\n  public startTime(time: number) {\n    if (!this.context) {\n      return time;\n    }\n\n    time = time || this.context.currentTime;\n\n    if (this.count === 0) {\n      this.startedAt = time;\n    }\n    this.count += 1;\n    if (this.count === 0) {\n      this.startedAt = 0;\n    }\n    return time;\n  }\n\n  public stopTime(time: numbber) {\n    if (!this.context) {\n      return time;\n    }\n    this.count -= 1;\n\n    time = time || this.context.currentTime;\n    return time;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}