{"ast":null,"code":"/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = nativeOfflineAudioContextConstructor => {\n  return () => {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    /*\n     * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n     * support the tested behaviour.\n     */\n\n    if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n      return Promise.resolve(true);\n    } // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n\n\n    if (nativeOfflineAudioContext.createConstantSource === undefined) {\n      return Promise.resolve(true);\n    }\n\n    const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n    const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n    constantSourceNode.channelCount = 1;\n    constantSourceNode.offset.value = 1;\n    stereoPanner.channelCount = 1;\n    constantSourceNode.start();\n    constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n    return nativeOfflineAudioContext.startRendering().then(buffer => buffer.getChannelData(0)[0] !== 1);\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/test-stereo-panner-node-default-value-support.js"],"names":["createTestStereoPannerNodeDefaultValueSupport","nativeOfflineAudioContextConstructor","Promise","resolve","nativeOfflineAudioContext","createStereoPanner","undefined","createConstantSource","constantSourceNode","stereoPanner","channelCount","offset","value","start","connect","destination","startRendering","then","buffer","getChannelData"],"mappings":"AAAA;;;AAGA,OAAO,MAAMA,6CAA6C,GAAIC,oCAAD,IAA0C;AACnG,SAAO,MAAM;AACT,QAAIA,oCAAoC,KAAK,IAA7C,EAAmD;AAC/C,aAAOC,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACH;;AACD,UAAMC,yBAAyB,GAAG,IAAIH,oCAAJ,CAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAA/C,CAAlC;AACA;;;;;AAIA,QAAIG,yBAAyB,CAACC,kBAA1B,KAAiDC,SAArD,EAAgE;AAC5D,aAAOJ,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH,KAXQ,CAYT;;;AACA,QAAIC,yBAAyB,CAACG,oBAA1B,KAAmDD,SAAvD,EAAkE;AAC9D,aAAOJ,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACH;;AACD,UAAMK,kBAAkB,GAAGJ,yBAAyB,CAACG,oBAA1B,EAA3B;AACA,UAAME,YAAY,GAAGL,yBAAyB,CAACC,kBAA1B,EAArB;AACAG,IAAAA,kBAAkB,CAACE,YAAnB,GAAkC,CAAlC;AACAF,IAAAA,kBAAkB,CAACG,MAAnB,CAA0BC,KAA1B,GAAkC,CAAlC;AACAH,IAAAA,YAAY,CAACC,YAAb,GAA4B,CAA5B;AACAF,IAAAA,kBAAkB,CAACK,KAAnB;AACAL,IAAAA,kBAAkB,CACbM,OADL,CACaL,YADb,EAEKK,OAFL,CAEaV,yBAAyB,CAACW,WAFvC;AAGA,WAAOX,yBAAyB,CAC3BY,cADE,GAEFC,IAFE,CAEIC,MAAD,IAAYA,MAAM,CAACC,cAAP,CAAsB,CAAtB,EAAyB,CAAzB,MAAgC,CAF/C,CAAP;AAGH,GA5BD;AA6BH,CA9BM","sourcesContent":["/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode\n            .connect(stereoPanner)\n            .connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext\n            .startRendering()\n            .then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-stereo-panner-node-default-value-support.js.map"]},"metadata":{},"sourceType":"module"}