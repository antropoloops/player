{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMemo, useState } from \"react\";\nimport { getActiveAudioContext } from \"../../player\";\nimport { ResourceLoader } from \"../../player/ResourceLoader\";\nexport function useSession(audioset) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        started = _useState2[0],\n        setStarted = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loaded = _useState4[0],\n        setLoaded = _useState4[1];\n\n  const loader = useMemo(() => new ResourceLoader(audioset, status => {\n    if (status.stage === \"ready\") {\n      setLoaded(true);\n    }\n  }), [audioset]);\n  const loading = started && !loaded;\n\n  async function start() {\n    setStarted(true);\n    const ctx = await getActiveAudioContext();\n    await loader.load(ctx);\n  }\n\n  return {\n    loading,\n    loaded,\n    started,\n    start,\n    loader\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/useSession.tsx"],"names":["useMemo","useState","getActiveAudioContext","ResourceLoader","useSession","audioset","started","setStarted","loaded","setLoaded","loader","status","stage","loading","start","ctx","load"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;AAEA,SAASC,qBAAT,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAAwC;AAAA,oBACfJ,QAAQ,CAAC,KAAD,CADO;AAAA;AAAA,QACtCK,OADsC;AAAA,QAC7BC,UAD6B;;AAAA,qBAEjBN,QAAQ,CAAC,KAAD,CAFS;AAAA;AAAA,QAEtCO,MAFsC;AAAA,QAE9BC,SAF8B;;AAG7C,QAAMC,MAAM,GAAGV,OAAO,CACpB,MACE,IAAIG,cAAJ,CAAmBE,QAAnB,EAA6BM,MAAM,IAAI;AACrC,QAAIA,MAAM,CAACC,KAAP,KAAiB,OAArB,EAA8B;AAC5BH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAJD,CAFkB,EAOpB,CAACJ,QAAD,CAPoB,CAAtB;AASA,QAAMQ,OAAO,GAAGP,OAAO,IAAI,CAACE,MAA5B;;AAEA,iBAAeM,KAAf,GAAuB;AACrBP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMQ,GAAG,GAAG,MAAMb,qBAAqB,EAAvC;AACA,UAAMQ,MAAM,CAACM,IAAP,CAAYD,GAAZ,CAAN;AACD;;AAED,SAAO;AAAEF,IAAAA,OAAF;AAAWL,IAAAA,MAAX;AAAmBF,IAAAA,OAAnB;AAA4BQ,IAAAA,KAA5B;AAAmCJ,IAAAA;AAAnC,GAAP;AACD","sourcesContent":["import { useMemo, useState } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { getActiveAudioContext } from \"../../player\";\nimport { ResourceLoader } from \"../../player/ResourceLoader\";\n\nexport function useSession(audioset: Audioset) {\n  const [started, setStarted] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const loader = useMemo<ResourceLoader>(\n    () =>\n      new ResourceLoader(audioset, status => {\n        if (status.stage === \"ready\") {\n          setLoaded(true);\n        }\n      }),\n    [audioset],\n  );\n  const loading = started && !loaded;\n\n  async function start() {\n    setStarted(true);\n    const ctx = await getActiveAudioContext();\n    await loader.load(ctx);\n  }\n\n  return { loading, loaded, started, start, loader };\n}\n"]},"metadata":{},"sourceType":"module"}