{"ast":null,"code":"import _classCallCheck from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{addResizeObserver}from\"./addResizeObserver\";import Display from\"./display\";import Visuals from\"./visuals\";export var VisualControl=/*#__PURE__*/function(){function VisualControl(audioset,el){var _this=this;_classCallCheck(this,VisualControl);this.display=void 0;this.visuals=void 0;this.detachers=[];this.display=new Display(el);this.visuals=new Visuals(audioset,this.display);setupVisuals(audioset,this.visuals).then(function(){_this.detachers.push(addResizeObserver(el,function(width,height){_this.visuals.resizeSvg(width,height);}));});}_createClass(VisualControl,[{key:\"startClip\",value:function startClip(clipId){this.visuals.show(clipId);}},{key:\"stopClip\",value:function stopClip(clipId){this.visuals.hide(clipId);}},{key:\"detach\",value:function detach(){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.detachers[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var detach=_step.value;detach();}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}}]);return VisualControl;}();function setupVisuals(audioset,visuals){if(audioset.visuals.mode===\"map\"){return fetch(audioset.visuals.geomap.url).then(function(response){return response.json();}).then(function(data){return visuals.setGeodata(data);}).then(function(){return visuals;});}else{visuals.setup();return Promise.resolve(visuals);}}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/index.ts"],"names":["addResizeObserver","Display","Visuals","VisualControl","audioset","el","display","visuals","detachers","setupVisuals","then","push","width","height","resizeSvg","clipId","show","hide","detach","mode","fetch","geomap","url","response","json","data","setGeodata","setup","Promise","resolve"],"mappings":"sTACA,OAASA,iBAAT,KAAkC,qBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,UAAaC,CAAAA,aAAb,yBAKE,uBAAYC,QAAZ,CAAgCC,EAAhC,CAAyC,yDAJjCC,OAIiC,aAHjCC,OAGiC,aAFjCC,SAEiC,CAFF,EAEE,CACvC,KAAKF,OAAL,CAAe,GAAIL,CAAAA,OAAJ,CAAYI,EAAZ,CAAf,CACA,KAAKE,OAAL,CAAe,GAAIL,CAAAA,OAAJ,CAAYE,QAAZ,CAAsB,KAAKE,OAA3B,CAAf,CACAG,YAAY,CAACL,QAAD,CAAW,KAAKG,OAAhB,CAAZ,CAAqCG,IAArC,CAA0C,UAAM,CAC9C,KAAI,CAACF,SAAL,CAAeG,IAAf,CACEX,iBAAiB,CAACK,EAAD,CAAK,SAACO,KAAD,CAAgBC,MAAhB,CAAmC,CACvD,KAAI,CAACN,OAAL,CAAaO,SAAb,CAAuBF,KAAvB,CAA8BC,MAA9B,EACD,CAFgB,CADnB,EAKD,CAND,EAOD,CAfH,sEAiBmBE,MAjBnB,CAiBmC,CAC/B,KAAKR,OAAL,CAAaS,IAAb,CAAkBD,MAAlB,EACD,CAnBH,0CAqBkBA,MArBlB,CAqBkC,CAC9B,KAAKR,OAAL,CAAaU,IAAb,CAAkBF,MAAlB,EACD,CAvBH,uCAyBkB,iGACd,kBAAqB,KAAKP,SAA1B,oHAAqC,IAA1BU,CAAAA,MAA0B,aACnCA,MAAM,GACP,CAHa,qMAIf,CA7BH,6BAgCA,QAAST,CAAAA,YAAT,CAAsBL,QAAtB,CAA0CG,OAA1C,CAA8E,CAC5E,GAAIH,QAAQ,CAACG,OAAT,CAAiBY,IAAjB,GAA0B,KAA9B,CAAqC,CACnC,MAAOC,CAAAA,KAAK,CAAChB,QAAQ,CAACG,OAAT,CAAiBc,MAAjB,CAAwBC,GAAzB,CAAL,CACJZ,IADI,CACC,SAAAa,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADT,EAEJd,IAFI,CAEC,SAAAe,IAAI,QAAIlB,CAAAA,OAAO,CAACmB,UAAR,CAAmBD,IAAnB,CAAJ,EAFL,EAGJf,IAHI,CAGC,iBAAMH,CAAAA,OAAN,EAHD,CAAP,CAID,CALD,IAKO,CACLA,OAAO,CAACoB,KAAR,GACA,MAAOC,CAAAA,OAAO,CAACC,OAAR,CAAgBtB,OAAhB,CAAP,CACD,CACF","sourcesContent":["import { Audioset } from \"../audioset\";\nimport { addResizeObserver } from \"./addResizeObserver\";\nimport Display from \"./display\";\nimport Visuals from \"./visuals\";\n\nexport class VisualControl {\n  private display: Display;\n  private visuals: Visuals;\n  private detachers: Array<() => void> = [];\n\n  constructor(audioset: Audioset, el: any) {\n    this.display = new Display(el);\n    this.visuals = new Visuals(audioset, this.display);\n    setupVisuals(audioset, this.visuals).then(() => {\n      this.detachers.push(\n        addResizeObserver(el, (width: number, height: number) => {\n          this.visuals.resizeSvg(width, height);\n        }),\n      );\n    });\n  }\n\n  public startClip(clipId: string) {\n    this.visuals.show(clipId);\n  }\n\n  public stopClip(clipId: string) {\n    this.visuals.hide(clipId);\n  }\n\n  public detach() {\n    for (const detach of this.detachers) {\n      detach();\n    }\n  }\n}\n\nfunction setupVisuals(audioset: Audioset, visuals: Visuals): Promise<Visuals> {\n  if (audioset.visuals.mode === \"map\") {\n    return fetch(audioset.visuals.geomap.url)\n      .then(response => response.json())\n      .then(data => visuals.setGeodata(data))\n      .then(() => visuals);\n  } else {\n    visuals.setup();\n    return Promise.resolve(visuals);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}