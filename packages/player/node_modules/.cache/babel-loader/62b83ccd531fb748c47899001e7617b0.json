{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import debug from\"debug\";import getSupportedAudioCodecs from\"../../test-audio-codecs\";import{decodeAudioBuffer}from\"./decodeAudioBuffer\";var log=debug(\"atpls:resources\");// TODO: abstract the loader mechanism: { stage, payload }\nexport var ResourceLoader=/*#__PURE__*/function(){function ResourceLoader(audioset,listener){var _this=this;_classCallCheck(this,ResourceLoader);this.audioset=audioset;this.listener=listener;this.status=void 0;this.total=void 0;this.completed=void 0;this.buffers={};this.preloaded=void 0;this.format=void 0;log(\"create ResourceLoader %s\",audioset.id);var codecs=getSupportedAudioCodecs();this.format=codecs.ogg?\"ogg\":codecs.mp3?\"mp3\":\"wav\";log(\"Preferred audio format %s\",this.format);this.status={stage:\"pending\"};this.preloaded=false;this.total=this.audioset.clips.length;this.completed=0;setTimeout(function(){_this.preload();},2000);}_createClass(ResourceLoader,[{key:\"getStatus\",value:function getStatus(){return this.status;}},{key:\"getBuffer\",value:function getBuffer(clipId){return this.buffers[clipId];}},{key:\"load\",value:function load(context){var _this2=this;this.preload();var total=this.total,completed=this.completed;if(total===completed){return Promise.resolve();}log(\"Start clip audio loading [%s]\",this.audioset.meta.title);this.setStatus({stage:\"loading\",total:total,completed:0});var clips=this.audioset.clips;if(clips[0]){log(\"Audio format %s\",clips[0].resources.audio.ogg?\"ogg\":\"mp3\");}var promises=clips.map(function(clip){return _this2.loadClipAudio(clip,context).catch(function(err){_this2.handleResourceCompleted();log(\"Error %o\",err);});});return Promise.all(promises);}},{key:\"preload\",value:function preload(){if(this.preloaded){return Promise.resolve();}log(\"Preload\");this.preloaded=true;var _this$audioset=this.audioset,visuals=_this$audioset.visuals,clips=_this$audioset.clips;var promises=[];if(visuals.mode===\"map\"&&visuals.geomap.url){promises.push(fetch(visuals.geomap.url));}clips.forEach(function(clip){preloadImage(clip.resources.cover.small);});var loadAll=function loadAll(){log(\"Preload images\");return Promise.all(promises);};return preloadImage(this.audioset.meta.logo_url).then(loadAll).catch(loadAll);}//// PRIVATE ////\n},{key:\"setStatus\",value:function setStatus(status){if(status.stage!==\"loading\"){log(\"stage %s\",status.stage);}this.status=status;this.listener(status);}},{key:\"loadClipAudio\",value:function(){var _loadClipAudio=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(clip,context){var audio,url,response,buffer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:audio=clip.resources.audio;url=audio[this.format]||\"\";if(url===\"\"){log(\"Valid audio format not found\",clip,this.format);}_context.next=5;return fetch(url);case 5:response=_context.sent;_context.next=8;return decodeAudioBuffer(response,context);case 8:buffer=_context.sent;this.buffers[clip.id]=buffer;this.handleResourceCompleted(url);return _context.abrupt(\"return\",buffer);case 12:case\"end\":return _context.stop();}}},_callee,this);}));function loadClipAudio(_x,_x2){return _loadClipAudio.apply(this,arguments);}return loadClipAudio;}()},{key:\"handleResourceCompleted\",value:function handleResourceCompleted(url){this.completed+=1;var status=this.completed>=this.total?{stage:\"ready\",total:this.total}:{stage:\"loading\",total:this.total,completed:this.completed};this.setStatus(status);}}]);return ResourceLoader;}();function preloadImage(url){if(!url||!url.length){return Promise.resolve();}return new Promise(function(resolve){var image=new Image();image.addEventListener(\"load\",function(){resolve(image);});image.src=url;});}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/player/Loader/ResourceLoader.ts"],"names":["debug","getSupportedAudioCodecs","decodeAudioBuffer","log","ResourceLoader","audioset","listener","status","total","completed","buffers","preloaded","format","id","codecs","ogg","mp3","stage","clips","length","setTimeout","preload","clipId","context","Promise","resolve","meta","title","setStatus","resources","audio","promises","map","clip","loadClipAudio","catch","err","handleResourceCompleted","all","visuals","mode","geomap","url","push","fetch","forEach","preloadImage","cover","small","loadAll","logo_url","then","response","buffer","image","Image","addEventListener","src"],"mappings":"2mBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,uBAAP,KAAoC,yBAApC,CACA,OAASC,iBAAT,KAAkC,qBAAlC,CAEA,GAAMC,CAAAA,GAAG,CAAGH,KAAK,CAAC,iBAAD,CAAjB,CAEA;AA8BA,UAAaI,CAAAA,cAAb,yBAQE,wBACUC,QADV,CAEUC,QAFV,CAGE,0DAFQD,QAER,CAFQA,QAER,MADQC,QACR,CADQA,QACR,MAVKC,MAUL,aATMC,KASN,aARMC,SAQN,aAPMC,OAON,CAPqC,EAOrC,MANMC,SAMN,aALeC,MAKf,QACAT,GAAG,CAAC,0BAAD,CAA6BE,QAAQ,CAACQ,EAAtC,CAAH,CACA,GAAMC,CAAAA,MAAM,CAAGb,uBAAuB,EAAtC,CACA,KAAKW,MAAL,CAAcE,MAAM,CAACC,GAAP,CAAa,KAAb,CAAqBD,MAAM,CAACE,GAAP,CAAa,KAAb,CAAqB,KAAxD,CACAb,GAAG,CAAC,2BAAD,CAA8B,KAAKS,MAAnC,CAAH,CACA,KAAKL,MAAL,CAAc,CAAEU,KAAK,CAAE,SAAT,CAAd,CACA,KAAKN,SAAL,CAAiB,KAAjB,CACA,KAAKH,KAAL,CAAa,KAAKH,QAAL,CAAca,KAAd,CAAoBC,MAAjC,CACA,KAAKV,SAAL,CAAiB,CAAjB,CACAW,UAAU,CAAC,UAAM,CACf,KAAI,CAACC,OAAL,GACD,CAFS,CAEP,IAFO,CAAV,CAGD,CAvBH,wEAyBqB,CACjB,MAAO,MAAKd,MAAZ,CACD,CA3BH,4CA6BmBe,MA7BnB,CA6BwC,CACpC,MAAO,MAAKZ,OAAL,CAAaY,MAAb,CAAP,CACD,CA/BH,kCAiCcC,OAjCd,CAiCsC,iBAClC,KAAKF,OAAL,GADkC,GAE1Bb,CAAAA,KAF0B,CAEL,IAFK,CAE1BA,KAF0B,CAEnBC,SAFmB,CAEL,IAFK,CAEnBA,SAFmB,CAGlC,GAAID,KAAK,GAAKC,SAAd,CAAyB,CACvB,MAAOe,CAAAA,OAAO,CAACC,OAAR,EAAP,CACD,CAEDtB,GAAG,CAAC,+BAAD,CAAkC,KAAKE,QAAL,CAAcqB,IAAd,CAAmBC,KAArD,CAAH,CACA,KAAKC,SAAL,CAAe,CAAEX,KAAK,CAAE,SAAT,CAAoBT,KAAK,CAALA,KAApB,CAA2BC,SAAS,CAAE,CAAtC,CAAf,EACA,GAAMS,CAAAA,KAAK,CAAG,KAAKb,QAAL,CAAca,KAA5B,CACA,GAAIA,KAAK,CAAC,CAAD,CAAT,CAAc,CACZf,GAAG,CAAC,iBAAD,CAAoBe,KAAK,CAAC,CAAD,CAAL,CAASW,SAAT,CAAmBC,KAAnB,CAAyBf,GAAzB,CAA+B,KAA/B,CAAuC,KAA3D,CAAH,CACD,CACD,GAAMgB,CAAAA,QAAQ,CAAGb,KAAK,CAACc,GAAN,CAAU,SAACC,IAAD,QACzB,CAAA,MAAI,CAACC,aAAL,CAAmBD,IAAnB,CAAyBV,OAAzB,EAAkCY,KAAlC,CAAwC,SAACC,GAAD,CAAS,CAC/C,MAAI,CAACC,uBAAL,GACAlC,GAAG,CAAC,UAAD,CAAaiC,GAAb,CAAH,CACD,CAHD,CADyB,EAAV,CAAjB,CAMA,MAAOZ,CAAAA,OAAO,CAACc,GAAR,CAAYP,QAAZ,CAAP,CACD,CArDH,yCAuDoB,CAChB,GAAI,KAAKpB,SAAT,CAAoB,CAClB,MAAOa,CAAAA,OAAO,CAACC,OAAR,EAAP,CACD,CAEDtB,GAAG,CAAC,SAAD,CAAH,CACA,KAAKQ,SAAL,CAAiB,IAAjB,CANgB,mBAOW,KAAKN,QAPhB,CAORkC,OAPQ,gBAORA,OAPQ,CAOCrB,KAPD,gBAOCA,KAPD,CAQhB,GAAMa,CAAAA,QAA6B,CAAG,EAAtC,CACA,GAAIQ,OAAO,CAACC,IAAR,GAAiB,KAAjB,EAA0BD,OAAO,CAACE,MAAR,CAAeC,GAA7C,CAAkD,CAChDX,QAAQ,CAACY,IAAT,CAAcC,KAAK,CAACL,OAAO,CAACE,MAAR,CAAeC,GAAhB,CAAnB,EACD,CACDxB,KAAK,CAAC2B,OAAN,CAAc,SAACZ,IAAD,CAAU,CACtBa,YAAY,CAACb,IAAI,CAACJ,SAAL,CAAekB,KAAf,CAAqBC,KAAtB,CAAZ,CACD,CAFD,EAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB9C,GAAG,CAAC,gBAAD,CAAH,CACA,MAAOqB,CAAAA,OAAO,CAACc,GAAR,CAAYP,QAAZ,CAAP,CACD,CAHD,CAKA,MAAOe,CAAAA,YAAY,CAAC,KAAKzC,QAAL,CAAcqB,IAAd,CAAmBwB,QAApB,CAAZ,CACJC,IADI,CACCF,OADD,EAEJd,KAFI,CAEEc,OAFF,CAAP,CAGD,CAED;AAhFF,4CAiFoB1C,MAjFpB,CAiFgD,CAC5C,GAAIA,MAAM,CAACU,KAAP,GAAiB,SAArB,CAAgC,CAC9Bd,GAAG,CAAC,UAAD,CAAaI,MAAM,CAACU,KAApB,CAAH,CACD,CACD,KAAKV,MAAL,CAAcA,MAAd,CACA,KAAKD,QAAL,CAAcC,MAAd,EACD,CAvFH,oIAyF8B0B,IAzF9B,CAyF0CV,OAzF1C,gJA0FYO,KA1FZ,CA0FsBG,IAAI,CAACJ,SA1F3B,CA0FYC,KA1FZ,CA2FUY,GA3FV,CA2FgBZ,KAAK,CAAC,KAAKlB,MAAN,CAAL,EAAsB,EA3FtC,CA4FI,GAAI8B,GAAG,GAAK,EAAZ,CAAgB,CACdvC,GAAG,CAAC,8BAAD,CAAiC8B,IAAjC,CAAuC,KAAKrB,MAA5C,CAAH,CACD,CA9FL,sBA+F2BgC,CAAAA,KAAK,CAACF,GAAD,CA/FhC,QA+FUU,QA/FV,qCAgGyBlD,CAAAA,iBAAiB,CAACkD,QAAD,CAAW7B,OAAX,CAhG1C,QAgGU8B,MAhGV,eAiGI,KAAK3C,OAAL,CAAauB,IAAI,CAACpB,EAAlB,EAAwBwC,MAAxB,CAEA,KAAKhB,uBAAL,CAA6BK,GAA7B,EAnGJ,gCAqGWW,MArGX,6OAwGkCX,GAxGlC,CAwGgD,CAC5C,KAAKjC,SAAL,EAAkB,CAAlB,CACA,GAAMF,CAAAA,MAA0B,CAC9B,KAAKE,SAAL,EAAkB,KAAKD,KAAvB,CACI,CAAES,KAAK,CAAE,OAAT,CAAkBT,KAAK,CAAE,KAAKA,KAA9B,CADJ,CAEI,CAAES,KAAK,CAAE,SAAT,CAAoBT,KAAK,CAAE,KAAKA,KAAhC,CAAuCC,SAAS,CAAE,KAAKA,SAAvD,CAHN,CAIA,KAAKmB,SAAL,CAAerB,MAAf,EACD,CA/GH,8BAkHA,QAASuC,CAAAA,YAAT,CAAsBJ,GAAtB,CAAiD,CAC/C,GAAI,CAACA,GAAD,EAAQ,CAACA,GAAG,CAACvB,MAAjB,CAAyB,CACvB,MAAOK,CAAAA,OAAO,CAACC,OAAR,EAAP,CACD,CACD,MAAO,IAAID,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9B,GAAM6B,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,EAAd,CACAD,KAAK,CAACE,gBAAN,CAAuB,MAAvB,CAA+B,UAAM,CACnC/B,OAAO,CAAC6B,KAAD,CAAP,CACD,CAFD,EAGAA,KAAK,CAACG,GAAN,CAAYf,GAAZ,CACD,CANM,CAAP,CAOD","sourcesContent":["import debug from \"debug\";\nimport { IAudioContext } from \"standardized-audio-context\";\nimport { Audioset, Clip } from \"../../audioset\";\nimport getSupportedAudioCodecs from \"../../test-audio-codecs\";\nimport { decodeAudioBuffer } from \"./decodeAudioBuffer\";\n\nconst log = debug(\"atpls:resources\");\n\n// TODO: abstract the loader mechanism: { stage, payload }\nexport interface LoadPending {\n  stage: \"pending\";\n}\nexport interface LoadingResources {\n  stage: \"loading\";\n  total: number;\n  completed: number;\n}\nexport interface ResourcesLoaded {\n  stage: \"ready\";\n  total: number;\n}\nexport interface ResourceLoadError {\n  stage: \"error\";\n  error: any;\n}\n\nexport type ResourceLoadStatus =\n  | LoadPending\n  | LoadingResources\n  | ResourcesLoaded\n  | ResourceLoadError;\n\nexport interface Resources {\n  getStatus(): ResourceLoadStatus;\n  getBuffer(clipId: string): any;\n  load(ctx: IAudioContext): Promise<any>;\n}\n\nexport class ResourceLoader implements Resources {\n  public status: ResourceLoadStatus;\n  private total: number;\n  private completed: number;\n  private buffers: Record<string, any> = {};\n  private preloaded: boolean;\n  private readonly format: \"mp3\" | \"ogg\" | \"wav\";\n\n  constructor(\n    private audioset: Audioset,\n    private listener: (status: ResourceLoadStatus) => void\n  ) {\n    log(\"create ResourceLoader %s\", audioset.id);\n    const codecs = getSupportedAudioCodecs();\n    this.format = codecs.ogg ? \"ogg\" : codecs.mp3 ? \"mp3\" : \"wav\";\n    log(\"Preferred audio format %s\", this.format);\n    this.status = { stage: \"pending\" };\n    this.preloaded = false;\n    this.total = this.audioset.clips.length;\n    this.completed = 0;\n    setTimeout(() => {\n      this.preload();\n    }, 2000);\n  }\n\n  public getStatus() {\n    return this.status;\n  }\n\n  public getBuffer(clipId: string): any {\n    return this.buffers[clipId];\n  }\n\n  public load(context: IAudioContext) {\n    this.preload();\n    const { total, completed } = this;\n    if (total === completed) {\n      return Promise.resolve();\n    }\n\n    log(\"Start clip audio loading [%s]\", this.audioset.meta.title);\n    this.setStatus({ stage: \"loading\", total, completed: 0 });\n    const clips = this.audioset.clips;\n    if (clips[0]) {\n      log(\"Audio format %s\", clips[0].resources.audio.ogg ? \"ogg\" : \"mp3\");\n    }\n    const promises = clips.map((clip) =>\n      this.loadClipAudio(clip, context).catch((err) => {\n        this.handleResourceCompleted();\n        log(\"Error %o\", err);\n      })\n    );\n    return Promise.all(promises);\n  }\n\n  private preload() {\n    if (this.preloaded) {\n      return Promise.resolve();\n    }\n\n    log(\"Preload\");\n    this.preloaded = true;\n    const { visuals, clips } = this.audioset;\n    const promises: Array<Promise<any>> = [];\n    if (visuals.mode === \"map\" && visuals.geomap.url) {\n      promises.push(fetch(visuals.geomap.url));\n    }\n    clips.forEach((clip) => {\n      preloadImage(clip.resources.cover.small);\n    });\n    const loadAll = () => {\n      log(\"Preload images\");\n      return Promise.all(promises);\n    };\n\n    return preloadImage(this.audioset.meta.logo_url)\n      .then(loadAll)\n      .catch(loadAll);\n  }\n\n  //// PRIVATE ////\n  private setStatus(status: ResourceLoadStatus) {\n    if (status.stage !== \"loading\") {\n      log(\"stage %s\", status.stage);\n    }\n    this.status = status;\n    this.listener(status);\n  }\n\n  private async loadClipAudio(clip: Clip, context: IAudioContext) {\n    const { audio } = clip.resources;\n    const url = audio[this.format] || \"\";\n    if (url === \"\") {\n      log(\"Valid audio format not found\", clip, this.format);\n    }\n    const response = await fetch(url);\n    const buffer = await decodeAudioBuffer(response, context);\n    this.buffers[clip.id] = buffer;\n\n    this.handleResourceCompleted(url);\n\n    return buffer;\n  }\n\n  private handleResourceCompleted(url?: string) {\n    this.completed += 1;\n    const status: ResourceLoadStatus =\n      this.completed >= this.total\n        ? { stage: \"ready\", total: this.total }\n        : { stage: \"loading\", total: this.total, completed: this.completed };\n    this.setStatus(status);\n  }\n}\n\nfunction preloadImage(url: string): Promise<any> {\n  if (!url || !url.length) {\n    return Promise.resolve();\n  }\n  return new Promise((resolve) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => {\n      resolve(image);\n    });\n    image.src = url;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}