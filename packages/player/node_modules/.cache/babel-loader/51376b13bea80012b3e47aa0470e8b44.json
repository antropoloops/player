{"ast":null,"code":"import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport var createStartRendering = function createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) {\n  return function (destination, nativeOfflineAudioContext) {\n    return getAudioNodeRenderer(destination).render(destination, nativeOfflineAudioContext, []).then(function () {\n      return renderNativeOfflineAudioContext(nativeOfflineAudioContext);\n    }).then(function (audioBuffer) {\n      // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n      // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n      if (typeof audioBuffer.copyFromChannel !== 'function') {\n        wrapAudioBufferCopyChannelMethods(audioBuffer);\n        wrapAudioBufferGetChannelDataMethod(audioBuffer); // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n      } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, function () {\n        return testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer);\n      })) {\n        wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n      }\n\n      audioBufferStore.add(audioBuffer);\n      return audioBuffer;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/start-rendering.js"],"names":["wrapAudioBufferGetChannelDataMethod","createStartRendering","audioBufferStore","cacheTestResult","getAudioNodeRenderer","renderNativeOfflineAudioContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","destination","nativeOfflineAudioContext","render","then","audioBuffer","copyFromChannel","add"],"mappings":"AAAA,SAASA,mCAAT,QAAoD,sDAApD;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,gBAAD,EAAmBC,eAAnB,EAAoCC,oBAApC,EAA0DC,+BAA1D,EAA2FC,mDAA3F,EAAgJC,iCAAhJ,EAAmLC,4CAAnL,EAAoO;AACpQ,SAAO,UAACC,WAAD,EAAcC,yBAAd;AAAA,WAA4CN,oBAAoB,CAACK,WAAD,CAApB,CAC9CE,MAD8C,CACvCF,WADuC,EAC1BC,yBAD0B,EACC,EADD,EAE9CE,IAF8C,CAEzC;AAAA,aAAMP,+BAA+B,CAACK,yBAAD,CAArC;AAAA,KAFyC,EAG9CE,IAH8C,CAGzC,UAACC,WAAD,EAAiB;AACvB;AACA;AACA,UAAI,OAAOA,WAAW,CAACC,eAAnB,KAAuC,UAA3C,EAAuD;AACnDP,QAAAA,iCAAiC,CAACM,WAAD,CAAjC;AACAb,QAAAA,mCAAmC,CAACa,WAAD,CAAnC,CAFmD,CAGnD;AACH,OAJD,MAKK,IAAI,CAACV,eAAe,CAACG,mDAAD,EAAsD;AAAA,eAAMA,mDAAmD,CAACO,WAAD,CAAzD;AAAA,OAAtD,CAApB,EAAmJ;AACpJL,QAAAA,4CAA4C,CAACK,WAAD,CAA5C;AACH;;AACDX,MAAAA,gBAAgB,CAACa,GAAjB,CAAqBF,WAArB;AACA,aAAOA,WAAP;AACH,KAhBkD,CAA5C;AAAA,GAAP;AAiBH,CAlBM","sourcesContent":["import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext, [])\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=/build/es2018/factories/start-rendering.js.map"]},"metadata":{},"sourceType":"module"}