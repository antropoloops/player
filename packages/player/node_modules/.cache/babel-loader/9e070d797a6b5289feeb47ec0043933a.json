{"ast":null,"code":"export default class Loader {\n  constructor(audioset) {\n    this.audioset = audioset;\n    this.state = void 0;\n    this.callback = void 0;\n\n    this.callback = () => undefined;\n\n    this.state = {\n      status: \"init\",\n      total: 10,\n      completed: 0\n    };\n  }\n\n  start() {\n    const state = this.state;\n    state.status = \"working\";\n    this.fireChange();\n\n    const next = () => {\n      state.completed = state.completed + 1;\n\n      if (state.completed === state.total) {\n        state.status = \"ready\";\n      } else {\n        setTimeout(next, 100);\n      }\n\n      this.fireChange();\n    };\n\n    setTimeout(next, 100);\n  }\n\n  onChange(callback) {\n    this.callback = callback;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  fireChange() {\n    this.callback(this.state);\n  }\n\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/lib/loader.ts"],"names":["Loader","constructor","audioset","state","callback","undefined","status","total","completed","start","fireChange","next","setTimeout","onChange","getState"],"mappings":"AAUA,eAAe,MAAMA,MAAN,CAAa;AAI1BC,EAAAA,WAAW,CAAQC,QAAR,EAAuB;AAAA,SAAfA,QAAe,GAAfA,QAAe;AAAA,SAH1BC,KAG0B;AAAA,SAF1BC,QAE0B;;AAChC,SAAKA,QAAL,GAAgB,MAAMC,SAAtB;;AACA,SAAKF,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAEDC,EAAAA,KAAK,GAAG;AAAA,UACEN,KADF,GACY,IADZ,CACEA,KADF;AAENA,IAAAA,KAAK,CAACG,MAAN,GAAe,SAAf;AACA,SAAKI,UAAL;;AACA,UAAMC,IAAI,GAAG,MAAM;AACjBR,MAAAA,KAAK,CAACK,SAAN,GAAkBL,KAAK,CAACK,SAAN,GAAkB,CAApC;;AACA,UAAIL,KAAK,CAACK,SAAN,KAAoBL,KAAK,CAACI,KAA9B,EAAqC;AACnCJ,QAAAA,KAAK,CAACG,MAAN,GAAe,OAAf;AACD,OAFD,MAEO;AACLM,QAAAA,UAAU,CAACD,IAAD,EAAO,GAAP,CAAV;AACD;;AACD,WAAKD,UAAL;AACD,KARD;;AASAE,IAAAA,UAAU,CAACD,IAAD,EAAO,GAAP,CAAV;AACD;;AAEDE,EAAAA,QAAQ,CAACT,QAAD,EAAyB;AAC/B,SAAKA,QAAL,GAAgBA,QAAhB;AACD;;AAEDU,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKX,KAAZ;AACD;;AAEDO,EAAAA,UAAU,GAAG;AACX,SAAKN,QAAL,CAAc,KAAKD,KAAnB;AACD;;AAvCyB","sourcesContent":["import { init } from \"./visuals\";\n\nexport interface LoadState {\n  status: string;\n  total: number;\n  completed: number;\n}\n\ntype LoadCallback = (state: LoadState) => void;\n\nexport default class Loader {\n  private state: LoadState;\n  private callback: LoadCallback;\n\n  constructor(public audioset: any) {\n    this.callback = () => undefined;\n    this.state = {\n      status: \"init\",\n      total: 10,\n      completed: 0\n    };\n  }\n\n  start() {\n    const { state } = this;\n    state.status = \"working\";\n    this.fireChange();\n    const next = () => {\n      state.completed = state.completed + 1;\n      if (state.completed === state.total) {\n        state.status = \"ready\";\n      } else {\n        setTimeout(next, 100);\n      }\n      this.fireChange();\n    };\n    setTimeout(next, 100);\n  }\n\n  onChange(callback: LoadCallback) {\n    this.callback = callback;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  fireChange() {\n    this.callback(this.state);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}