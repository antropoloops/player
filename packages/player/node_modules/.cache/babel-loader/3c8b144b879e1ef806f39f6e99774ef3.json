{"ast":null,"code":"import _classCallCheck from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { CONTEXT_STORE } from '../globals';\nexport var createMinimalBaseAudioContextConstructor = function createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, wrapEventListener) {\n  return (\n    /*#__PURE__*/\n    function (_eventTargetConstruct) {\n      _inherits(MinimalBaseAudioContext, _eventTargetConstruct);\n\n      function MinimalBaseAudioContext(_nativeContext, numberOfChannels) {\n        var _this;\n\n        _classCallCheck(this, MinimalBaseAudioContext);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(MinimalBaseAudioContext).call(this, _nativeContext));\n        _this._nativeContext = _nativeContext;\n        CONTEXT_STORE.set(_assertThisInitialized(_this), _nativeContext); // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n\n        var sampleRate = _nativeContext.sampleRate;\n        Object.defineProperty(_nativeContext, 'sampleRate', {\n          get: function get() {\n            return sampleRate;\n          }\n        });\n        _this._destination = new audioDestinationNodeConstructor(_assertThisInitialized(_this), numberOfChannels);\n        _this._listener = createAudioListener(_assertThisInitialized(_this), _nativeContext);\n        _this._onstatechange = null;\n        return _this;\n      }\n\n      _createClass(MinimalBaseAudioContext, [{\n        key: \"currentTime\",\n        get: function get() {\n          return this._nativeContext.currentTime;\n        }\n      }, {\n        key: \"destination\",\n        get: function get() {\n          return this._destination;\n        }\n      }, {\n        key: \"listener\",\n        get: function get() {\n          return this._listener;\n        }\n      }, {\n        key: \"onstatechange\",\n        get: function get() {\n          return this._onstatechange;\n        },\n        set: function set(value) {\n          var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n          this._nativeContext.onstatechange = wrappedListener;\n          var nativeOnStateChange = this._nativeContext.onstatechange;\n          this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n      }, {\n        key: \"sampleRate\",\n        get: function get() {\n          return this._nativeContext.sampleRate;\n        }\n      }, {\n        key: \"state\",\n        get: function get() {\n          return this._nativeContext.state;\n        }\n      }]);\n\n      return MinimalBaseAudioContext;\n    }(eventTargetConstructor)\n  );\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/minimal-base-audio-context-constructor.js"],"names":["CONTEXT_STORE","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","eventTargetConstructor","wrapEventListener","_nativeContext","numberOfChannels","set","sampleRate","Object","defineProperty","get","_destination","_listener","_onstatechange","currentTime","value","wrappedListener","onstatechange","nativeOnStateChange","state"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,OAAO,IAAMC,wCAAwC,GAAG,SAA3CA,wCAA2C,CAACC,+BAAD,EAAkCC,mBAAlC,EAAuDC,sBAAvD,EAA+EC,iBAA/E,EAAqG;AACzJ;AAAA;AAAA;AAAA;;AACI,uCAAYC,cAAZ,EAA4BC,gBAA5B,EAA8C;AAAA;;AAAA;;AAC1C,qGAAMD,cAAN;AACA,cAAKA,cAAL,GAAsBA,cAAtB;AACAN,QAAAA,aAAa,CAACQ,GAAd,gCAAwBF,cAAxB,EAH0C,CAI1C;;AACA,YAAMG,UAAU,GAAGH,cAAc,CAACG,UAAlC;AACAC,QAAAA,MAAM,CAACC,cAAP,CAAsBL,cAAtB,EAAsC,YAAtC,EAAoD;AAChDM,UAAAA,GAAG,EAAE;AAAA,mBAAMH,UAAN;AAAA;AAD2C,SAApD;AAGA,cAAKI,YAAL,GAAoB,IAAIX,+BAAJ,gCAA0CK,gBAA1C,CAApB;AACA,cAAKO,SAAL,GAAiBX,mBAAmB,gCAAOG,cAAP,CAApC;AACA,cAAKS,cAAL,GAAsB,IAAtB;AAX0C;AAY7C;;AAbL;AAAA;AAAA,4BAcsB;AACd,iBAAO,KAAKT,cAAL,CAAoBU,WAA3B;AACH;AAhBL;AAAA;AAAA,4BAiBsB;AACd,iBAAO,KAAKH,YAAZ;AACH;AAnBL;AAAA;AAAA,4BAoBmB;AACX,iBAAO,KAAKC,SAAZ;AACH;AAtBL;AAAA;AAAA,4BAuBwB;AAChB,iBAAO,KAAKC,cAAZ;AACH,SAzBL;AAAA,0BA0BsBE,KA1BtB,EA0B6B;AACrB,cAAMC,eAAe,GAAI,OAAOD,KAAP,KAAiB,UAAlB,GAAgCZ,iBAAiB,CAAC,IAAD,EAAOY,KAAP,CAAjD,GAAiE,IAAzF;AACA,eAAKX,cAAL,CAAoBa,aAApB,GAAoCD,eAApC;AACA,cAAME,mBAAmB,GAAG,KAAKd,cAAL,CAAoBa,aAAhD;AACA,eAAKJ,cAAL,GAAuBK,mBAAmB,KAAK,IAAxB,IAAgCA,mBAAmB,KAAKF,eAAzD,GAA4ED,KAA5E,GAAoFG,mBAA1G;AACH;AA/BL;AAAA;AAAA,4BAgCqB;AACb,iBAAO,KAAKd,cAAL,CAAoBG,UAA3B;AACH;AAlCL;AAAA;AAAA,4BAmCgB;AACR,iBAAO,KAAKH,cAAL,CAAoBe,KAA3B;AACH;AArCL;;AAAA;AAAA,MAA6CjB,sBAA7C;AAAA;AAuCH,CAxCM","sourcesContent":["import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n            const sampleRate = _nativeContext.sampleRate;\n            Object.defineProperty(_nativeContext, 'sampleRate', {\n                get: () => sampleRate\n            });\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = (nativeOnStateChange !== null && nativeOnStateChange === wrappedListener) ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/minimal-base-audio-context-constructor.js.map"]},"metadata":{},"sourceType":"module"}