{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Player/Visuals.tsx\";\n\n/** @jsx jsx */\nimport { useState, useEffect, useRef } from \"react\";\nexport const Visuals = ({\n  audioset\n}) => {\n  const _useVisuals = useVisuals(audioset),\n        ref = _useVisuals.ref,\n        visuals = _useVisuals.visuals;\n\n  return jsx(\"div\", {\n    ref: ref,\n    className: \"Visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"map here\");\n};\n\nfunction useVisuals(audioset) {\n  const ref = useRef();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        visuals = _useState2[0],\n        setVisuals = _useState2[1];\n\n  useEffect(() => {\n    import(\"../../visuals/index\").then(m => {\n      if (ref.current) {\n        const el = ref.current;\n        const visuals = m;\n        setVisuals(audioset && visuals.createVisuals(audioset, el));\n      }\n    });\n  }, [audioset, ref.current]);\n  return {\n    visuals,\n    ref\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Visuals.tsx"],"names":["useState","useEffect","useRef","Visuals","audioset","useVisuals","ref","visuals","setVisuals","then","m","current","el","createVisuals"],"mappings":";;;AAAA;AACA,SAAgBA,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAOA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC;AAAA,sBAC5BC,UAAU,CAACD,QAAD,CADkB;AAAA,QAC7CE,GAD6C,eAC7CA,GAD6C;AAAA,QACxCC,OADwC,eACxCA,OADwC;;AAErD,SACE;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,CAPM;;AAaP,SAASD,UAAT,CAAoBD,QAApB,EAAwC;AACtC,QAAME,GAAG,GAAGJ,MAAM,EAAlB;;AADsC,oBAERF,QAAQ,EAFA;AAAA;AAAA,QAE/BO,OAF+B;AAAA,QAEtBC,UAFsB;;AAItCP,EAAAA,SAAS,CACP,MAAM;AACJ,WAAO,qBAAP,EAA8BQ,IAA9B,CAAoCC,CAAD,IAAgB;AACjD,UAAIJ,GAAG,CAACK,OAAR,EAAiB;AACf,cAAMC,EAAE,GAAIN,GAAG,CAACK,OAAhB;AACA,cAAMJ,OAAO,GAAGG,CAAhB;AACAF,QAAAA,UAAU,CAACJ,QAAQ,IAAIG,OAAO,CAACM,aAAR,CAAsBT,QAAtB,EAAgCQ,EAAhC,CAAb,CAAV;AACD;AACF,KAND;AAOD,GATM,EAUP,CAACR,QAAD,EAAWE,GAAG,CAACK,OAAf,CAVO,CAAT;AAaA,SAAO;AAAEJ,IAAAA,OAAF;AAAWD,IAAAA;AAAX,GAAP;AACD","sourcesContent":["/** @jsx jsx */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Audioset } from \"../../Player\";\n\ninterface VisualsProps {\n  audioset: Audioset;\n}\n\nexport const Visuals = ({ audioset }: VisualsProps) => {\n  const { ref, visuals } = useVisuals(audioset);\n  return (\n    <div ref={ref} className=\"Visuals\">\n      map here\n    </div>\n  );\n};\n\ninterface VisualsModule {\n  createVisuals(audioset: Audioset, el: HTMLDivElement): {};\n}\n\nfunction useVisuals(audioset: Audioset) {\n  const ref = useRef();\n  const [visuals, setVisuals] = useState();\n\n  useEffect(\n    () => {\n      import(\"../../visuals/index\").then((m: unknown) => {\n        if (ref.current) {\n          const el = (ref.current as unknown) as HTMLDivElement;\n          const visuals = m as VisualsModule;\n          setVisuals(audioset && visuals.createVisuals(audioset, el));\n        }\n      });\n    },\n    [audioset, ref.current],\n  );\n\n  return { visuals, ref };\n}\n"]},"metadata":{},"sourceType":"module"}