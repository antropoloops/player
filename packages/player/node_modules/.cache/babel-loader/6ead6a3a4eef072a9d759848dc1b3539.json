{"ast":null,"code":"import _classCallCheck from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nexport var createMediaStreamTrackAudioSourceNodeConstructor = function createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) {\n  return (\n    /*#__PURE__*/\n    function (_audioNodeConstructor) {\n      _inherits(MediaStreamTrackAudioSourceNode, _audioNodeConstructor);\n\n      function MediaStreamTrackAudioSourceNode(context, options) {\n        _classCallCheck(this, MediaStreamTrackAudioSourceNode);\n\n        var nativeContext = getNativeContext(context);\n\n        if (isNativeOfflineAudioContext(nativeContext)) {\n          throw createNotSupportedError();\n        }\n\n        var nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n        return _possibleConstructorReturn(this, _getPrototypeOf(MediaStreamTrackAudioSourceNode).call(this, context, true, nativeMediaStreamTrackAudioSourceNode, null));\n      }\n\n      return MediaStreamTrackAudioSourceNode;\n    }(audioNodeConstructor)\n  );\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/media-stream-track-audio-source-node-constructor.js"],"names":["createMediaStreamTrackAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","createNotSupportedError","getNativeContext","isNativeOfflineAudioContext","context","options","nativeContext","nativeMediaStreamTrackAudioSourceNode"],"mappings":";;;;AAAA,OAAO,IAAMA,gDAAgD,GAAG,SAAnDA,gDAAmD,CAACC,oBAAD,EAAuBC,2CAAvB,EAAoEC,uBAApE,EAA6FC,gBAA7F,EAA+GC,2BAA/G,EAA+I;AAC3M;AAAA;AAAA;AAAA;;AACI,+CAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC1B,YAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAD,CAAtC;;AACA,YAAID,2BAA2B,CAACG,aAAD,CAA/B,EAAgD;AAC5C,gBAAML,uBAAuB,EAA7B;AACH;;AACD,YAAMM,qCAAqC,GAAGP,2CAA2C,CAACM,aAAD,EAAgBD,OAAhB,CAAzF;AAL0B,4GAMpBD,OANoB,EAMX,IANW,EAMLG,qCANK,EAMkC,IANlC;AAO7B;;AARL;AAAA,MAAqDR,oBAArD;AAAA;AAUH,CAXM","sourcesContent":["export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw createNotSupportedError();\n            }\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/media-stream-track-audio-source-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}