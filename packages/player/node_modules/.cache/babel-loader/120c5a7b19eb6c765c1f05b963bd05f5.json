{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport var createNativeBiquadFilterNodeFactory = function createNativeBiquadFilterNodeFactory(createNativeAudioNode) {\n  return function (nativeContext, options) {\n    var nativeBiquadFilterNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {\n      return ntvCntxt.createBiquadFilter();\n    });\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/native-biquad-filter-node-factory.js"],"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOption","assignNativeAudioNodeOptions","createNativeBiquadFilterNodeFactory","createNativeAudioNode","nativeContext","options","nativeBiquadFilterNode","ntvCntxt","createBiquadFilter"],"mappings":"AAAA,SAASA,oCAAT,QAAqD,uDAArD;AACA,SAASC,2BAAT,QAA4C,4CAA5C;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AACA,OAAO,IAAMC,mCAAmC,GAAG,SAAtCA,mCAAsC,CAACC,qBAAD,EAA2B;AAC1E,SAAO,UAACC,aAAD,EAAgBC,OAAhB,EAA4B;AAC/B,QAAMC,sBAAsB,GAAGH,qBAAqB,CAACC,aAAD,EAAgB,UAACG,QAAD;AAAA,aAAcA,QAAQ,CAACC,kBAAT,EAAd;AAAA,KAAhB,CAApD;AACAP,IAAAA,4BAA4B,CAACK,sBAAD,EAAyBD,OAAzB,CAA5B;AACAN,IAAAA,oCAAoC,CAACO,sBAAD,EAAyBD,OAAzB,EAAkC,GAAlC,CAApC;AACAN,IAAAA,oCAAoC,CAACO,sBAAD,EAAyBD,OAAzB,EAAkC,QAAlC,CAApC;AACAN,IAAAA,oCAAoC,CAACO,sBAAD,EAAyBD,OAAzB,EAAkC,WAAlC,CAApC;AACAN,IAAAA,oCAAoC,CAACO,sBAAD,EAAyBD,OAAzB,EAAkC,MAAlC,CAApC;AACAL,IAAAA,2BAA2B,CAACM,sBAAD,EAAyBD,OAAzB,EAAkC,MAAlC,CAA3B;AACA,WAAOC,sBAAP;AACH,GATD;AAUH,CAXM","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBiquadFilter());\n        assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n        assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n        return nativeBiquadFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-biquad-filter-node-factory.js.map"]},"metadata":{},"sourceType":"module"}