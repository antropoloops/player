{"ast":null,"code":"import{createAudioset}from\"../../audioset\";// const PRODUCTION = `https://antropoloops-production.s3.eu-west-3.amazonaws.com/files`;\nvar STAGING=\"https://play-admin.antropoloops.com/api/1.0/index\";// const getProductionUrl = (idOrUrl: string) =>\n//   idOrUrl.endsWith(\".json\")\n//     ? idOrUrl\n//     : `${PRODUCTION}/${idOrUrl}.audioset.json`;\n// const dbServerUrl = (idOrUrl: string) =>\n//   idOrUrl === \"index\"\n//     ? `http://localhost:1234/index`\n//     : `http://localhost:1234/set/${idOrUrl}`;\nvar getStaginUrl=function getStaginUrl(idOrUrl){return idOrUrl.endsWith(\".json\")?idOrUrl:idOrUrl===\"index\"?STAGING:\"\".concat(STAGING,\"/\").concat(idOrUrl);};// const getUrl = getProductionUrl; // dbServerUrl;\nvar getUrl=getStaginUrl;export function fetchAudioset(idOrUrl){return fetch(getUrl(idOrUrl)).then(function(r){return r.json();}).then(createAudioset);}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/ui/lib/fetchAudioset.ts"],"names":["createAudioset","STAGING","getStaginUrl","idOrUrl","endsWith","getUrl","fetchAudioset","fetch","then","r","json"],"mappings":"AAAA,OAAiBA,cAAjB,KAAuC,gBAAvC,CAEA;AACA,GAAMC,CAAAA,OAAO,oDAAb,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,QACnBA,CAAAA,OAAO,CAACC,QAAR,CAAiB,OAAjB,EACID,OADJ,CAEIA,OAAO,GAAK,OAAZ,CACAF,OADA,WAEGA,OAFH,aAEcE,OAFd,CAHe,EAArB,CAOA;AACA,GAAME,CAAAA,MAAM,CAAGH,YAAf,CAEA,MAAO,SAASI,CAAAA,aAAT,CAAuBH,OAAvB,CAAyD,CAC9D,MAAOI,CAAAA,KAAK,CAACF,MAAM,CAACF,OAAD,CAAP,CAAL,CACJK,IADI,CACC,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,EADD,EAEJF,IAFI,CAECR,cAFD,CAAP,CAGD","sourcesContent":["import { Bundle, createAudioset } from \"../../audioset\";\n\n// const PRODUCTION = `https://antropoloops-production.s3.eu-west-3.amazonaws.com/files`;\nconst STAGING = `https://play-admin.antropoloops.com/api/1.0/index`;\n\n// const getProductionUrl = (idOrUrl: string) =>\n//   idOrUrl.endsWith(\".json\")\n//     ? idOrUrl\n//     : `${PRODUCTION}/${idOrUrl}.audioset.json`;\n\n// const dbServerUrl = (idOrUrl: string) =>\n//   idOrUrl === \"index\"\n//     ? `http://localhost:1234/index`\n//     : `http://localhost:1234/set/${idOrUrl}`;\n\nconst getStaginUrl = (idOrUrl: string) =>\n  idOrUrl.endsWith(\".json\")\n    ? idOrUrl\n    : idOrUrl === \"index\"\n    ? STAGING\n    : `${STAGING}/${idOrUrl}`;\n\n// const getUrl = getProductionUrl; // dbServerUrl;\nconst getUrl = getStaginUrl;\n\nexport function fetchAudioset(idOrUrl: string): Promise<Bundle> {\n  return fetch(getUrl(idOrUrl))\n    .then((r) => r.json())\n    .then(createAudioset);\n}\n"]},"metadata":{},"sourceType":"module"}