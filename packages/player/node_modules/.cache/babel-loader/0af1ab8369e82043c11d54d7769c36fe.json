{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Player/Clip.tsx\";\nimport React, { useState, createRef } from \"react\";\nimport { ClosedClip } from \"./ClosedClip\";\nimport { OpenClip } from \"./OpenClip\";\nexport const Clip = ({\n  id,\n  clip\n}) => {\n  // TODO: scroll to item\n  // TODO: animations\n  const ref = createRef();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isSelected = _useState2[0],\n        setSelected = _useState2[1];\n\n  const View = isSelected ? OpenClip : ClosedClip;\n\n  const handleClick = () => {\n    setSelected(!isSelected); // ref.current.scrollIntoView({\n    //   behavior: \"smooth\",\n    //   block: \"start\"\n    // });\n  };\n\n  return React.createElement(View, {\n    ref: ref,\n    clip: clip,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Clip.tsx"],"names":["React","useState","createRef","ClosedClip","OpenClip","Clip","id","clip","ref","isSelected","setSelected","View","handleClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAOA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAA6B;AAC/C;AACA;AACA,QAAMC,GAAG,GAAGN,SAAS,EAArB;;AAH+C,oBAIbD,QAAQ,CAAC,KAAD,CAJK;AAAA;AAAA,QAIxCQ,UAJwC;AAAA,QAI5BC,WAJ4B;;AAK/C,QAAMC,IAAI,GAAGF,UAAU,GAAGL,QAAH,GAAcD,UAArC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBF,IAAAA,WAAW,CAAC,CAACD,UAAF,CAAX,CADwB,CAExB;AACA;AACA;AACA;AACD,GAND;;AAQA,SAAO,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAED,GAAX;AAAgB,IAAA,IAAI,EAAED,IAAtB;AAA4B,IAAA,OAAO,EAAEK,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAhBM","sourcesContent":["import React, { useState, createRef } from \"react\";\nimport { ClosedClip } from \"./ClosedClip\";\nimport { OpenClip } from \"./OpenClip\";\n\ntype ClipProps = {\n  id: string;\n  clip: any;\n};\n\nexport const Clip = ({ id, clip }: ClipProps) => {\n  // TODO: scroll to item\n  // TODO: animations\n  const ref = createRef();\n  const [isSelected, setSelected] = useState(false);\n  const View = isSelected ? OpenClip : ClosedClip;\n\n  const handleClick = () => {\n    setSelected(!isSelected);\n    // ref.current.scrollIntoView({\n    //   behavior: \"smooth\",\n    //   block: \"start\"\n    // });\n  };\n\n  return <View ref={ref} clip={clip} onClick={handleClick} />;\n};\n"]},"metadata":{},"sourceType":"module"}