{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) : typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) : (global = global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, function (exports, _slicedToArray, _classCallCheck, _createClass) {\n  'use strict';\n\n  _slicedToArray = _slicedToArray && _slicedToArray.hasOwnProperty('default') ? _slicedToArray['default'] : _slicedToArray;\n  _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n  _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n\n  var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n    return {\n      endTime: endTime,\n      insertTime: insertTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n    return {\n      startTime: startTime,\n      type: 'setValue',\n      value: value\n    };\n  };\n\n  var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n    return {\n      duration: duration,\n      startTime: startTime,\n      type: 'setValueCurve',\n      values: values\n    };\n  };\n\n  var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n    var startTime = _ref.startTime,\n        target = _ref.target,\n        timeConstant = _ref.timeConstant;\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n  };\n\n  var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'exponentialRampToValue';\n  };\n\n  var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'linearRampToValue';\n  };\n\n  var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n  };\n\n  var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValue';\n  };\n\n  var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setValueCurve';\n  };\n\n  var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n    var automationEvent = automationEvents[index];\n    return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n  };\n\n  var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n    return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n  };\n\n  var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelAndHold';\n  };\n\n  var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n    return automationEvent.type === 'cancelScheduledValues';\n  };\n\n  var getEventTime = function getEventTime(automationEvent) {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n      return automationEvent.cancelTime;\n    }\n\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n      return automationEvent.endTime;\n    }\n\n    return automationEvent.startTime;\n  };\n\n  var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n\n    if (valueAtStartTime === value) {\n      return value;\n    }\n\n    if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n      return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n    }\n\n    return 0;\n  };\n\n  var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n    var endTime = _ref.endTime,\n        value = _ref.value;\n    return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n  };\n\n  var interpolateValue = function interpolateValue(values, theoreticIndex) {\n    var lowerIndex = Math.floor(theoreticIndex);\n    var upperIndex = Math.ceil(theoreticIndex);\n\n    if (lowerIndex === upperIndex) {\n      return values[lowerIndex];\n    }\n\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n  };\n\n  var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n    var duration = _ref.duration,\n        startTime = _ref.startTime,\n        values = _ref.values;\n    var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n  };\n\n  var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n    return automationEvent.type === 'setTarget';\n  };\n\n  var AutomationEventList =\n  /*#__PURE__*/\n  function () {\n    function AutomationEventList(defaultValue) {\n      _classCallCheck(this, AutomationEventList);\n\n      this._automationEvents = [];\n      this._currenTime = 0;\n      this._defaultValue = defaultValue;\n    }\n\n    _createClass(AutomationEventList, [{\n      key: Symbol.iterator,\n      value: function value() {\n        return this._automationEvents[Symbol.iterator]();\n      }\n    }, {\n      key: \"add\",\n      value: function add(automationEvent) {\n        var eventTime = getEventTime(automationEvent);\n\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) >= eventTime;\n          });\n\n          var removedAutomationEvent = this._automationEvents[index];\n\n          if (index !== -1) {\n            this._automationEvents = this._automationEvents.slice(0, index);\n          }\n\n          if (isCancelAndHoldAutomationEvent(automationEvent)) {\n            var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n            if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n              if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                throw new Error('The internal list is malformed.');\n              }\n\n              var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n              var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n              var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n              var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n              this._automationEvents.push(truncatedAutomationEvent);\n            }\n\n            if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n              this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n            }\n\n            if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n              this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n            }\n          }\n        } else {\n          var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > eventTime;\n          });\n\n          var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n          if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n            return false;\n          }\n\n          var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n          if (_index === -1) {\n            this._automationEvents.push(persistentAutomationEvent);\n          } else {\n            if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n              return false;\n            }\n\n            this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n          }\n        }\n\n        return true;\n      }\n    }, {\n      key: \"flush\",\n      value: function flush(time) {\n        var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n          return getEventTime(currentAutomationEvent) > time;\n        });\n\n        if (index > 1) {\n          var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n          var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n          if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n            remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n          }\n\n          this._automationEvents = remainingAutomationEvents;\n        }\n      }\n    }, {\n      key: \"getValue\",\n      value: function getValue(time) {\n        if (this._automationEvents.length === 0) {\n          return this._defaultValue;\n        }\n\n        var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n        var index = this._automationEvents.findIndex(function (automationEvent) {\n          return getEventTime(automationEvent) > time;\n        });\n\n        var nextAutomationEvent = this._automationEvents[index];\n        var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n        if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n          return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n          if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n            return getValueCurveValueAtTime(time, currentAutomationEvent);\n          }\n\n          return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n\n        if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n          return currentAutomationEvent.value;\n        }\n\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n              startTime = _getEndTimeAndValueOf2[0],\n              value = _getEndTimeAndValueOf2[1];\n\n          return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n          var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n              _startTime = _getEndTimeAndValueOf4[0],\n              _value = _getEndTimeAndValueOf4[1];\n\n          return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n        }\n\n        return this._defaultValue;\n      }\n    }]);\n\n    return AutomationEventList;\n  }();\n\n  var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelAndHold'\n    };\n  };\n\n  var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n    return {\n      cancelTime: cancelTime,\n      type: 'cancelScheduledValues'\n    };\n  };\n\n  var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'exponentialRampToValue',\n      value: value\n    };\n  };\n\n  var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n    return {\n      endTime: endTime,\n      type: 'linearRampToValue',\n      value: value\n    };\n  };\n\n  var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n    return {\n      startTime: startTime,\n      target: target,\n      timeConstant: timeConstant,\n      type: 'setTarget'\n    };\n  };\n\n  exports.AutomationEventList = AutomationEventList;\n  exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n  exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n  exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n  exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n  exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n  exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n  exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/automation-events/build/es5/bundle.js"],"names":["global","factory","exports","module","require","define","amd","self","automationEvents","_slicedToArray","_classCallCheck","_createClass","hasOwnProperty","createExtendedExponentialRampToValueAutomationEvent","value","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","index","defaultValue","undefined","length","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_automationEvents","_currenTime","_defaultValue","key","Symbol","iterator","add","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","push","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","flush","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    _slicedToArray = _slicedToArray && _slicedToArray.hasOwnProperty('default') ? _slicedToArray['default'] : _slicedToArray;\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList =\n    /*#__PURE__*/\n    function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck(this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass(AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n          var index = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[index];\n          var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}