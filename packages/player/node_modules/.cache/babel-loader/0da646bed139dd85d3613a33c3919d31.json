{"ast":null,"code":"import _slicedToArray from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{isAudioset}from\"../../audioset\";import{fetchAudioset}from\"../../player/fetchAudioset\";import{Player}from\"../Player\";import{Project as ProjectView}from\"../Project\";import\"./App.css\";import Loading from\"./Loading\";import NotFound from\"./NotFound\";import{useBundleLoadStatus}from\"./useBundleLoadStatus\";export var Bundle=function Bundle(_ref){var idOrUrl=_ref.idOrUrl;var _useFetchAudioset=useFetchAudioset(idOrUrl),bundle=_useFetchAudioset.bundle,loading=_useFetchAudioset.loading;if(loading){return React.createElement(Loading,null);}else if(bundle){return isAudioset(bundle)?React.createElement(Player,{audioset:bundle}):React.createElement(ProjectView,{project:bundle});}else{return React.createElement(NotFound,null);}};function useFetchAudioset(idOrUrl){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),bundle=_useState2[0],setBundle=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var didCancel=false;setLoading(true);fetchAudioset(idOrUrl).then(function(result){if(!didCancel){setLoading(false);setBundle(result);}}).catch(setError);return function(){didCancel=true;};},[idOrUrl]);return{bundle:bundle,loading:loading,error:error};}export var BundleOld=function BundleOld(_ref2){var idOrUrl=_ref2.idOrUrl;var loadStatus=useBundleLoadStatus(idOrUrl);switch(loadStatus.stage){case\"loading\":return React.createElement(Loading,null);case\"ready\":var bundle=loadStatus.payload;return isAudioset(bundle)?React.createElement(Player,{audioset:bundle}):React.createElement(ProjectView,{project:bundle});case\"error\":return React.createElement(NotFound,null);default:return React.createElement(\"pre\",{style:{color:\"white\"}},JSON.stringify(loadStatus,null,2));}};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/App/Bundle.tsx"],"names":["React","useEffect","useState","isAudioset","fetchAudioset","Player","Project","ProjectView","Loading","NotFound","useBundleLoadStatus","Bundle","idOrUrl","useFetchAudioset","bundle","loading","setBundle","setLoading","error","setError","didCancel","then","result","catch","BundleOld","loadStatus","stage","payload","color","JSON","stringify"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAA+BC,UAA/B,KAA0D,gBAA1D,CACA,OAASC,aAAT,KAA8B,4BAA9B,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,OAAO,GAAIC,CAAAA,WAApB,KAAuC,YAAvC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,mBAAT,KAAoC,uBAApC,CAKA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA8B,IAA3BC,CAAAA,OAA2B,MAA3BA,OAA2B,uBACtBC,gBAAgB,CAACD,OAAD,CADM,CAC1CE,MAD0C,mBAC1CA,MAD0C,CAClCC,OADkC,mBAClCA,OADkC,CAElD,GAAIA,OAAJ,CAAa,CACX,MAAO,qBAAC,OAAD,MAAP,CACD,CAFD,IAEO,IAAID,MAAJ,CAAY,CACjB,MAAOX,CAAAA,UAAU,CAACW,MAAD,CAAV,CACL,oBAAC,MAAD,EAAQ,QAAQ,CAAEA,MAAlB,EADK,CAGL,oBAAC,WAAD,EAAa,OAAO,CAAEA,MAAtB,EAHF,CAKD,CANM,IAMA,CACL,MAAO,qBAAC,QAAD,MAAP,CACD,CACF,CAbM,CAeP,QAASD,CAAAA,gBAAT,CAA0BD,OAA1B,CAA2C,eACbV,QAAQ,CAAoB,IAApB,CADK,wCAClCY,MADkC,eAC1BE,SAD0B,8BAEXd,QAAQ,CAAU,IAAV,CAFG,yCAElCa,OAFkC,eAEzBE,UAFyB,8BAGff,QAAQ,CAAM,IAAN,CAHO,yCAGlCgB,KAHkC,eAG3BC,QAH2B,eAKzClB,SAAS,CAAC,UAAM,CACd,GAAImB,CAAAA,SAAS,CAAG,KAAhB,CACAH,UAAU,CAAC,IAAD,CAAV,CACAb,aAAa,CAACQ,OAAD,CAAb,CACGS,IADH,CACQ,SAAAC,MAAM,CAAI,CACd,GAAI,CAACF,SAAL,CAAgB,CACdH,UAAU,CAAC,KAAD,CAAV,CACAD,SAAS,CAACM,MAAD,CAAT,CACD,CACF,CANH,EAOGC,KAPH,CAOSJ,QAPT,EAQA,MAAO,WAAM,CACXC,SAAS,CAAG,IAAZ,CACD,CAFD,CAGD,CAdQ,CAcN,CAACR,OAAD,CAdM,CAAT,CAgBA,MAAO,CAAEE,MAAM,CAANA,MAAF,CAAUC,OAAO,CAAPA,OAAV,CAAmBG,KAAK,CAALA,KAAnB,CAAP,CACD,CAED,MAAO,IAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,OAA8B,IAA3BZ,CAAAA,OAA2B,OAA3BA,OAA2B,CACrD,GAAMa,CAAAA,UAAU,CAAGf,mBAAmB,CAACE,OAAD,CAAtC,CAEA,OAAQa,UAAU,CAACC,KAAnB,EACE,IAAK,SAAL,CACE,MAAO,qBAAC,OAAD,MAAP,CACF,IAAK,OAAL,CACE,GAAMZ,CAAAA,MAAM,CAAGW,UAAU,CAACE,OAA1B,CACA,MAAOxB,CAAAA,UAAU,CAACW,MAAD,CAAV,CACL,oBAAC,MAAD,EAAQ,QAAQ,CAAEA,MAAlB,EADK,CAGL,oBAAC,WAAD,EAAa,OAAO,CAAEA,MAAtB,EAHF,CAKF,IAAK,OAAL,CACE,MAAO,qBAAC,QAAD,MAAP,CACF,QACE,MACE,4BAAK,KAAK,CAAE,CAAEc,KAAK,CAAE,OAAT,CAAZ,EACGC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAA2B,IAA3B,CAAiC,CAAjC,CADH,CADF,CAbJ,CAmBD,CAtBM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bundle as BundleData, isAudioset, Project } from \"../../audioset\";\nimport { fetchAudioset } from \"../../player/fetchAudioset\";\nimport { Player } from \"../Player\";\nimport { Project as ProjectView } from \"../Project\";\nimport \"./App.css\";\nimport Loading from \"./Loading\";\nimport NotFound from \"./NotFound\";\nimport { useBundleLoadStatus } from \"./useBundleLoadStatus\";\n\ninterface BundleProps {\n  idOrUrl: string;\n}\nexport const Bundle = ({ idOrUrl }: BundleProps) => {\n  const { bundle, loading } = useFetchAudioset(idOrUrl);\n  if (loading) {\n    return <Loading />;\n  } else if (bundle) {\n    return isAudioset(bundle) ? (\n      <Player audioset={bundle} />\n    ) : (\n      <ProjectView project={bundle as Project} />\n    );\n  } else {\n    return <NotFound />;\n  }\n};\n\nfunction useFetchAudioset(idOrUrl: string) {\n  const [bundle, setBundle] = useState<BundleData | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<any>(null);\n\n  useEffect(() => {\n    let didCancel = false;\n    setLoading(true);\n    fetchAudioset(idOrUrl)\n      .then(result => {\n        if (!didCancel) {\n          setLoading(false);\n          setBundle(result);\n        }\n      })\n      .catch(setError);\n    return () => {\n      didCancel = true;\n    };\n  }, [idOrUrl]);\n\n  return { bundle, loading, error };\n}\n\nexport const BundleOld = ({ idOrUrl }: BundleProps) => {\n  const loadStatus = useBundleLoadStatus(idOrUrl);\n\n  switch (loadStatus.stage) {\n    case \"loading\":\n      return <Loading />;\n    case \"ready\":\n      const bundle = loadStatus.payload;\n      return isAudioset(bundle) ? (\n        <Player audioset={bundle} />\n      ) : (\n        <ProjectView project={bundle as Project} />\n      );\n    case \"error\":\n      return <NotFound />;\n    default:\n      return (\n        <pre style={{ color: \"white\" }}>\n          {JSON.stringify(loadStatus, null, 2)}\n        </pre>\n      );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}