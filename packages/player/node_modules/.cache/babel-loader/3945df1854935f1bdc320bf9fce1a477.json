{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ConvolverNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;\n      super(context, false, nativeConvolverNode, convolverNodeRenderer);\n      this._isBufferNullified = false;\n      this._nativeConvolverNode = nativeConvolverNode;\n    }\n\n    get buffer() {\n      if (this._isBufferNullified) {\n        return null;\n      }\n\n      return this._nativeConvolverNode.buffer;\n    }\n\n    set buffer(value) {\n      this._nativeConvolverNode.buffer = value; // Bug #115: Safari does not allow to set the buffer to null.\n\n      if (value === null && this._nativeConvolverNode.buffer !== null) {\n        const nativeContext = this._nativeConvolverNode.context;\n        this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n        this._isBufferNullified = true;\n      } else {\n        this._isBufferNullified = false;\n      }\n    }\n\n    get normalize() {\n      return this._nativeConvolverNode.normalize;\n    }\n\n    set normalize(value) {\n      this._nativeConvolverNode.normalize = value;\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/convolver-node-constructor.js"],"names":["DEFAULT_OPTIONS","buffer","channelCount","channelCountMode","channelInterpretation","disableNormalization","createConvolverNodeConstructor","audioNodeConstructor","createConvolverNodeRenderer","createNativeConvolverNode","getNativeContext","isNativeOfflineAudioContext","ConvolverNode","constructor","context","options","nativeContext","mergedOptions","nativeConvolverNode","isOffline","convolverNodeRenderer","_isBufferNullified","_nativeConvolverNode","value","createBuffer","sampleRate","normalize"],"mappings":"AAAA,MAAMA,eAAe,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,YAAY,EAAE,CAFM;AAGpBC,EAAAA,gBAAgB,EAAE,aAHE;AAIpBC,EAAAA,qBAAqB,EAAE,UAJH;AAKpBC,EAAAA,oBAAoB,EAAE;AALF,CAAxB;AAOA,OAAO,MAAMC,8BAA8B,GAAG,CAACC,oBAAD,EAAuBC,2BAAvB,EAAoDC,yBAApD,EAA+EC,gBAA/E,EAAiGC,2BAAjG,KAAiI;AAC3K,SAAO,MAAMC,aAAN,SAA4BL,oBAA5B,CAAiD;AACpDM,IAAAA,WAAW,CAACC,OAAD,EAAUC,OAAO,GAAGf,eAApB,EAAqC;AAC5C,YAAMgB,aAAa,GAAGN,gBAAgB,CAACI,OAAD,CAAtC;AACA,YAAMG,aAAa,GAAG,EAAE,GAAGjB,eAAL;AAAsB,WAAGe;AAAzB,OAAtB;AACA,YAAMG,mBAAmB,GAAGT,yBAAyB,CAACO,aAAD,EAAgBC,aAAhB,CAArD;AACA,YAAME,SAAS,GAAGR,2BAA2B,CAACK,aAAD,CAA7C;AACA,YAAMI,qBAAqB,GAAKD,SAAD,GAAcX,2BAA2B,EAAzC,GAA8C,IAA7E;AACA,YAAMM,OAAN,EAAe,KAAf,EAAsBI,mBAAtB,EAA2CE,qBAA3C;AACA,WAAKC,kBAAL,GAA0B,KAA1B;AACA,WAAKC,oBAAL,GAA4BJ,mBAA5B;AACH;;AACD,QAAIjB,MAAJ,GAAa;AACT,UAAI,KAAKoB,kBAAT,EAA6B;AACzB,eAAO,IAAP;AACH;;AACD,aAAO,KAAKC,oBAAL,CAA0BrB,MAAjC;AACH;;AACD,QAAIA,MAAJ,CAAWsB,KAAX,EAAkB;AACd,WAAKD,oBAAL,CAA0BrB,MAA1B,GAAmCsB,KAAnC,CADc,CAEd;;AACA,UAAIA,KAAK,KAAK,IAAV,IAAkB,KAAKD,oBAAL,CAA0BrB,MAA1B,KAAqC,IAA3D,EAAiE;AAC7D,cAAMe,aAAa,GAAG,KAAKM,oBAAL,CAA0BR,OAAhD;AACA,aAAKQ,oBAAL,CAA0BrB,MAA1B,GAAmCe,aAAa,CAACQ,YAAd,CAA2B,CAA3B,EAA8B,CAA9B,EAAiCR,aAAa,CAACS,UAA/C,CAAnC;AACA,aAAKJ,kBAAL,GAA0B,IAA1B;AACH,OAJD,MAKK;AACD,aAAKA,kBAAL,GAA0B,KAA1B;AACH;AACJ;;AACD,QAAIK,SAAJ,GAAgB;AACZ,aAAO,KAAKJ,oBAAL,CAA0BI,SAAjC;AACH;;AACD,QAAIA,SAAJ,CAAcH,KAAd,EAAqB;AACjB,WAAKD,oBAAL,CAA0BI,SAA1B,GAAsCH,KAAtC;AACH;;AAlCmD,GAAxD;AAoCH,CArCM","sourcesContent":["const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = ((isOffline) ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n            }\n            else {\n                this._isBufferNullified = false;\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/convolver-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}