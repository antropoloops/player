{"ast":null,"code":"import React from\"react\";import{isAudioset}from\"../audioset\";import\"./App.css\";import{Browser}from\"./Browser\";import Loading from\"./Loading\";import NotFound from\"./NotFound\";import{Player}from\"./Player\";import{useBundleLoadStatus}from\"./useBundleLoadStatus\";export var LoadAudioset=function LoadAudioset(_ref){var idOrUrl=_ref.idOrUrl;var loadStatus=useBundleLoadStatus(idOrUrl);switch(loadStatus.stage){case\"loading\":return React.createElement(Loading,null);case\"ready\":var bundle=loadStatus.payload;return isAudioset(bundle)?React.createElement(Player,{audioset:bundle}):React.createElement(Browser,{project:bundle});case\"error\":return React.createElement(NotFound,null);default:return React.createElement(\"pre\",{style:{color:\"white\"}},JSON.stringify(loadStatus,null,2));}};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/LoadAudioset.tsx"],"names":["React","isAudioset","Browser","Loading","NotFound","Player","useBundleLoadStatus","LoadAudioset","idOrUrl","loadStatus","stage","bundle","payload","color","JSON","stringify"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAAoC,aAApC,CACA,MAAO,WAAP,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,mBAAT,KAAoC,uBAApC,CAMA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAoC,IAAjCC,CAAAA,OAAiC,MAAjCA,OAAiC,CAC9D,GAAMC,CAAAA,UAAU,CAAGH,mBAAmB,CAACE,OAAD,CAAtC,CAEA,OAAQC,UAAU,CAACC,KAAnB,EACE,IAAK,SAAL,CACE,MAAO,qBAAC,OAAD,MAAP,CACF,IAAK,OAAL,CACE,GAAMC,CAAAA,MAAM,CAAGF,UAAU,CAACG,OAA1B,CACA,MAAOX,CAAAA,UAAU,CAACU,MAAD,CAAV,CACL,oBAAC,MAAD,EAAQ,QAAQ,CAAEA,MAAlB,EADK,CAGL,oBAAC,OAAD,EAAS,OAAO,CAAEA,MAAlB,EAHF,CAKF,IAAK,OAAL,CACE,MAAO,qBAAC,QAAD,MAAP,CACF,QACE,MACE,4BAAK,KAAK,CAAE,CAAEE,KAAK,CAAE,OAAT,CAAZ,EACGC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAA2B,IAA3B,CAAiC,CAAjC,CADH,CADF,CAbJ,CAmBD,CAtBM","sourcesContent":["import React from \"react\";\nimport { isAudioset, Project } from \"../audioset\";\nimport \"./App.css\";\nimport { Browser } from \"./Browser\";\nimport Loading from \"./Loading\";\nimport NotFound from \"./NotFound\";\nimport { Player } from \"./Player\";\nimport { useBundleLoadStatus } from \"./useBundleLoadStatus\";\n\ninterface LoadAudiosetProps {\n  idOrUrl: string;\n}\n\nexport const LoadAudioset = ({ idOrUrl }: LoadAudiosetProps) => {\n  const loadStatus = useBundleLoadStatus(idOrUrl);\n\n  switch (loadStatus.stage) {\n    case \"loading\":\n      return <Loading />;\n    case \"ready\":\n      const bundle = loadStatus.payload;\n      return isAudioset(bundle) ? (\n        <Player audioset={bundle} />\n      ) : (\n        <Browser project={bundle as Project} />\n      );\n    case \"error\":\n      return <NotFound />;\n    default:\n      return (\n        <pre style={{ color: \"white\" }}>\n          {JSON.stringify(loadStatus, null, 2)}\n        </pre>\n      );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}