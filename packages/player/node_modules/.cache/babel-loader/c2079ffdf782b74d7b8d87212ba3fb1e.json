{"ast":null,"code":"/**\n * Get URL of a resource, given it's name and source\n * @param {*} name\n * @param {*} source\n */\nexport function resourceUrl(name, source) {\n  if (!source || !source.length) return name;\n  const url = source[source.length - 1].replace(\"{{filename}}\", name);\n  return url;\n}\nexport default function getAlbumInfo(audioset, name) {\n  const clip = audioset.clips[name];\n  if (!clip) return;\n  const bpm = audioset.meta.bpm || 120;\n  return {\n    position: clip.position,\n    year: clip.year,\n    country: clip.country,\n    title: clip.title,\n    artist: clip.artist,\n    album: clip.album,\n    trackNumber: clip.trackNum,\n    loopend: 1,\n    trackVolume: clip.audio.trackVolume || 0.7,\n    duration: 60 * clip.audio.beats / bpm,\n    // clip duration in seconds\n    imageUrl: clip.coverUrl,\n    trackColor: clip.color\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/getAlbumInfo.ts"],"names":["resourceUrl","name","source","length","url","replace","getAlbumInfo","audioset","clip","clips","bpm","meta","position","year","country","title","artist","album","trackNumber","trackNum","loopend","trackVolume","audio","duration","beats","imageUrl","coverUrl","trackColor","color"],"mappings":"AAAA;;;;;AAKA,OAAO,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AACxC,MAAI,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,MAAvB,EAA+B,OAAOF,IAAP;AAC/B,QAAMG,GAAG,GAAGF,MAAM,CAACA,MAAM,CAACC,MAAP,GAAgB,CAAjB,CAAN,CAA0BE,OAA1B,CAAkC,cAAlC,EAAkDJ,IAAlD,CAAZ;AACA,SAAOG,GAAP;AACD;AAED,eAAe,SAASE,YAAT,CAAsBC,QAAtB,EAAgCN,IAAhC,EAAsC;AACnD,QAAMO,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAeR,IAAf,CAAb;AACA,MAAI,CAACO,IAAL,EAAW;AAEX,QAAME,GAAG,GAAGH,QAAQ,CAACI,IAAT,CAAcD,GAAd,IAAqB,GAAjC;AAEA,SAAO;AACLE,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QADV;AAELC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAFN;AAGLC,IAAAA,OAAO,EAAEN,IAAI,CAACM,OAHT;AAILC,IAAAA,KAAK,EAAEP,IAAI,CAACO,KAJP;AAKLC,IAAAA,MAAM,EAAER,IAAI,CAACQ,MALR;AAMLC,IAAAA,KAAK,EAAET,IAAI,CAACS,KANP;AAOLC,IAAAA,WAAW,EAAEV,IAAI,CAACW,QAPb;AAQLC,IAAAA,OAAO,EAAE,CARJ;AASLC,IAAAA,WAAW,EAAEb,IAAI,CAACc,KAAL,CAAWD,WAAX,IAA0B,GATlC;AAULE,IAAAA,QAAQ,EAAG,KAAKf,IAAI,CAACc,KAAL,CAAWE,KAAjB,GAA0Bd,GAV/B;AAUoC;AACzCe,IAAAA,QAAQ,EAAEjB,IAAI,CAACkB,QAXV;AAYLC,IAAAA,UAAU,EAAEnB,IAAI,CAACoB;AAZZ,GAAP;AAcD","sourcesContent":["/**\n * Get URL of a resource, given it's name and source\n * @param {*} name\n * @param {*} source\n */\nexport function resourceUrl(name, source) {\n  if (!source || !source.length) return name;\n  const url = source[source.length - 1].replace(\"{{filename}}\", name);\n  return url;\n}\n\nexport default function getAlbumInfo(audioset, name) {\n  const clip = audioset.clips[name];\n  if (!clip) return;\n\n  const bpm = audioset.meta.bpm || 120;\n\n  return {\n    position: clip.position,\n    year: clip.year,\n    country: clip.country,\n    title: clip.title,\n    artist: clip.artist,\n    album: clip.album,\n    trackNumber: clip.trackNum,\n    loopend: 1,\n    trackVolume: clip.audio.trackVolume || 0.7,\n    duration: (60 * clip.audio.beats) / bpm, // clip duration in seconds\n    imageUrl: clip.coverUrl,\n    trackColor: clip.color\n  };\n}\n"]},"metadata":{},"sourceType":"module"}