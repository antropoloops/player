{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import debug from\"debug\";export var context;var log=debug(\"atpls:context\");/**\n * @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio\n */export function getAudioContext(){return _getAudioContext.apply(this,arguments);}function _getAudioContext(){_getAudioContext=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:context=context||createAudioContext();if(!(context.state!==\"running\"&&context.resume)){_context.next=6;break;}log(\"waiting for context...\");return _context.abrupt(\"return\",context.resume().then(function(){return context;}));case 6:return _context.abrupt(\"return\",context);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getAudioContext.apply(this,arguments);}function createAudioContext(){log(\"create context\");// iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\nvar ctx=new(window.AudioContext||window.webkitAudioContext)();var buffer=ctx.createBuffer(1,1,ctx.sampleRate);var source=ctx.createBufferSource();source.buffer=buffer;source.connect(ctx.destination);source.start(0);return ctx;}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/Player/AudioContext.ts"],"names":["debug","context","log","getAudioContext","createAudioContext","state","resume","then","ctx","window","AudioContext","webkitAudioContext","buffer","createBuffer","sampleRate","source","createBufferSource","connect","destination","start"],"mappings":"qTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,IAAIC,CAAAA,OAAJ,CAEP,GAAMC,CAAAA,GAAG,CAAGF,KAAK,CAAC,eAAD,CAAjB,CAEA;;GAGA,eAAsBG,CAAAA,eAAtB,kD,qGAAO,mIACLF,OAAO,CAAGA,OAAO,EAAIG,kBAAkB,EAAvC,CADK,KAGDH,OAAO,CAACI,KAAR,GAAkB,SAAlB,EAA+BJ,OAAO,CAACK,MAHtC,0BAIHJ,GAAG,CAAC,wBAAD,CAAH,CAJG,gCAKID,OAAO,CAACK,MAAR,GAAiBC,IAAjB,CAAsB,iBAAMN,CAAAA,OAAN,EAAtB,CALJ,yCAOIA,OAPJ,wD,kDAWP,QAASG,CAAAA,kBAAT,EAA8B,CAC5BF,GAAG,CAAC,gBAAD,CAAH,CACA;AACA,GAAMM,CAAAA,GAAG,CAAG,IAAMC,MAAD,CAAgBC,YAAhB,EACdD,MAAD,CAAgBE,kBADN,GAAZ,CAEA,GAAMC,CAAAA,MAAM,CAAGJ,GAAG,CAACK,YAAJ,CAAiB,CAAjB,CAAoB,CAApB,CAAuBL,GAAG,CAACM,UAA3B,CAAf,CACA,GAAMC,CAAAA,MAAM,CAAGP,GAAG,CAACQ,kBAAJ,EAAf,CACAD,MAAM,CAACH,MAAP,CAAgBA,MAAhB,CACAG,MAAM,CAACE,OAAP,CAAeT,GAAG,CAACU,WAAnB,EACAH,MAAM,CAACI,KAAP,CAAa,CAAb,EACA,MAAOX,CAAAA,GAAP,CACD","sourcesContent":["import debug from \"debug\";\nexport let context: AudioContext | undefined;\n\nconst log = debug(\"atpls:context\");\n\n/**\n * @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio\n */\nexport async function getAudioContext(): Promise<AudioContext> {\n  context = context || createAudioContext();\n\n  if (context.state !== \"running\" && context.resume) {\n    log(\"waiting for context...\");\n    return context.resume().then(() => context as AudioContext);\n  } else {\n    return context;\n  }\n}\n\nfunction createAudioContext() {\n  log(\"create context\");\n  // iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\n  const ctx = new ((window as any).AudioContext ||\n    (window as any).webkitAudioContext)() as AudioContext;\n  const buffer = ctx.createBuffer(1, 1, ctx.sampleRate);\n  const source = ctx.createBufferSource();\n  source.buffer = buffer;\n  source.connect(ctx.destination);\n  source.start(0);\n  return ctx;\n}\n"]},"metadata":{},"sourceType":"module"}