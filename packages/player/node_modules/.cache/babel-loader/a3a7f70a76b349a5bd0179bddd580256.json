{"ast":null,"code":"export default function (topology, p) {\n  var array = [];\n  topology.arcs.forEach(function (arc) {\n    arc.forEach(function (point) {\n      if (isFinite(point[2])) {\n        // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n  return array.length && quantile(array.sort(descending), p);\n}\n\nfunction quantile(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/topojson/node_modules/topojson-simplify/src/quantile.js"],"names":["topology","p","array","arcs","forEach","arc","point","isFinite","push","length","quantile","sort","descending","n","h","i","Math","floor","a","b"],"mappings":"AAAA,eAAe,UAASA,QAAT,EAAmBC,CAAnB,EAAsB;AACnC,MAAIC,KAAK,GAAG,EAAZ;AAEAF,EAAAA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,UAASC,GAAT,EAAc;AAClCA,IAAAA,GAAG,CAACD,OAAJ,CAAY,UAASE,KAAT,EAAgB;AAC1B,UAAIC,QAAQ,CAACD,KAAK,CAAC,CAAD,CAAN,CAAZ,EAAwB;AAAE;AACxBJ,QAAAA,KAAK,CAACM,IAAN,CAAWF,KAAK,CAAC,CAAD,CAAhB;AACD;AACF,KAJD;AAKD,GAND;AAQA,SAAOJ,KAAK,CAACO,MAAN,IAAgBC,QAAQ,CAACR,KAAK,CAACS,IAAN,CAAWC,UAAX,CAAD,EAAyBX,CAAzB,CAA/B;AACD;;AAED,SAASS,QAAT,CAAkBR,KAAlB,EAAyBD,CAAzB,EAA4B;AAC1B,MAAI,EAAEY,CAAC,GAAGX,KAAK,CAACO,MAAZ,CAAJ,EAAyB;AACzB,MAAI,CAACR,CAAC,GAAG,CAACA,CAAN,KAAY,CAAZ,IAAiBY,CAAC,GAAG,CAAzB,EAA4B,OAAOX,KAAK,CAAC,CAAD,CAAZ;AAC5B,MAAID,CAAC,IAAI,CAAT,EAAY,OAAOC,KAAK,CAACW,CAAC,GAAG,CAAL,CAAZ;AACZ,MAAIA,CAAJ;AAAA,MACIC,CAAC,GAAG,CAACD,CAAC,GAAG,CAAL,IAAUZ,CADlB;AAAA,MAEIc,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,CAFR;AAAA,MAGII,CAAC,GAAGhB,KAAK,CAACa,CAAD,CAHb;AAAA,MAIII,CAAC,GAAGjB,KAAK,CAACa,CAAC,GAAG,CAAL,CAJb;AAKA,SAAOG,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,KAAWJ,CAAC,GAAGC,CAAf,CAAX;AACD;;AAED,SAASH,UAAT,CAAoBM,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,SAAOA,CAAC,GAAGD,CAAX;AACD","sourcesContent":["export default function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile(array.sort(descending), p);\n}\n\nfunction quantile(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n"]},"metadata":{},"sourceType":"module"}