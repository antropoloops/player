{"ast":null,"code":"import React from\"react\";import{Markdown}from\"../shared/Markdown\";var Preview=function Preview(_ref){var audioset=_ref.audioset,onStart=_ref.onStart,resourceStatus=_ref.resourceStatus;return React.createElement(\"div\",{className:\"Preview\"},React.createElement(\"img\",{alt:audioset.meta.title,src:audioset.meta.logo_url}),React.createElement(\"div\",{className:\"inside\"},React.createElement(\"div\",null,audioset.meta.description),React.createElement(Markdown,{markdown:audioset.meta.readme}),resourceStatus.status===\"loading\"&&React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Cargando...\"),resourceStatus.completed,\"/\",resourceStatus.total),resourceStatus.status===\"pending\"&&React.createElement(\"button\",{onClick:onStart},\"Entrar\")));};export default Preview;","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Preview.tsx"],"names":["React","Markdown","Preview","audioset","onStart","resourceStatus","meta","title","logo_url","description","readme","status","completed","total"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,oBAAzB,CAUA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAyD,IAAtDC,CAAAA,QAAsD,MAAtDA,QAAsD,CAA5CC,OAA4C,MAA5CA,OAA4C,CAAnCC,cAAmC,MAAnCA,cAAmC,CACvE,MACE,4BAAK,SAAS,CAAC,SAAf,EACE,2BAAK,GAAG,CAAEF,QAAQ,CAACG,IAAT,CAAcC,KAAxB,CAA+B,GAAG,CAAEJ,QAAQ,CAACG,IAAT,CAAcE,QAAlD,EADF,CAGE,2BAAK,SAAS,CAAC,QAAf,EACE,+BAAML,QAAQ,CAACG,IAAT,CAAcG,WAApB,CADF,CAEE,oBAAC,QAAD,EAAU,QAAQ,CAAEN,QAAQ,CAACG,IAAT,CAAcI,MAAlC,EAFF,CAGGL,cAAc,CAACM,MAAf,GAA0B,SAA1B,EACC,+BACE,4CADF,CAEGN,cAAc,CAACO,SAFlB,KAE8BP,cAAc,CAACQ,KAF7C,CAJJ,CASGR,cAAc,CAACM,MAAf,GAA0B,SAA1B,EAAuC,8BAAQ,OAAO,CAAEP,OAAjB,WAT1C,CAHF,CADF,CAiBD,CAlBD,CAoBA,cAAeF,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport { Markdown } from \"../shared/Markdown\";\nimport { ResourceLoadStatus } from \"../../Player/ResourceLoader\";\nimport { Audioset } from \"../../Audioset\";\n\ntype PreviewProps = {\n  audioset: Audioset;\n  resourceStatus: ResourceLoadStatus;\n  onStart: () => void;\n};\n\nconst Preview = ({ audioset, onStart, resourceStatus }: PreviewProps) => {\n  return (\n    <div className=\"Preview\">\n      <img alt={audioset.meta.title} src={audioset.meta.logo_url} />\n\n      <div className=\"inside\">\n        <div>{audioset.meta.description}</div>\n        <Markdown markdown={audioset.meta.readme} />\n        {resourceStatus.status === \"loading\" && (\n          <div>\n            <h2>Cargando...</h2>\n            {resourceStatus.completed}/{resourceStatus.total}\n          </div>\n        )}\n        {resourceStatus.status === \"pending\" && <button onClick={onStart}>Entrar</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}