{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { player } from \"../Player\";\nexport function useAudiosetLoadStatus(audiosetId) {\n  const _useState = useState({\n    status: \"loading\",\n    audiosetId\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadStatus = _useState2[0],\n        setLoadStatus = _useState2[1];\n\n  useEffect(() => {\n    player.loader.loadAudioset(audiosetId).then(loadStatus => setLoadStatus(loadStatus)).catch(error => setLoadStatus({\n      status: \"error\",\n      error\n    }));\n  }, [audiosetId]);\n  return loadStatus;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/useAudiosetLoad.ts"],"names":["useState","useEffect","player","useAudiosetLoadStatus","audiosetId","status","loadStatus","setLoadStatus","loader","loadAudioset","then","catch","error"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,WAAvB;AAGA,OAAO,SAASC,qBAAT,CAA+BC,UAA/B,EAAuE;AAAA,oBACxCJ,QAAQ,CAAqB;AAC/DK,IAAAA,MAAM,EAAE,SADuD;AAE/DD,IAAAA;AAF+D,GAArB,CADgC;AAAA;AAAA,QACrEE,UADqE;AAAA,QACzDC,aADyD;;AAK5EN,EAAAA,SAAS,CACP,MAAM;AACJC,IAAAA,MAAM,CAACM,MAAP,CACGC,YADH,CACgBL,UADhB,EAEGM,IAFH,CAESJ,UAAD,IAAgBC,aAAa,CAACD,UAAD,CAFrC,EAGGK,KAHH,CAGUC,KAAD,IAAWL,aAAa,CAAC;AAAEF,MAAAA,MAAM,EAAE,OAAV;AAAmBO,MAAAA;AAAnB,KAAD,CAHjC;AAID,GANM,EAOP,CAACR,UAAD,CAPO,CAAT;AAUA,SAAOE,UAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { player } from \"../Player\";\nimport { AudiosetLoadStatus } from \"../Audioset/AudiosetLoader\";\n\nexport function useAudiosetLoadStatus(audiosetId: string): AudiosetLoadStatus {\n  const [loadStatus, setLoadStatus] = useState<AudiosetLoadStatus>({\n    status: \"loading\",\n    audiosetId,\n  });\n  useEffect(\n    () => {\n      player.loader\n        .loadAudioset(audiosetId)\n        .then((loadStatus) => setLoadStatus(loadStatus))\n        .catch((error) => setLoadStatus({ status: \"error\", error }));\n    },\n    [audiosetId],\n  );\n\n  return loadStatus;\n}\n"]},"metadata":{},"sourceType":"module"}