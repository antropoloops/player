{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Player.tsx\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { getAudioContext, player } from \"../../player\";\nimport { Header } from \"../shared/Header\";\nimport { Scroll } from \"../shared/Scroll\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Controller } from \"./Controller\";\nimport { Footer } from \"./Footer\";\nimport Preview from \"./Preview\";\nimport { useResourceLoadingStatus } from \"./useResourceLoadingStatus\";\nimport { Visuals } from \"./Visuals\";\nconst SKIP_PREVIEW = process.env.NODE_ENV === \"development\" && true;\nexport const Player = ({\n  audioset\n}) => {\n  const resourceStatus = useResourceLoadingStatus();\n  const isReady = resourceStatus.status === \"ready\";\n\n  const _useDeviceType = useDeviceType(),\n        isDesktop = _useDeviceType.isDesktop;\n\n  const isVisual = isDesktop || isReady;\n  const handleStart = useCallback(() => getAudioContext().then(() => player.resources.load()).then(() => player.control.keyboard.setActive(true)), []);\n  useAutoStartAudio(isReady, audioset, handleStart);\n  return React.createElement(\"div\", {\n    className: \"App Player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Header, {\n    meta: audioset.meta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, SKIP_PREVIEW || isReady ? React.createElement(Controller, {\n    audioset: audioset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }) : React.createElement(Preview, {\n    audioset: audioset,\n    resourceStatus: resourceStatus,\n    onStart: handleStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), isVisual && React.createElement(\"div\", {\n    className: \"visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Visuals, {\n    audioset: audioset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nfunction useAutoStartAudio(isReady, audioset, startAudio) {\n  useEffect(() => {\n    if (!isReady && audioset.id) {\n      const onClick = () => {\n        startAudio();\n        removeListener();\n      };\n\n      const removeListener = () => {\n        window.removeEventListener(\"click\", onClick);\n      };\n\n      window.addEventListener(\"click\", onClick);\n      return removeListener;\n    }\n  }, [audioset.id, isReady]);\n  return startAudio;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Player.tsx"],"names":["React","useCallback","useEffect","getAudioContext","player","Header","Scroll","useDeviceType","Controller","Footer","Preview","useResourceLoadingStatus","Visuals","SKIP_PREVIEW","process","env","NODE_ENV","Player","audioset","resourceStatus","isReady","status","isDesktop","isVisual","handleStart","then","resources","load","control","keyboard","setActive","useAutoStartAudio","meta","startAudio","id","onClick","removeListener","window","removeEventListener","addEventListener"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { getAudioContext, player } from \"../../player\";\nimport { Header } from \"../shared/Header\";\nimport { Scroll } from \"../shared/Scroll\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Controller } from \"./Controller\";\nimport { Footer } from \"./Footer\";\nimport Preview from \"./Preview\";\nimport { useResourceLoadingStatus } from \"./useResourceLoadingStatus\";\nimport { Visuals } from \"./Visuals\";\n\nconst SKIP_PREVIEW = process.env.NODE_ENV === \"development\" && true;\n\nexport interface PlayerProps {\n  audioset: Audioset;\n}\n\nexport const Player = ({ audioset }: PlayerProps) => {\n  const resourceStatus = useResourceLoadingStatus();\n  const isReady = resourceStatus.status === \"ready\";\n  const { isDesktop } = useDeviceType();\n\n  const isVisual = isDesktop || isReady;\n\n  const handleStart = useCallback(\n    () =>\n      getAudioContext()\n        .then(() => player.resources.load())\n        .then(() => player.control.keyboard.setActive(true)),\n    [],\n  );\n\n  useAutoStartAudio(isReady, audioset, handleStart);\n\n  return (\n    <div className=\"App Player\">\n      <Header meta={audioset.meta} />\n      <Scroll>\n        <div className=\"content\">\n          {SKIP_PREVIEW || isReady ? (\n            <Controller audioset={audioset} />\n          ) : (\n            <Preview\n              audioset={audioset}\n              resourceStatus={resourceStatus}\n              onStart={handleStart}\n            />\n          )}\n        </div>\n      </Scroll>\n      <Footer />\n      {isVisual && (\n        <div className=\"visuals\">{<Visuals audioset={audioset} />}</div>\n      )}\n    </div>\n  );\n};\n\nfunction useAutoStartAudio(\n  isReady: boolean,\n  audioset: Audioset,\n  startAudio: () => void,\n) {\n  useEffect(() => {\n    if (!isReady && audioset.id) {\n      const onClick = () => {\n        startAudio();\n        removeListener();\n      };\n      const removeListener = () => {\n        window.removeEventListener(\"click\", onClick);\n      };\n      window.addEventListener(\"click\", onClick);\n      return removeListener;\n    }\n  }, [audioset.id, isReady]);\n\n  return startAudio;\n}\n"]},"metadata":{},"sourceType":"module"}