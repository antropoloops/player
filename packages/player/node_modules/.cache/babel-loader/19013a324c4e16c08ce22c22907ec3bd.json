{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Preview.tsx\";\nimport React from \"react\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Preview.css\";\n\nfunction completed(status) {\n  return status.completed / status.total;\n}\n\nconst Preview = ({\n  audioset,\n  onStart,\n  resourceStatus\n}) => {\n  return React.createElement(\"div\", {\n    className: \"Preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: audioset.meta.title,\n    src: audioset.meta.logo_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, audioset.meta.description), React.createElement(Markdown, {\n    markdown: audioset.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), resourceStatus.status === \"loading\" && React.createElement(ProgressBar, {\n    progress: completed(resourceStatus),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), resourceStatus.status === \"pending\" && React.createElement(StartButton, {\n    onStart: onStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nexport default Preview;\n\nconst StartButton = ({\n  onStart\n}) => React.createElement(\"div\", {\n  className: \"start\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  onClick: onStart,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: \"/play.png\",\n  alt: \"Empezar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n})));\n\nconst SIZE = 250;\nconst MARGIN = 10;\n\nconst ProgressBar = ({\n  progress\n}) => React.createElement(\"svg\", {\n  width: SIZE + 2 * MARGIN,\n  height: \"20\",\n  viewBox: \"0 0 \".concat(SIZE, \" 20\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, React.createElement(\"line\", {\n  x1: \"0\",\n  y1: \"10\",\n  x2: SIZE,\n  y2: \"10\",\n  fill: \"none\",\n  strokeWidth: \"12\",\n  stroke: \"#000000\",\n  strokeLinecap: \"round\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}), React.createElement(\"line\", {\n  x1: \"0\",\n  y1: \"10\",\n  x2: Math.floor(progress * SIZE),\n  y2: \"10\",\n  fill: \"none\",\n  strokeWidth: \"12\",\n  stroke: \"#00FF00\",\n  strokeDasharray: \"170\",\n  strokeDashoffset: \"dashOffsetLine\",\n  strokeLinecap: \"round\",\n  id: \"lineInner\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Preview.tsx"],"names":["React","Markdown","completed","status","total","Preview","audioset","onStart","resourceStatus","meta","title","logo_url","description","readme","StartButton","SIZE","MARGIN","ProgressBar","progress","Math","floor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport {\n  LoadingResources,\n  ResourceLoadStatus,\n} from \"../../player/ResourceLoader\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Preview.css\";\n\nfunction completed(status: LoadingResources) {\n  return status.completed / status.total;\n}\n\nconst Preview = ({ audioset, onStart, resourceStatus }: PreviewProps) => {\n  return (\n    <div className=\"Preview\">\n      <img alt={audioset.meta.title} src={audioset.meta.logo_url} />\n\n      <div className=\"inside\">\n        <div>{audioset.meta.description}</div>\n        <Markdown markdown={audioset.meta.readme} />\n        {resourceStatus.status === \"loading\" && (\n          <ProgressBar progress={completed(resourceStatus)} />\n        )}\n        {resourceStatus.status === \"pending\" && (\n          <StartButton onStart={onStart} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Preview;\ninterface StartButtonProps {\n  onStart: () => void;\n}\n\ninterface PreviewProps extends StartButtonProps {\n  audioset: Audioset;\n  resourceStatus: ResourceLoadStatus;\n}\n\nconst StartButton = ({ onStart }: StartButtonProps) => (\n  <div className=\"start\">\n    <button onClick={onStart}>\n      <img src=\"/play.png\" alt=\"Empezar\" />\n    </button>\n  </div>\n);\n\ninterface ProgressBarProps {\n  progress: number;\n}\n\nconst SIZE = 250;\nconst MARGIN = 10;\n\nconst ProgressBar = ({ progress }: ProgressBarProps) => (\n  <svg width={SIZE + 2 * MARGIN} height=\"20\" viewBox={`0 0 ${SIZE} 20`}>\n    <line\n      x1=\"0\"\n      y1=\"10\"\n      x2={SIZE}\n      y2=\"10\"\n      fill=\"none\"\n      strokeWidth=\"12\"\n      stroke=\"#000000\"\n      strokeLinecap=\"round\"\n    />\n    <line\n      x1=\"0\"\n      y1=\"10\"\n      x2={Math.floor(progress * SIZE)}\n      y2=\"10\"\n      fill=\"none\"\n      strokeWidth=\"12\"\n      stroke=\"#00FF00\"\n      strokeDasharray=\"170\"\n      strokeDashoffset=\"dashOffsetLine\"\n      strokeLinecap=\"round\"\n      id=\"lineInner\"\n    />\n  </svg>\n);\n"]},"metadata":{},"sourceType":"module"}