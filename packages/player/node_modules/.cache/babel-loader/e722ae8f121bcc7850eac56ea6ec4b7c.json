{"ast":null,"code":"import _inherits from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _objectSpread from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/**\n * It handles the state of the control\n */export var ControlStateManager=/*#__PURE__*/function(){function ControlStateManager(){_classCallCheck(this,ControlStateManager);this.clipStateByClipId={};this.clipIdsOfTrack={};this.trackIdOfClip={};this.trackStateByTrackId={};}_createClass(ControlStateManager,[{key:\"addClip\",value:function addClip(clip){this.clipStateByClipId[clip.id]={status:\"stopped\"};this.trackIdOfClip[clip.id]=clip.trackId;}},{key:\"addTrack\",value:function addTrack(track){var volume=track.volume||1;this.trackStateByTrackId[track.id]={status:\"stopped\",volume:volume};this.clipIdsOfTrack[track.id]=track.clipIds;}},{key:\"getAllClipIds\",value:function getAllClipIds(){return Object.keys(this.clipStateByClipId);}},{key:\"getAllTrackIds\",value:function getAllTrackIds(){return Object.keys(this.trackStateByTrackId);}},{key:\"getClipState\",value:function getClipState(clipId){return this.clipStateByClipId[clipId];}},{key:\"setClipState\",value:function setClipState(clipId,newStsate){this.clipStateByClipId[clipId]=newStsate;}},{key:\"getTrackState\",value:function getTrackState(trackId){return this.trackStateByTrackId[trackId];}},{key:\"setTrackState\",value:function setTrackState(trackId,state){this.trackStateByTrackId[trackId]=state;}},{key:\"getTrackIdOfClip\",value:function getTrackIdOfClip(clipId){return this.trackIdOfClip[clipId];}},{key:\"getClipIdsOfTrack\",value:function getClipIdsOfTrack(trackId){return this.clipIdsOfTrack[trackId];}},{key:\"getState\",value:function getState(){return{clips:_objectSpread({},this.clipStateByClipId),tracks:_objectSpread({},this.trackStateByTrackId)};}}]);return ControlStateManager;}();export var PlayerControl=/*#__PURE__*/function(_ControlStateManager){_inherits(PlayerControl,_ControlStateManager);var _super=_createSuper(PlayerControl);function PlayerControl(){_classCallCheck(this,PlayerControl);return _super.apply(this,arguments);}return PlayerControl;}(ControlStateManager);","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/player/Control/ControlStateManager.ts"],"names":["ControlStateManager","clipStateByClipId","clipIdsOfTrack","trackIdOfClip","trackStateByTrackId","clip","id","status","trackId","track","volume","clipIds","Object","keys","clipId","newStsate","state","clips","tracks","PlayerControl"],"mappings":"2vBASA;;GAGA,UAAaA,CAAAA,mBAAb,uGACUC,iBADV,CACwD,EADxD,MAEUC,cAFV,CAEqD,EAFrD,MAGUC,aAHV,CAGkD,EAHlD,MAIUC,mBAJV,CAI4D,EAJ5D,0EAMiBC,IANjB,CAM6B,CACzB,KAAKJ,iBAAL,CAAuBI,IAAI,CAACC,EAA5B,EAAkC,CAAEC,MAAM,CAAE,SAAV,CAAlC,CACA,KAAKJ,aAAL,CAAmBE,IAAI,CAACC,EAAxB,EAA8BD,IAAI,CAACG,OAAnC,CACD,CATH,0CAUkBC,KAVlB,CAUgC,CAC5B,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACC,MAAN,EAAgB,CAA/B,CACA,KAAKN,mBAAL,CAAyBK,KAAK,CAACH,EAA/B,EAAqC,CAAEC,MAAM,CAAE,SAAV,CAAqBG,MAAM,CAANA,MAArB,CAArC,CACA,KAAKR,cAAL,CAAoBO,KAAK,CAACH,EAA1B,EAAgCG,KAAK,CAACE,OAAtC,CACD,CAdH,qDAeyB,CACrB,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAY,KAAKZ,iBAAjB,CAAP,CACD,CAjBH,uDAkB0B,CACtB,MAAOW,CAAAA,MAAM,CAACC,IAAP,CAAY,KAAKT,mBAAjB,CAAP,CACD,CApBH,kDAqBsBU,MArBtB,CAqBsC,CAClC,MAAO,MAAKb,iBAAL,CAAuBa,MAAvB,CAAP,CACD,CAvBH,kDAwBsBA,MAxBtB,CAwBsCC,SAxBtC,CAwBmE,CAC/D,KAAKd,iBAAL,CAAuBa,MAAvB,EAAiCC,SAAjC,CACD,CA1BH,oDA2BuBP,OA3BvB,CA2BwC,CACpC,MAAO,MAAKJ,mBAAL,CAAyBI,OAAzB,CAAP,CACD,CA7BH,oDA8BuBA,OA9BvB,CA8BwCQ,KA9BxC,CA8BkE,CAC9D,KAAKZ,mBAAL,CAAyBI,OAAzB,EAAoCQ,KAApC,CACD,CAhCH,0DAiC0BF,MAjC1B,CAiC0C,CACtC,MAAO,MAAKX,aAAL,CAAmBW,MAAnB,CAAP,CACD,CAnCH,4DAoC2BN,OApC3B,CAoC4C,CACxC,MAAO,MAAKN,cAAL,CAAoBM,OAApB,CAAP,CACD,CAtCH,2CAuCkC,CAC9B,MAAO,CACLS,KAAK,kBAAO,KAAKhB,iBAAZ,CADA,CAELiB,MAAM,kBAAO,KAAKd,mBAAZ,CAFD,CAAP,CAID,CA5CH,mCA+CA,UAAae,CAAAA,aAAb,2PAAmCnB,mBAAnC","sourcesContent":["import { Clip, Track } from \"../../audioset\";\nimport {\n  ClipPlayingState,\n  ClipPlayingStateByClipId,\n  ControlState,\n  TrackPlayingState,\n  TrackPlayingStateByTrackId,\n} from \"./ControlState\";\n\n/**\n * It handles the state of the control\n */\nexport class ControlStateManager {\n  private clipStateByClipId: ClipPlayingStateByClipId = {};\n  private clipIdsOfTrack: Record<string, string[]> = {};\n  private trackIdOfClip: Record<string, string> = {};\n  private trackStateByTrackId: TrackPlayingStateByTrackId = {};\n\n  public addClip(clip: Clip) {\n    this.clipStateByClipId[clip.id] = { status: \"stopped\" };\n    this.trackIdOfClip[clip.id] = clip.trackId;\n  }\n  public addTrack(track: Track) {\n    const volume = track.volume || 1;\n    this.trackStateByTrackId[track.id] = { status: \"stopped\", volume };\n    this.clipIdsOfTrack[track.id] = track.clipIds;\n  }\n  public getAllClipIds() {\n    return Object.keys(this.clipStateByClipId);\n  }\n  public getAllTrackIds() {\n    return Object.keys(this.trackStateByTrackId);\n  }\n  public getClipState(clipId: string) {\n    return this.clipStateByClipId[clipId];\n  }\n  public setClipState(clipId: string, newStsate: ClipPlayingState) {\n    this.clipStateByClipId[clipId] = newStsate;\n  }\n  public getTrackState(trackId: string) {\n    return this.trackStateByTrackId[trackId];\n  }\n  public setTrackState(trackId: string, state: TrackPlayingState) {\n    this.trackStateByTrackId[trackId] = state;\n  }\n  public getTrackIdOfClip(clipId: string) {\n    return this.trackIdOfClip[clipId];\n  }\n  public getClipIdsOfTrack(trackId: string) {\n    return this.clipIdsOfTrack[trackId];\n  }\n  public getState(): ControlState {\n    return {\n      clips: { ...this.clipStateByClipId },\n      tracks: { ...this.trackStateByTrackId },\n    };\n  }\n}\n\nexport class PlayerControl extends ControlStateManager {}\n"]},"metadata":{},"sourceType":"module"}