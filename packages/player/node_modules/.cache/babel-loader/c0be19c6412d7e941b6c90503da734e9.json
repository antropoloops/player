{"ast":null,"code":"import { debounce } from \"lodash\";\nimport Visuals from \"./visuals\";\nimport Display from \"./display\";\n\nclass VisualControl {\n  constructor(audioset, el) {\n    this.display = void 0;\n    this.visuals = void 0;\n    this.handleResize = void 0;\n    this.display = new Display(el);\n    this.visuals = new Visuals(audioset, this.display);\n    setupVisuals(audioset, this.visuals);\n    const handleResize = debounce(() => {\n      this.visuals.resizeSvg();\n    });\n    window.addEventListener(el, handleResize);\n\n    this.detach = () => window.removeEventListener(el, handleResize);\n  }\n\n}\n\nexport function createVisuals() {}\n\nfunction setupVisuals(audioset, visuals) {\n  if (audioset.visuals.mode === \"map\") {\n    fetch(audioset.visuals.geomap.url).then(response => response.json()).then(data => visuals.setGeodata(data));\n  } else {\n    visuals.setup();\n  }\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/index.ts"],"names":["debounce","Visuals","Display","VisualControl","constructor","audioset","el","display","visuals","handleResize","setupVisuals","resizeSvg","window","addEventListener","detach","removeEventListener","createVisuals","mode","fetch","geomap","url","then","response","json","data","setGeodata","setup"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,aAAN,CAAoB;AAKlBC,EAAAA,WAAW,CAACC,QAAD,EAAqBC,EAArB,EAA8B;AAAA,SAJzCC,OAIyC;AAAA,SAHzCC,OAGyC;AAAA,SAFzCC,YAEyC;AACvC,SAAKF,OAAL,GAAe,IAAIL,OAAJ,CAAYI,EAAZ,CAAf;AACA,SAAKE,OAAL,GAAe,IAAIP,OAAJ,CAAYI,QAAZ,EAAsB,KAAKE,OAA3B,CAAf;AACAG,IAAAA,YAAY,CAACL,QAAD,EAAW,KAAKG,OAAhB,CAAZ;AAEA,UAAMC,YAAY,GAAGT,QAAQ,CAAC,MAAM;AAClC,WAAKQ,OAAL,CAAaG,SAAb;AACD,KAF4B,CAA7B;AAIAC,IAAAA,MAAM,CAACC,gBAAP,CAAwBP,EAAxB,EAA4BG,YAA5B;;AACA,SAAKK,MAAL,GAAc,MAAMF,MAAM,CAACG,mBAAP,CAA2BT,EAA3B,EAA+BG,YAA/B,CAApB;AACD;;AAhBiB;;AAmBpB,OAAO,SAASO,aAAT,GAAyB,CAAE;;AAClC,SAASN,YAAT,CAAsBL,QAAtB,EAA0CG,OAA1C,EAA4D;AAC1D,MAAIH,QAAQ,CAACG,OAAT,CAAiBS,IAAjB,KAA0B,KAA9B,EAAqC;AACnCC,IAAAA,KAAK,CAACb,QAAQ,CAACG,OAAT,CAAiBW,MAAjB,CAAwBC,GAAzB,CAAL,CAAmCC,IAAnC,CAAyCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAtD,EAAuEF,IAAvE,CAA6EG,IAAD,IAAUhB,OAAO,CAACiB,UAAR,CAAmBD,IAAnB,CAAtF;AACD,GAFD,MAEO;AACLhB,IAAAA,OAAO,CAACkB,KAAR;AACD;AACF","sourcesContent":["import { debounce } from \"lodash\";\nimport Visuals from \"./visuals\";\nimport Display from \"./display\";\nimport { Audioset } from \"../Audioset\";\n\nclass VisualControl {\n  display: Display;\n  visuals: Visuals;\n  handleResize: any;\n\n  constructor(audioset: Audioset, el: any) {\n    this.display = new Display(el);\n    this.visuals = new Visuals(audioset, this.display);\n    setupVisuals(audioset, this.visuals);\n\n    const handleResize = debounce(() => {\n      this.visuals.resizeSvg();\n    });\n\n    window.addEventListener(el, handleResize);\n    this.detach = () => window.removeEventListener(el, handleResize);\n  }\n}\n\nexport function createVisuals() {}\nfunction setupVisuals(audioset: Audioset, visuals: Visuals) {\n  if (audioset.visuals.mode === \"map\") {\n    fetch(audioset.visuals.geomap.url).then((response) => response.json()).then((data) => visuals.setGeodata(data));\n  } else {\n    visuals.setup();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}