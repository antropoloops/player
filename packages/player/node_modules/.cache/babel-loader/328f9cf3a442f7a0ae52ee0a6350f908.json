{"ast":null,"code":"import { createAudiosetPlayPack, isAudiosetData } from \"../Audioset\";\n\nconst getUrl = id => \"https://antropoloops-production.s3.eu-west-3.amazonaws.com/files/\".concat(id, \".audioset.json\");\n\nexport function fetchAudioset(id) {\n  return fetch(getUrl(id)).then(r => r.json()).then(audioset => {\n    if (isAudiosetData()) {\n      if (audioset && audioset.type === \"audioset\") {\n        createAudiosetPlayPack(audioset);\n        console.log(\"audioset\", audioset);\n      }\n\n      return audioset;\n    } else {\n      debug(\"Invalid format %o\", data);\n      throw Error(\"Invalida Audioset format\");\n    }\n  });\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/Player/fetchAudioset.ts"],"names":["createAudiosetPlayPack","isAudiosetData","getUrl","id","fetchAudioset","fetch","then","r","json","audioset","type","console","log","debug","data","Error"],"mappings":"AAAA,SAAiCA,sBAAjC,EAAyDC,cAAzD,QAA+E,aAA/E;;AAEA,MAAMC,MAAM,GAAIC,EAAD,+EAAoFA,EAApF,mBAAf;;AAEA,OAAO,SAASC,aAAT,CAAuBD,EAAvB,EAA0D;AAC/D,SAAOE,KAAK,CAACH,MAAM,CAACC,EAAD,CAAP,CAAL,CAAkBG,IAAlB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAA9B,EAAwCF,IAAxC,CAA8CG,QAAD,IAA4B;AAC9E,QAAIR,cAAc,EAAlB,EAAsB;AACpB,UAAIQ,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,UAAlC,EAA8C;AAC5CV,QAAAA,sBAAsB,CAACS,QAAD,CAAtB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACD;;AACD,aAAOA,QAAP;AACD,KAND,MAMO;AACLI,MAAAA,KAAK,CAAC,mBAAD,EAAsBC,IAAtB,CAAL;AACA,YAAMC,KAAK,CAAC,0BAAD,CAAX;AACD;AACF,GAXM,CAAP;AAYD","sourcesContent":["import { Audioset, AudiosetData, createAudiosetPlayPack, isAudiosetData } from \"../Audioset\";\n\nconst getUrl = (id: string) => `https://antropoloops-production.s3.eu-west-3.amazonaws.com/files/${id}.audioset.json`;\n\nexport function fetchAudioset(id: string): Promise<AudiosetData> {\n  return fetch(getUrl(id)).then((r) => r.json()).then((audioset: AudiosetData) => {\n    if (isAudiosetData()) {\n      if (audioset && audioset.type === \"audioset\") {\n        createAudiosetPlayPack(audioset as Audioset);\n        console.log(\"audioset\", audioset);\n      }\n      return audioset;\n    } else {\n      debug(\"Invalid format %o\", data);\n      throw Error(\"Invalida Audioset format\");\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}