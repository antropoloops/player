{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Player/Visuals.tsx\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { player } from \"../../Player\";\nexport const Visuals = ({\n  audioset\n}) => {\n  const ref = useRef(null);\n  const visuals = useVisuals(audioset, ref);\n  return React.createElement(\"div\", {\n    id: \"visuals\",\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n};\n\nfunction handleCommands(visuals) {\n  return function (command) {};\n}\n\nfunction useVisuals(audioset, ref) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        visuals = _useState2[0],\n        setVisuals = _useState2[1];\n\n  useEffect(() => {\n    import(\"../../visuals/index\").then(({\n      createVisuals\n    }) => {\n      if (ref.current && audioset) {\n        const visuals = createVisuals(audioset, ref.current);\n        player.onCommand(handleCommands(visuals));\n      }\n    });\n  }, [audioset, ref.current]);\n  return {\n    visuals\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Visuals.tsx"],"names":["React","useRef","useState","useEffect","player","Visuals","audioset","ref","visuals","useVisuals","handleCommands","command","setVisuals","then","createVisuals","current","onCommand"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAA8D,OAA9D;AAEA,SAASC,MAAT,QAAuB,cAAvB;AAGA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC;AACrD,QAAMC,GAAG,GAAGN,MAAM,CAAiB,IAAjB,CAAlB;AACA,QAAMO,OAAO,GAAGC,UAAU,CAACH,QAAD,EAAWC,GAAX,CAA1B;AACA,SAAO;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,GAAG,EAAEA,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJM;;AASP,SAASG,cAAT,CAAwBF,OAAxB,EAA0C;AACxC,SAAO,UAASG,OAAT,EAAkB,CAAE,CAA3B;AACD;;AAMD,SAASF,UAAT,CAAoBH,QAApB,EAAwCC,GAAxC,EAAwE;AAAA,oBACxCL,QAAQ,EADgC;AAAA;AAAA,QAC/DM,OAD+D;AAAA,QACtDI,UADsD;;AAGtET,EAAAA,SAAS,CACP,MAAM;AACJ,WAAO,qBAAP,EAA8BU,IAA9B,CAAmC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAuB;AACxD,UAAIP,GAAG,CAACQ,OAAJ,IAAeT,QAAnB,EAA6B;AAC3B,cAAME,OAAO,GAAGM,aAAa,CAACR,QAAD,EAAWC,GAAG,CAACQ,OAAf,CAA7B;AACAX,QAAAA,MAAM,CAACY,SAAP,CAAiBN,cAAc,CAACF,OAAD,CAA/B;AACD;AACF,KALD;AAMD,GARM,EASP,CAACF,QAAD,EAAWC,GAAG,CAACQ,OAAf,CATO,CAAT;AAYA,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACD","sourcesContent":["import React, { useRef, useState, useEffect, RefObject } from \"react\";\nimport { Audioset } from \"../../Audioset\";\nimport { player } from \"../../Player\";\nimport { ControlCommand } from \"../../Player/AudiosetControl\";\n\nexport const Visuals = ({ audioset }: VisualsProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const visuals = useVisuals(audioset, ref);\n  return <div id=\"visuals\" ref={ref} />;\n};\ninterface VisualsProps {\n  audioset: Audioset;\n}\n\nfunction handleCommands(visuals: Visuals) {\n  return function(command) {};\n}\n\ninterface VisualsModule {\n  createVisuals(audioset: Audioset, el: HTMLDivElement): {};\n}\n\nfunction useVisuals(audioset: Audioset, ref: RefObject<HTMLDivElement>) {\n  const [visuals, setVisuals] = useState();\n\n  useEffect(\n    () => {\n      import(\"../../visuals/index\").then(({ createVisuals }) => {\n        if (ref.current && audioset) {\n          const visuals = createVisuals(audioset, ref.current);\n          player.onCommand(handleCommands(visuals));\n        }\n      });\n    },\n    [audioset, ref.current],\n  );\n\n  return { visuals };\n}\n"]},"metadata":{},"sourceType":"module"}