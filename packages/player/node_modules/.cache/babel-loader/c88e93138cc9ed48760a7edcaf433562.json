{"ast":null,"code":"import _classCallCheck from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DEFAULT_OPTIONS = {\n  channelCount: 6,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'discrete',\n  numberOfOutputs: 6\n};\n\nvar sanitizedOptions = function sanitizedOptions(options) {\n  return _objectSpread({}, options, {\n    channelCount: options.numberOfOutputs\n  });\n};\n\nexport var createChannelSplitterNodeConstructor = function createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) {\n  return (\n    /*#__PURE__*/\n    function (_audioNodeConstructor) {\n      _inherits(ChannelSplitterNode, _audioNodeConstructor);\n\n      function ChannelSplitterNode(context) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;\n\n        _classCallCheck(this, ChannelSplitterNode);\n\n        var nativeContext = getNativeContext(context);\n        var mergedOptions = sanitizedOptions(_objectSpread({}, DEFAULT_OPTIONS, {}, options));\n        var nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n        var channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;\n        return _possibleConstructorReturn(this, _getPrototypeOf(ChannelSplitterNode).call(this, context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer));\n      }\n\n      return ChannelSplitterNode;\n    }(audioNodeConstructor)\n  );\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-constructor.js"],"names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","numberOfOutputs","sanitizedOptions","options","createChannelSplitterNodeConstructor","audioNodeConstructor","createChannelSplitterNodeRenderer","createNativeChannelSplitterNode","getNativeContext","isNativeOfflineAudioContext","context","nativeContext","mergedOptions","nativeChannelSplitterNode","channelSplitterNodeRenderer"],"mappings":";;;;;;;;;;AAAA,IAAMA,eAAe,GAAG;AACpBC,EAAAA,YAAY,EAAE,CADM;AAEpBC,EAAAA,gBAAgB,EAAE,UAFE;AAGpBC,EAAAA,qBAAqB,EAAE,UAHH;AAIpBC,EAAAA,eAAe,EAAE;AAJG,CAAxB;;AAMA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;AAClC,2BAAYA,OAAZ;AAAqBL,IAAAA,YAAY,EAAEK,OAAO,CAACF;AAA3C;AACH,CAFD;;AAGA,OAAO,IAAMG,oCAAoC,GAAG,SAAvCA,oCAAuC,CAACC,oBAAD,EAAuBC,iCAAvB,EAA0DC,+BAA1D,EAA2FC,gBAA3F,EAA6GC,2BAA7G,EAA6I;AAC7L;AAAA;AAAA;AAAA;;AACI,mCAAYC,OAAZ,EAAgD;AAAA,YAA3BP,OAA2B,uEAAjBN,eAAiB;;AAAA;;AAC5C,YAAMc,aAAa,GAAGH,gBAAgB,CAACE,OAAD,CAAtC;AACA,YAAME,aAAa,GAAGV,gBAAgB,mBAAML,eAAN,MAA0BM,OAA1B,EAAtC;AACA,YAAMU,yBAAyB,GAAGN,+BAA+B,CAACI,aAAD,EAAgBC,aAAhB,CAAjE;AACA,YAAME,2BAA2B,GAAKL,2BAA2B,CAACE,aAAD,CAA5B,GAC/BL,iCAAiC,EADF,GAE/B,IAFN;AAJ4C,gGAOtCI,OAPsC,EAO7B,KAP6B,EAOtBG,yBAPsB,EAOKC,2BAPL;AAQ/C;;AATL;AAAA,MAAyCT,oBAAzC;AAAA;AAWH,CAZM","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nconst sanitizedOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createChannelSplitterNodeRenderer()\n                : null);\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/channel-splitter-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}