{"ast":null,"code":"import { createAudioset } from \"../../audioset\";\nconst PRODUCTION = `https://antropoloops-production.s3.eu-west-3.amazonaws.com/files`;\nconst STAGING = `https://play-admin.antropoloops.com/api/1.0/index`;\n\nconst getProductionUrl = idOrUrl => idOrUrl.endsWith(\".json\") ? idOrUrl : `${PRODUCTION}/${idOrUrl}.audioset.json`; // const dbServerUrl = (idOrUrl: string) =>\n//   idOrUrl === \"index\"\n//     ? `http://localhost:1234/index`\n//     : `http://localhost:1234/set/${idOrUrl}`;\n\n\nconst getStaginUrl = idOrUrl => idOrUrl.endsWith(\".json\") ? idOrUrl : idOrUrl === \"index\" ? STAGING : `${STAGING}/${idOrUrl}`; // const getUrl = getProductionUrl; // dbServerUrl;\n\n\nconst getUrl = process.env.NODE_ENV === \"production\" ? getProductionUrl : getStaginUrl;\nexport function fetchAudioset(idOrUrl) {\n  return fetch(getUrl(idOrUrl)).then(r => r.json()).then(createAudioset);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/lib/fetchAudioset.ts"],"names":["createAudioset","PRODUCTION","STAGING","getProductionUrl","idOrUrl","endsWith","getStaginUrl","getUrl","process","env","NODE_ENV","fetchAudioset","fetch","then","r","json"],"mappings":"AAAA,SAAiBA,cAAjB,QAAuC,gBAAvC;AAEA,MAAMC,UAAU,GAAI,kEAApB;AACA,MAAMC,OAAO,GAAI,mDAAjB;;AAEA,MAAMC,gBAAgB,GAAIC,OAAD,IACvBA,OAAO,CAACC,QAAR,CAAiB,OAAjB,IACID,OADJ,GAEK,GAAEH,UAAW,IAAGG,OAAQ,gBAH/B,C,CAKA;AACA;AACA;AACA;;;AAEA,MAAME,YAAY,GAAIF,OAAD,IACnBA,OAAO,CAACC,QAAR,CAAiB,OAAjB,IACID,OADJ,GAEIA,OAAO,KAAK,OAAZ,GACAF,OADA,GAEC,GAAEA,OAAQ,IAAGE,OAAQ,EAL5B,C,CAOA;;;AACA,MAAMG,MAAM,GACVC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCP,gBAAxC,GAA2DG,YAD7D;AAGA,OAAO,SAASK,aAAT,CAAuBP,OAAvB,EAAyD;AAC9D,SAAOQ,KAAK,CAACL,MAAM,CAACH,OAAD,CAAP,CAAL,CACJS,IADI,CACCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADN,EAEJF,IAFI,CAECb,cAFD,CAAP;AAGD","sourcesContent":["import { Bundle, createAudioset } from \"../../audioset\";\n\nconst PRODUCTION = `https://antropoloops-production.s3.eu-west-3.amazonaws.com/files`;\nconst STAGING = `https://play-admin.antropoloops.com/api/1.0/index`;\n\nconst getProductionUrl = (idOrUrl: string) =>\n  idOrUrl.endsWith(\".json\")\n    ? idOrUrl\n    : `${PRODUCTION}/${idOrUrl}.audioset.json`;\n\n// const dbServerUrl = (idOrUrl: string) =>\n//   idOrUrl === \"index\"\n//     ? `http://localhost:1234/index`\n//     : `http://localhost:1234/set/${idOrUrl}`;\n\nconst getStaginUrl = (idOrUrl: string) =>\n  idOrUrl.endsWith(\".json\")\n    ? idOrUrl\n    : idOrUrl === \"index\"\n    ? STAGING\n    : `${STAGING}/${idOrUrl}`;\n\n// const getUrl = getProductionUrl; // dbServerUrl;\nconst getUrl =\n  process.env.NODE_ENV === \"production\" ? getProductionUrl : getStaginUrl;\n\nexport function fetchAudioset(idOrUrl: string): Promise<Bundle> {\n  return fetch(getUrl(idOrUrl))\n    .then(r => r.json())\n    .then(createAudioset);\n}\n"]},"metadata":{},"sourceType":"module"}