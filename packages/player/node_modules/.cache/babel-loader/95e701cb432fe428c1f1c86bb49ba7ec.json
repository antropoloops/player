{"ast":null,"code":"import { isNativeAudioNode } from '../guards/native-audio-node';\n\nvar getOutputAudioNodeAtIndex = function getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output) {\n  var outputAudioNode = outputAudioNodes[output];\n\n  if (outputAudioNode === undefined) {\n    throw createIndexSizeError();\n  }\n\n  return outputAudioNode;\n};\n\nexport var createDisconnectMultipleOutputs = function createDisconnectMultipleOutputs(createIndexSizeError) {\n  return function (outputAudioNodes) {\n    var destinationOrOutput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var input = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    if (destinationOrOutput === undefined) {\n      return outputAudioNodes.forEach(function (outputAudioNode) {\n        return outputAudioNode.disconnect();\n      });\n    }\n\n    if (typeof destinationOrOutput === 'number') {\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n    }\n\n    if (isNativeAudioNode(destinationOrOutput)) {\n      if (output === undefined) {\n        return outputAudioNodes.forEach(function (outputAudioNode) {\n          return outputAudioNode.disconnect(destinationOrOutput);\n        });\n      }\n\n      if (input === undefined) {\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n      }\n\n      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n    }\n\n    if (output === undefined) {\n      return outputAudioNodes.forEach(function (outputAudioNode) {\n        return outputAudioNode.disconnect(destinationOrOutput);\n      });\n    }\n\n    return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/disconnect-multiple-outputs.js"],"names":["isNativeAudioNode","getOutputAudioNodeAtIndex","createIndexSizeError","outputAudioNodes","output","outputAudioNode","undefined","createDisconnectMultipleOutputs","destinationOrOutput","input","forEach","disconnect"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,6BAAlC;;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCC,MAAzC,EAAoD;AAClF,MAAMC,eAAe,GAAGF,gBAAgB,CAACC,MAAD,CAAxC;;AACA,MAAIC,eAAe,KAAKC,SAAxB,EAAmC;AAC/B,UAAMJ,oBAAoB,EAA1B;AACH;;AACD,SAAOG,eAAP;AACH,CAND;;AAOA,OAAO,IAAME,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACL,oBAAD,EAA0B;AACrE,SAAO,UAACC,gBAAD,EAAsF;AAAA,QAAnEK,mBAAmE,uEAA7CF,SAA6C;AAAA,QAAlCF,MAAkC,uEAAzBE,SAAyB;AAAA,QAAdG,KAAc,uEAAN,CAAM;;AACzF,QAAID,mBAAmB,KAAKF,SAA5B,EAAuC;AACnC,aAAOH,gBAAgB,CAClBO,OADE,CACM,UAACL,eAAD;AAAA,eAAqBA,eAAe,CAACM,UAAhB,EAArB;AAAA,OADN,CAAP;AAEH;;AACD,QAAI,OAAOH,mBAAP,KAA+B,QAAnC,EAA6C;AACzC,aAAOP,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCK,mBAAzC,CAAzB,CACFG,UADE,EAAP;AAEH;;AACD,QAAIX,iBAAiB,CAACQ,mBAAD,CAArB,EAA4C;AACxC,UAAIJ,MAAM,KAAKE,SAAf,EAA0B;AACtB,eAAOH,gBAAgB,CAClBO,OADE,CACM,UAACL,eAAD;AAAA,iBAAqBA,eAAe,CAACM,UAAhB,CAA2BH,mBAA3B,CAArB;AAAA,SADN,CAAP;AAEH;;AACD,UAAIC,KAAK,KAAKH,SAAd,EAAyB;AACrB,eAAOL,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCC,MAAzC,CAAzB,CACFO,UADE,CACSH,mBADT,EAC8B,CAD9B,CAAP;AAEH;;AACD,aAAOP,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCC,MAAzC,CAAzB,CACFO,UADE,CACSH,mBADT,EAC8B,CAD9B,EACiCC,KADjC,CAAP;AAEH;;AACD,QAAIL,MAAM,KAAKE,SAAf,EAA0B;AACtB,aAAOH,gBAAgB,CAClBO,OADE,CACM,UAACL,eAAD;AAAA,eAAqBA,eAAe,CAACM,UAAhB,CAA2BH,mBAA3B,CAArB;AAAA,OADN,CAAP;AAEH;;AACD,WAAOP,yBAAyB,CAACC,oBAAD,EAAuBC,gBAAvB,EAAyCC,MAAzC,CAAzB,CACFO,UADE,CACSH,mBADT,EAC8B,CAD9B,CAAP;AAEH,GA3BD;AA4BH,CA7BM","sourcesContent":["import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput)\n                .disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes\n                    .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                    .disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                .disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n            .disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/disconnect-multiple-outputs.js.map"]},"metadata":{},"sourceType":"module"}