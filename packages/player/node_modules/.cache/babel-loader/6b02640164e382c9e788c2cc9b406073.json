{"ast":null,"code":"import { createInvalidStateError } from '../factories/invalid-state-error';\nexport var wrapChannelSplitterNode = function wrapChannelSplitterNode(channelSplitterNode) {\n  var channelCount = channelSplitterNode.numberOfOutputs; // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n\n  Object.defineProperty(channelSplitterNode, 'channelCount', {\n    get: function get() {\n      return channelCount;\n    },\n    set: function set(value) {\n      if (value !== channelCount) {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  /*\n   * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n   * explicit.\n   */\n\n  Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n    get: function get() {\n      return 'explicit';\n    },\n    set: function set(value) {\n      if (value !== 'explicit') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  /*\n   * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n   * discrete.\n   */\n\n  Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n    get: function get() {\n      return 'discrete';\n    },\n    set: function set(value) {\n      if (value !== 'discrete') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/helpers/wrap-channel-splitter-node.js"],"names":["createInvalidStateError","wrapChannelSplitterNode","channelSplitterNode","channelCount","numberOfOutputs","Object","defineProperty","get","set","value"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,kCAAxC;AACA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,mBAAD,EAAyB;AAC5D,MAAMC,YAAY,GAAGD,mBAAmB,CAACE,eAAzC,CAD4D,CAE5D;;AACAC,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,mBAAtB,EAA2C,cAA3C,EAA2D;AACvDK,IAAAA,GAAG,EAAE;AAAA,aAAMJ,YAAN;AAAA,KADkD;AAEvDK,IAAAA,GAAG,EAAE,aAACC,KAAD,EAAW;AACZ,UAAIA,KAAK,KAAKN,YAAd,EAA4B;AACxB,cAAMH,uBAAuB,EAA7B;AACH;AACJ;AANsD,GAA3D;AAQA;;;;;AAIAK,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,mBAAtB,EAA2C,kBAA3C,EAA+D;AAC3DK,IAAAA,GAAG,EAAE;AAAA,aAAM,UAAN;AAAA,KADsD;AAE3DC,IAAAA,GAAG,EAAE,aAACC,KAAD,EAAW;AACZ,UAAIA,KAAK,KAAK,UAAd,EAA0B;AACtB,cAAMT,uBAAuB,EAA7B;AACH;AACJ;AAN0D,GAA/D;AAQA;;;;;AAIAK,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,mBAAtB,EAA2C,uBAA3C,EAAoE;AAChEK,IAAAA,GAAG,EAAE;AAAA,aAAM,UAAN;AAAA,KAD2D;AAEhEC,IAAAA,GAAG,EAAE,aAACC,KAAD,EAAW;AACZ,UAAIA,KAAK,KAAK,UAAd,EAA0B;AACtB,cAAMT,uBAAuB,EAA7B;AACH;AACJ;AAN+D,GAApE;AAQH,CAnCM","sourcesContent":["import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n     * explicit.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n     * discrete.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-channel-splitter-node.js.map"]},"metadata":{},"sourceType":"module"}