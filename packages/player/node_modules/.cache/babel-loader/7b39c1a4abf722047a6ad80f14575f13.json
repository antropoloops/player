{"ast":null,"code":"export class AudioContextEngine {\n  constructor(context) {\n    this.context = context;\n  }\n\n  createAudioSource(props, destination) {\n    const source = this.context.createBufferSource();\n    source.buffer = props.buffer;\n    source.loop = true;\n    source.connect(destination);\n    return source;\n  }\n\n  createTrack(name, props, destination) {\n    const track = this.context.createGain();\n    track.connect(destination || this.context.destination);\n    return track;\n  }\n\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/sampler/AudioContextEngine.ts"],"names":["AudioContextEngine","constructor","context","createAudioSource","props","destination","source","createBufferSource","buffer","loop","connect","createTrack","name","track","createGain"],"mappings":"AASA,OAAO,MAAMA,kBAAN,CAAgD;AACrDC,EAAAA,WAAW,CAASC,OAAT,EAAiC;AAAA,SAAxBA,OAAwB,GAAxBA,OAAwB;AAAE;;AAEvCC,EAAAA,iBAAP,CACEC,KADF,EAEEC,WAFF,EAGe;AACb,UAAMC,MAAM,GAAG,KAAKJ,OAAL,CAAaK,kBAAb,EAAf;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgBJ,KAAK,CAACI,MAAtB;AACAF,IAAAA,MAAM,CAACG,IAAP,GAAc,IAAd;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAeL,WAAf;AACA,WAAOC,MAAP;AACD;;AACMK,EAAAA,WAAP,CACEC,IADF,EAEER,KAFF,EAGEC,WAHF,EAIc;AACZ,UAAMQ,KAAK,GAAG,KAAKX,OAAL,CAAaY,UAAb,EAAd;AACAD,IAAAA,KAAK,CAACH,OAAN,CAAcL,WAAW,IAAI,KAAKH,OAAL,CAAaG,WAA1C;AACA,WAAOQ,KAAP;AACD;;AArBoD","sourcesContent":["import { IAudioContext } from \"standardized-audio-context\";\nimport {\n  AudioEngine,\n  AudioSource,\n  AudioSourceProperties,\n  AudioTrack,\n  AudioTrackProperties,\n} from \"../player/Audio/Audio\";\n\nexport class AudioContextEngine implements AudioEngine {\n  constructor(private context: IAudioContext) {}\n\n  public createAudioSource(\n    props: AudioSourceProperties,\n    destination: any,\n  ): AudioSource {\n    const source = this.context.createBufferSource();\n    source.buffer = props.buffer;\n    source.loop = true;\n    source.connect(destination);\n    return source;\n  }\n  public createTrack(\n    name: string,\n    props: AudioTrackProperties,\n    destination?: any,\n  ): AudioTrack {\n    const track = this.context.createGain();\n    track.connect(destination || this.context.destination);\n    return track;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}