{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\n/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport var createTestAudioWorkletProcessorNoOutputsSupport = function createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) {\n  return function _callee() {\n    var blob, offlineAudioContext, url, isCallingProcess, gainNode, audioWorkletNode;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(nativeAudioWorkletNodeConstructor === null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", true);\n\n          case 2:\n            if (!(nativeOfflineAudioContextConstructor === null)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n              type: 'application/javascript; charset=utf-8'\n            });\n            offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n            url = URL.createObjectURL(blob);\n            isCallingProcess = false;\n            _context.prev = 8;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(offlineAudioContext.audioWorklet.addModule(url));\n\n          case 11:\n            gainNode = offlineAudioContext.createGain();\n            audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {\n              numberOfOutputs: 0\n            });\n\n            audioWorkletNode.port.onmessage = function () {\n              return isCallingProcess = true;\n            };\n\n            gainNode.connect(audioWorkletNode);\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(offlineAudioContext.startRendering());\n\n          case 17:\n            _context.next = 21;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](8);\n\n          case 21:\n            _context.prev = 21;\n            URL.revokeObjectURL(url);\n            return _context.finish(21);\n\n          case 24:\n            return _context.abrupt(\"return\", isCallingProcess);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[8, 19, 21, 24]]);\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/test-audio-worklet-processor-no-outputs-support.js"],"names":["createTestAudioWorkletProcessorNoOutputsSupport","nativeAudioWorkletNodeConstructor","nativeOfflineAudioContextConstructor","blob","Blob","type","offlineAudioContext","url","URL","createObjectURL","isCallingProcess","audioWorklet","addModule","gainNode","createGain","audioWorkletNode","numberOfOutputs","port","onmessage","connect","startRendering","revokeObjectURL"],"mappings":";;AAAA;;;;AAIA,OAAO,IAAMA,+CAA+C,GAAG,SAAlDA,+CAAkD,CAACC,iCAAD,EAAoCC,oCAApC,EAA6E;AACxI,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAECD,iCAAiC,KAAK,IAFvC;AAAA;AAAA;AAAA;;AAAA,6CAGQ,IAHR;;AAAA;AAAA,kBAKCC,oCAAoC,KAAK,IAL1C;AAAA;AAAA;AAAA;;AAAA,6CAMQ,KANR;;AAAA;AAQGC,YAAAA,IARH,GAQU,IAAIC,IAAJ,CAAS,CAAC,oGAAD,CAAT,EAAiH;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAjH,CARV;AASGC,YAAAA,mBATH,GASyB,IAAIJ,oCAAJ,CAAyC,CAAzC,EAA4C,GAA5C,EAAiD,IAAjD,CATzB;AAUGK,YAAAA,GAVH,GAUSC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAVT;AAWCO,YAAAA,gBAXD,GAWoB,KAXpB;AAAA;AAAA;AAAA,6CAaOJ,mBAAmB,CAACK,YAApB,CAAiCC,SAAjC,CAA2CL,GAA3C,CAbP;;AAAA;AAcOM,YAAAA,QAdP,GAckBP,mBAAmB,CAACQ,UAApB,EAdlB;AAeOC,YAAAA,gBAfP,GAe0B,IAAId,iCAAJ,CAAsCK,mBAAtC,EAA2D,GAA3D,EAAgE;AAAEU,cAAAA,eAAe,EAAE;AAAnB,aAAhE,CAf1B;;AAgBCD,YAAAA,gBAAgB,CAACE,IAAjB,CAAsBC,SAAtB,GAAkC;AAAA,qBAAMR,gBAAgB,GAAG,IAAzB;AAAA,aAAlC;;AACAG,YAAAA,QAAQ,CAACM,OAAT,CAAiBJ,gBAAjB;AAjBD;AAAA,6CAkBOT,mBAAmB,CAACc,cAApB,EAlBP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwBCZ,YAAAA,GAAG,CAACa,eAAJ,CAAoBd,GAApB;AAxBD;;AAAA;AAAA,6CA0BIG,gBA1BJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA4BH,CA7BM","sourcesContent":["/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], { type: 'application/javascript; charset=utf-8' });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const gainNode = offlineAudioContext.createGain();\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            audioWorkletNode.port.onmessage = () => isCallingProcess = true;\n            gainNode.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch (_a) {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-worklet-processor-no-outputs-support.js.map"]},"metadata":{},"sourceType":"module"}