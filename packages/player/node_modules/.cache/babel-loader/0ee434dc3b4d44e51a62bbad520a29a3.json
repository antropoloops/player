{"ast":null,"code":"export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw createNotSupportedError();\n      }\n\n      const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n      super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/media-stream-track-audio-source-node-constructor.js"],"names":["createMediaStreamTrackAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","createNotSupportedError","getNativeContext","isNativeOfflineAudioContext","MediaStreamTrackAudioSourceNode","constructor","context","options","nativeContext","nativeMediaStreamTrackAudioSourceNode"],"mappings":"AAAA,OAAO,MAAMA,gDAAgD,GAAG,CAACC,oBAAD,EAAuBC,2CAAvB,EAAoEC,uBAApE,EAA6FC,gBAA7F,EAA+GC,2BAA/G,KAA+I;AAC3M,SAAO,MAAMC,+BAAN,SAA8CL,oBAA9C,CAAmE;AACtEM,IAAAA,WAAW,CAACC,OAAD,EAAUC,OAAV,EAAmB;AAC1B,YAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAD,CAAtC;;AACA,UAAIH,2BAA2B,CAACK,aAAD,CAA/B,EAAgD;AAC5C,cAAMP,uBAAuB,EAA7B;AACH;;AACD,YAAMQ,qCAAqC,GAAGT,2CAA2C,CAACQ,aAAD,EAAgBD,OAAhB,CAAzF;AACA,YAAMD,OAAN,EAAe,IAAf,EAAqBG,qCAArB,EAA4D,IAA5D;AACH;;AARqE,GAA1E;AAUH,CAXM","sourcesContent":["export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw createNotSupportedError();\n            }\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/media-stream-track-audio-source-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}