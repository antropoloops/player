{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = require(\"prop-types\");\n\nvar _useCollapse2 = _interopRequireDefault(require(\"./useCollapse\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction Collapse(_ref) {\n  var isOpen = _ref.isOpen,\n      onRest = _ref.onRest,\n      initialStyle = _ref.style,\n      transition = _ref.transition,\n      className = _ref.className,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"isOpen\", \"onRest\", \"style\", \"transition\", \"className\"]);\n  var content = (0, _react.useRef)(null);\n\n  var _useCollapse = (0, _useCollapse2.default)({\n    isOpen: isOpen,\n    content: content\n  }),\n      setIsExpandedStyle = _useCollapse.setIsExpandedStyle,\n      setIsCollapsedStyle = _useCollapse.setIsCollapsedStyle,\n      style = _useCollapse.style;\n\n  var onTransitionEnd = function onTransitionEnd(e) {\n    if (e.target === content.current && e.propertyName === 'height') {\n      if (isOpen) {\n        setIsExpandedStyle();\n      } else {\n        setIsCollapsedStyle();\n      }\n\n      if (onRest) {\n        onRest();\n      }\n    }\n  };\n\n  var styles = _objectSpread({\n    willChange: 'height',\n    transition: transition\n  }, initialStyle, {}, style);\n\n  return _react.default.createElement(\"div\", (0, _extends2.default)({\n    ref: content,\n    style: styles,\n    className: className,\n    onTransitionEnd: onTransitionEnd // eslint-disable-next-line react/jsx-props-no-spreading\n\n  }, rest));\n}\n\nCollapse.defaultProps = {\n  isOpen: false,\n  onRest: null,\n  style: null,\n  className: 'react-css-collapse-transition',\n  transition: null\n};\nCollapse.propTypes = {\n  isOpen: _propTypes.bool,\n  onRest: _propTypes.func,\n  style: (0, _propTypes.shape)({}),\n  className: _propTypes.string,\n  transition: _propTypes.string\n};\nvar _default = Collapse;\nexports.default = _default;","map":{"version":3,"sources":["../src/components/Collapse.jsx"],"names":["isOpen","onRest","style","initialStyle","transition","className","rest","content","setIsExpandedStyle","setIsCollapsedStyle","onTransitionEnd","e","styles","willChange","Collapse","bool","func","string"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAA,QAAA,CAAA,IAAA,EAOG;AAAA,MANDA,MAMC,GAAA,IAAA,CANDA,MAMC;AAAA,MALDC,MAKC,GAAA,IAAA,CALDA,MAKC;AAAA,MAJME,YAIN,GAAA,IAAA,CAJDD,KAIC;AAAA,MAHDE,UAGC,GAAA,IAAA,CAHDA,UAGC;AAAA,MAFDC,SAEC,GAAA,IAAA,CAFDA,SAEC;AAAA,MADEC,IACF,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,YAAA,EAAA,WAAA,CAAA,CAAA;AACD,MAAMC,OAAO,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAAhB,IAAgB,CAAhB;;AADC,MAAA,YAAA,GAE0D,CAAA,GAAA,aAAA,CAAA,OAAA,EAAY;AACrEP,IAAAA,MAAM,EAD+D,MAAA;AAErEO,IAAAA,OAAO,EAAPA;AAFqE,GAAZ,CAF1D;AAAA,MAEOC,kBAFP,GAAA,YAAA,CAAA,kBAAA;AAAA,MAE2BC,mBAF3B,GAAA,YAAA,CAAA,mBAAA;AAAA,MAEgDP,KAFhD,GAAA,YAAA,CAAA,KAAA;;AAOD,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAA,CAAA,EAAK;AAC3B,QAAIC,CAAC,CAADA,MAAAA,KAAaJ,OAAO,CAApBI,OAAAA,IAAgCA,CAAC,CAADA,YAAAA,KAApC,QAAA,EAAiE;AAC/D,UAAA,MAAA,EAAY;AACVH,QAAAA,kBAAkB;AADpB,OAAA,MAEO;AACLC,QAAAA,mBAAmB;AACpB;;AACD,UAAA,MAAA,EAAY;AACVR,QAAAA,MAAM;AACP;AACF;AAVH,GAAA;;AAaA,MAAMW,MAAM,GAAA,aAAA,CAAA;AACVC,IAAAA,UAAU,EADA,QAAA;AAEVT,IAAAA,UAAU,EAAVA;AAFU,GAAA,EAAA,YAAA,EAAA,EAAA,EAAZ,KAAY,CAAZ;;AAOA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,IAAA,GAAG,EADL,OAAA;AAEE,IAAA,KAAK,EAFP,MAAA;AAGE,IAAA,SAAS,EAHX,SAAA;AAIE,IAAA,eAAe,EAJjB,eAAA,CAKE;;AALF,GAAA,EADF,IACE,CAAA,CADF;AAUD;;AAEDU,QAAQ,CAARA,YAAAA,GAAwB;AACtBd,EAAAA,MAAM,EADgB,KAAA;AAEtBC,EAAAA,MAAM,EAFgB,IAAA;AAGtBC,EAAAA,KAAK,EAHiB,IAAA;AAItBG,EAAAA,SAAS,EAJa,+BAAA;AAKtBD,EAAAA,UAAU,EAAE;AALU,CAAxBU;AAQAA,QAAQ,CAARA,SAAAA,GAAqB;AACnBd,EAAAA,MAAM,EAAEe,UAAAA,CADW,IAAA;AAEnBd,EAAAA,MAAM,EAAEe,UAAAA,CAFW,IAAA;AAGnBd,EAAAA,KAAK,EAAE,CAAA,GAAA,UAAA,CAAA,KAAA,EAHY,EAGZ,CAHY;AAInBG,EAAAA,SAAS,EAAEY,UAAAA,CAJQ,MAAA;AAKnBb,EAAAA,UAAU,EAAEa,UAAAA,CAAAA;AALO,CAArBH;eAQeA,Q","sourcesContent":["import React, { useRef } from 'react';\nimport { string, bool, func, shape } from 'prop-types';\nimport useCollapse from './useCollapse';\n\nfunction Collapse({\n  isOpen,\n  onRest,\n  style: initialStyle,\n  transition,\n  className,\n  ...rest\n}) {\n  const content = useRef(null);\n  const { setIsExpandedStyle, setIsCollapsedStyle, style } = useCollapse({\n    isOpen,\n    content,\n  });\n\n  const onTransitionEnd = e => {\n    if (e.target === content.current && e.propertyName === 'height') {\n      if (isOpen) {\n        setIsExpandedStyle();\n      } else {\n        setIsCollapsedStyle();\n      }\n      if (onRest) {\n        onRest();\n      }\n    }\n  };\n\n  const styles = {\n    willChange: 'height',\n    transition,\n    ...initialStyle,\n    ...style,\n  };\n\n  return (\n    <div\n      ref={content}\n      style={styles}\n      className={className}\n      onTransitionEnd={onTransitionEnd}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...rest}\n    />\n  );\n}\n\nCollapse.defaultProps = {\n  isOpen: false,\n  onRest: null,\n  style: null,\n  className: 'react-css-collapse-transition',\n  transition: null,\n};\n\nCollapse.propTypes = {\n  isOpen: bool,\n  onRest: func,\n  style: shape({}),\n  className: string,\n  transition: string,\n};\n\nexport default Collapse;\n"]},"metadata":{},"sourceType":"script"}