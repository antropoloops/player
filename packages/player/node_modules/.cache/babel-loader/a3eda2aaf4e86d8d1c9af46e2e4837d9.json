{"ast":null,"code":"import _defineProperty from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar DEFAULT_OPTIONS = {\n  disableNormalization: false\n};\nexport var createPeriodicWaveConstructor = function createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, periodicWaveStore) {\n  return (\n    /*#__PURE__*/\n    function () {\n      function PeriodicWave(context, options) {\n        _classCallCheck(this, PeriodicWave);\n\n        var nativeContext = getNativeContext(context);\n\n        var mergedOptions = _objectSpread({}, DEFAULT_OPTIONS, {}, options);\n\n        var periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n        periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n\n        return periodicWave;\n      }\n\n      _createClass(PeriodicWave, null, [{\n        key: Symbol.hasInstance,\n        value: function value(instance) {\n          return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);\n        }\n      }]);\n\n      return PeriodicWave;\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/periodic-wave-constructor.js"],"names":["DEFAULT_OPTIONS","disableNormalization","createPeriodicWaveConstructor","createNativePeriodicWave","getNativeContext","periodicWaveStore","context","options","nativeContext","mergedOptions","periodicWave","add","Symbol","hasInstance","instance","Object","getPrototypeOf","PeriodicWave","prototype","has"],"mappings":";;;;;;;;AAAA,IAAMA,eAAe,GAAG;AACpBC,EAAAA,oBAAoB,EAAE;AADF,CAAxB;AAGA,OAAO,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,wBAAD,EAA2BC,gBAA3B,EAA6CC,iBAA7C,EAAmE;AAC5G;AAAA;AAAA;AACI,4BAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC1B,YAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAD,CAAtC;;AACA,YAAMG,aAAa,qBAAQT,eAAR,MAA4BO,OAA5B,CAAnB;;AACA,YAAMG,YAAY,GAAGP,wBAAwB,CAACK,aAAD,EAAgBC,aAAhB,CAA7C;AACAJ,QAAAA,iBAAiB,CAACM,GAAlB,CAAsBD,YAAtB,EAJ0B,CAK1B;;AACA,eAAOA,YAAP;AACH;;AARL;AAAA,aASYE,MAAM,CAACC,WATnB;AAAA,8BASgCC,QAThC,EAS0C;AAClC,iBAAQA,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAP,KAAoB,QAAzC,IAAqDC,MAAM,CAACC,cAAP,CAAsBF,QAAtB,MAAoCG,YAAY,CAACC,SAAvG,IACCb,iBAAiB,CAACc,GAAlB,CAAsBL,QAAtB,CADR;AAEH;AAZL;;AAAA;AAAA;AAAA;AAcH,CAfM","sourcesContent":["const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype)\n                || (periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/periodic-wave-constructor.js.map"]},"metadata":{},"sourceType":"module"}