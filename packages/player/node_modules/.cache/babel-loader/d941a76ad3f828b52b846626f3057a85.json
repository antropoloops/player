{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2 } from \"./math.js\";\nexport function littrowRaw(lambda, phi) {\n  return [sin(lambda) / cos(phi), tan(phi) * cos(lambda)];\n}\n\nlittrowRaw.invert = function (x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      x2_y2_1 = x2 + y2_1,\n      cosPhi = x ? sqrt1_2 * sqrt((x2_y2_1 - sqrt(x2_y2_1 * x2_y2_1 - 4 * x2)) / x2) : 1 / sqrt(y2_1);\n  return [asin(x * cosPhi), sign(y) * acos(cosPhi)];\n};\n\nexport default function () {\n  return projection(littrowRaw).scale(144.049).clipAngle(90 - 1e-3);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/littrow.js"],"names":["geoProjection","projection","acos","asin","cos","sign","sin","tan","sqrt","sqrt1_2","littrowRaw","lambda","phi","invert","x","y","x2","y2","y2_1","x2_y2_1","cosPhi","scale","clipAngle"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAzB,QAA0C,QAA1C;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+CC,OAA/C,QAA6D,WAA7D;AAEA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,GAA5B,EAAiC;AACtC,SAAO,CACLN,GAAG,CAACK,MAAD,CAAH,GAAcP,GAAG,CAACQ,GAAD,CADZ,EAELL,GAAG,CAACK,GAAD,CAAH,GAAWR,GAAG,CAACO,MAAD,CAFT,CAAP;AAID;;AAEDD,UAAU,CAACG,MAAX,GAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjC,MAAIC,EAAE,GAAGF,CAAC,GAAGA,CAAb;AAAA,MACIG,EAAE,GAAGF,CAAC,GAAGA,CADb;AAAA,MAEIG,IAAI,GAAGD,EAAE,GAAG,CAFhB;AAAA,MAGIE,OAAO,GAAGH,EAAE,GAAGE,IAHnB;AAAA,MAIIE,MAAM,GAAGN,CAAC,GACJL,OAAO,GAAGD,IAAI,CAAC,CAACW,OAAO,GAAGX,IAAI,CAACW,OAAO,GAAGA,OAAV,GAAoB,IAAIH,EAAzB,CAAf,IAA+CA,EAAhD,CADV,GAEJ,IAAIR,IAAI,CAACU,IAAD,CANlB;AAOA,SAAO,CACLf,IAAI,CAACW,CAAC,GAAGM,MAAL,CADC,EAELf,IAAI,CAACU,CAAD,CAAJ,GAAUb,IAAI,CAACkB,MAAD,CAFT,CAAP;AAID,CAZD;;AAcA,eAAe,YAAW;AACxB,SAAOnB,UAAU,CAACS,UAAD,CAAV,CACFW,KADE,CACI,OADJ,EAEFC,SAFE,CAEQ,KAAK,IAFb,CAAP;AAGD","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2} from \"./math.js\";\n\nexport function littrowRaw(lambda, phi) {\n  return [\n    sin(lambda) / cos(phi),\n    tan(phi) * cos(lambda)\n  ];\n}\n\nlittrowRaw.invert = function(x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      x2_y2_1 = x2 + y2_1,\n      cosPhi = x\n          ? sqrt1_2 * sqrt((x2_y2_1 - sqrt(x2_y2_1 * x2_y2_1 - 4 * x2)) / x2)\n          : 1 / sqrt(y2_1);\n  return [\n    asin(x * cosPhi),\n    sign(y) * acos(cosPhi)\n  ];\n};\n\nexport default function() {\n  return projection(littrowRaw)\n      .scale(144.049)\n      .clipAngle(90 - 1e-3);\n}\n"]},"metadata":{},"sourceType":"module"}