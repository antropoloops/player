{"ast":null,"code":"import _slicedToArray from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from\"react\";import{ArrowDown,ArrowUp}from\"../../../../shared/Icons\";import{Markdown}from\"../../../../shared/Markdown\";import\"./ClipOpen.css\";export var OpenClip=function OpenClip(_ref){var clip=_ref.clip,control=_ref.control;var _useReducer=useReducer(function(x){return!x;},false),_useReducer2=_slicedToArray(_useReducer,2),isReadmeVisible=_useReducer2[0],toggleReadme=_useReducer2[1];var hasReadme=clip.readme;var Icon=isReadmeVisible?ArrowUp:ArrowDown;var stopClip=function stopClip(){return control&&control.stopClip(clip.id,0);};var clipToggle=React.createElement(\"div\",{className:\"clipToggle\",onClick:hasReadme&&toggleReadme||undefined},React.createElement(\"div\",{className:\"clipName noselect\"},clip.name),hasReadme&&React.createElement(Icon,null));var clipInfo=React.createElement(\"div\",{className:\"clipInfo noselect\",onClick:stopClip},React.createElement(\"h3\",{className:\"title\"},clip.title),React.createElement(\"p\",null,clip.artist));var cover2=clip.resources.cover2&&clip.resources.cover2.small;return React.createElement(\"div\",{className:\"Clip open\",style:{backgroundColor:clip.color}},React.createElement(\"div\",{className:\"covers\"},React.createElement(\"div\",{className:\"cover\"},React.createElement(\"img\",{alt:clip.title,src:clip.coverUrl,onClick:stopClip})),cover2?React.createElement(\"div\",{className:\"cover\"},React.createElement(\"img\",{alt:clip.title,src:cover2,onClick:stopClip})):React.createElement(\"div\",{className:\"cover info\"},clipInfo,\" \",clipToggle)),cover2&&React.createElement(\"div\",{className:\"meta\"},clipToggle,clipInfo),React.createElement(Markdown,{className:\"expand \".concat(isReadmeVisible?\"visible\":\"hidden\"),markdown:isReadmeVisible?clip.readme:\"\"}));};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/components/Player/Controller/Clip/ClipOpen.tsx"],"names":["React","useReducer","ArrowDown","ArrowUp","Markdown","OpenClip","clip","control","x","isReadmeVisible","toggleReadme","hasReadme","readme","Icon","stopClip","id","clipToggle","undefined","name","clipInfo","title","artist","cover2","resources","small","backgroundColor","color","coverUrl"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAEA,OAASC,SAAT,CAAoBC,OAApB,KAAmC,0BAAnC,CACA,OAASC,QAAT,KAAyB,6BAAzB,CACA,MAAO,gBAAP,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAkC,IAA/BC,CAAAA,IAA+B,MAA/BA,IAA+B,CAAzBC,OAAyB,MAAzBA,OAAyB,iBAChBN,UAAU,CAAC,SAAAO,CAAC,QAAI,CAACA,CAAL,EAAF,CAAU,KAAV,CADM,4CACjDC,eADiD,iBAChCC,YADgC,iBAExD,GAAMC,CAAAA,SAAS,CAAGL,IAAI,CAACM,MAAvB,CAEA,GAAMC,CAAAA,IAAI,CAAGJ,eAAe,CAAGN,OAAH,CAAaD,SAAzC,CACA,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMP,CAAAA,OAAO,EAAIA,OAAO,CAACO,QAAR,CAAiBR,IAAI,CAACS,EAAtB,CAA0B,CAA1B,CAAjB,EAAjB,CAEA,GAAMC,CAAAA,UAAU,CACd,2BACE,SAAS,CAAC,YADZ,CAEE,OAAO,CAAGL,SAAS,EAAID,YAAd,EAA+BO,SAF1C,EAIE,2BAAK,SAAS,CAAC,mBAAf,EAAoCX,IAAI,CAACY,IAAzC,CAJF,CAKGP,SAAS,EAAI,oBAAC,IAAD,MALhB,CADF,CASA,GAAMQ,CAAAA,QAAQ,CACZ,2BAAK,SAAS,CAAC,mBAAf,CAAmC,OAAO,CAAEL,QAA5C,EACE,0BAAI,SAAS,CAAC,OAAd,EAAuBR,IAAI,CAACc,KAA5B,CADF,CAEE,6BAAId,IAAI,CAACe,MAAT,CAFF,CADF,CAOA,GAAMC,CAAAA,MAAM,CAAGhB,IAAI,CAACiB,SAAL,CAAeD,MAAf,EAAyBhB,IAAI,CAACiB,SAAL,CAAeD,MAAf,CAAsBE,KAA9D,CACA,MACE,4BAAK,SAAS,CAAC,WAAf,CAA2B,KAAK,CAAE,CAAEC,eAAe,CAAEnB,IAAI,CAACoB,KAAxB,CAAlC,EACE,2BAAK,SAAS,CAAC,QAAf,EACE,2BAAK,SAAS,CAAC,OAAf,EACE,2BAAK,GAAG,CAAEpB,IAAI,CAACc,KAAf,CAAsB,GAAG,CAAEd,IAAI,CAACqB,QAAhC,CAA0C,OAAO,CAAEb,QAAnD,EADF,CADF,CAIGQ,MAAM,CACL,2BAAK,SAAS,CAAC,OAAf,EACE,2BAAK,GAAG,CAAEhB,IAAI,CAACc,KAAf,CAAsB,GAAG,CAAEE,MAA3B,CAAmC,OAAO,CAAER,QAA5C,EADF,CADK,CAKL,2BAAK,SAAS,CAAC,YAAf,EACGK,QADH,KACcH,UADd,CATJ,CADF,CAeGM,MAAM,EACL,2BAAK,SAAS,CAAC,MAAf,EACGN,UADH,CAEGG,QAFH,CAhBJ,CAqBE,oBAAC,QAAD,EACE,SAAS,kBAAYV,eAAe,CAAG,SAAH,CAAe,QAA1C,CADX,CAEE,QAAQ,CAAEA,eAAe,CAAGH,IAAI,CAACM,MAAR,CAAiB,EAF5C,EArBF,CADF,CA4BD,CApDM","sourcesContent":["import React, { useReducer } from \"react\";\nimport { ClipProps } from \".\";\nimport { ArrowDown, ArrowUp } from \"../../../../shared/Icons\";\nimport { Markdown } from \"../../../../shared/Markdown\";\nimport \"./ClipOpen.css\";\n\nexport const OpenClip = ({ clip, control }: ClipProps) => {\n  const [isReadmeVisible, toggleReadme] = useReducer(x => !x, false);\n  const hasReadme = clip.readme;\n\n  const Icon = isReadmeVisible ? ArrowUp : ArrowDown;\n  const stopClip = () => control && control.stopClip(clip.id, 0);\n\n  const clipToggle = (\n    <div\n      className=\"clipToggle\"\n      onClick={(hasReadme && toggleReadme) || undefined}\n    >\n      <div className=\"clipName noselect\">{clip.name}</div>\n      {hasReadme && <Icon />}\n    </div>\n  );\n  const clipInfo = (\n    <div className=\"clipInfo noselect\" onClick={stopClip}>\n      <h3 className=\"title\">{clip.title}</h3>\n      <p>{clip.artist}</p>\n    </div>\n  );\n\n  const cover2 = clip.resources.cover2 && clip.resources.cover2.small;\n  return (\n    <div className=\"Clip open\" style={{ backgroundColor: clip.color }}>\n      <div className=\"covers\">\n        <div className=\"cover\">\n          <img alt={clip.title} src={clip.coverUrl} onClick={stopClip} />\n        </div>\n        {cover2 ? (\n          <div className=\"cover\">\n            <img alt={clip.title} src={cover2} onClick={stopClip} />\n          </div>\n        ) : (\n          <div className=\"cover info\">\n            {clipInfo} {clipToggle}\n          </div>\n        )}\n      </div>\n      {cover2 && (\n        <div className=\"meta\">\n          {clipToggle}\n          {clipInfo}\n        </div>\n      )}\n      <Markdown\n        className={`expand ${isReadmeVisible ? \"visible\" : \"hidden\"}`}\n        markdown={isReadmeVisible ? clip.readme : \"\"}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}