{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport * as Screenfull from \"screenfull\";\nexport function useFullscreen() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isFull = _useState2[0],\n        setIsFull = _useState2[1];\n\n  useEffect(() => {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n\n      const handleChange = event => {\n        setIsFull(screen.isFullscreen);\n      };\n\n      screen.on(\"change\", handleChange);\n      return () => {\n        screen.off(\"change\", handleChange);\n      };\n    }\n  });\n\n  function toggleFullscreen() {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n      screen.isFullscreen ? screen.exit() : screen.request();\n    }\n  }\n\n  return {\n    isFullscreen,\n    toggleFullscreen\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/useFullscreen.ts"],"names":["useEffect","useState","Screenfull","useFullscreen","isFull","setIsFull","isEnabled","screen","handleChange","event","isFullscreen","on","off","toggleFullscreen","exit","request"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,UAAZ,MAA4B,YAA5B;AAOA,OAAO,SAASC,aAAT,GAAqC;AAAA,oBACdF,QAAQ,CAAC,KAAD,CADM;AAAA;AAAA,QACnCG,MADmC;AAAA,QAC3BC,SAD2B;;AAE1CL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,UAAU,CAACI,SAAf,EAA0B;AACxB,YAAMC,MAAM,GAAGL,UAAf;;AACA,YAAMM,YAAY,GAAIC,KAAD,IAAkB;AACrCJ,QAAAA,SAAS,CAACE,MAAM,CAACG,YAAR,CAAT;AACD,OAFD;;AAIAH,MAAAA,MAAM,CAACI,EAAP,CAAU,QAAV,EAAoBH,YAApB;AACA,aAAO,MAAM;AACXD,QAAAA,MAAM,CAACK,GAAP,CAAW,QAAX,EAAqBJ,YAArB;AACD,OAFD;AAGD;AACF,GAZQ,CAAT;;AAaA,WAASK,gBAAT,GAA4B;AAC1B,QAAIX,UAAU,CAACI,SAAf,EAA0B;AACxB,YAAMC,MAAM,GAAGL,UAAf;AACAK,MAAAA,MAAM,CAACG,YAAP,GAAsBH,MAAM,CAACO,IAAP,EAAtB,GAAsCP,MAAM,CAACQ,OAAP,EAAtC;AACD;AACF;;AACD,SAAO;AAAEL,IAAAA,YAAF;AAAgBG,IAAAA;AAAhB,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport * as Screenfull from \"screenfull\";\n\nexport interface Fullscreen {\n  isFull: boolean;\n  toggle: () => void;\n}\n\nexport function useFullscreen(): Fullscreen {\n  const [isFull, setIsFull] = useState(false);\n  useEffect(() => {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n      const handleChange = (event: Event) => {\n        setIsFull(screen.isFullscreen);\n      };\n\n      screen.on(\"change\", handleChange);\n      return () => {\n        screen.off(\"change\", handleChange);\n      };\n    }\n  });\n  function toggleFullscreen() {\n    if (Screenfull.isEnabled) {\n      const screen = Screenfull;\n      screen.isFullscreen ? screen.exit() : screen.request();\n    }\n  }\n  return { isFullscreen, toggleFullscreen };\n}\n"]},"metadata":{},"sourceType":"module"}