{"ast":null,"code":"import _slicedToArray from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{fetchAudioset}from\"../../player/fetchAudioset\";export function useRemoteBundle(idOrUrl){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),bundle=_useState2[0],setBundle=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var didCancel=false;function fetch(){setLoading(true);fetchAudioset(idOrUrl).then(function(result){if(!didCancel){setLoading(false);setBundle(result);}}).catch(setError);}fetch();return function(){didCancel=true;};},[idOrUrl]);return{bundle:bundle,loading:loading,error:error};}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/App/useRemoteBundle.tsx"],"names":["useEffect","useState","fetchAudioset","useRemoteBundle","idOrUrl","bundle","setBundle","loading","setLoading","error","setError","didCancel","fetch","then","result","catch"],"mappings":"4JAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,OAASC,aAAT,KAA8B,4BAA9B,CAEA,MAAO,SAASC,CAAAA,eAAT,CAAyBC,OAAzB,CAA0C,eACnBH,QAAQ,CAAoB,IAApB,CADW,wCACxCI,MADwC,eAChCC,SADgC,8BAEjBL,QAAQ,CAAU,IAAV,CAFS,yCAExCM,OAFwC,eAE/BC,UAF+B,8BAGrBP,QAAQ,CAAM,IAAN,CAHa,yCAGxCQ,KAHwC,eAGjCC,QAHiC,eAK/CV,SAAS,CAAC,UAAM,CACd,GAAIW,CAAAA,SAAS,CAAG,KAAhB,CAEA,QAASC,CAAAA,KAAT,EAAiB,CACfJ,UAAU,CAAC,IAAD,CAAV,CACAN,aAAa,CAACE,OAAD,CAAb,CACGS,IADH,CACQ,SAAAC,MAAM,CAAI,CACd,GAAI,CAACH,SAAL,CAAgB,CACdH,UAAU,CAAC,KAAD,CAAV,CACAF,SAAS,CAACQ,MAAD,CAAT,CACD,CACF,CANH,EAOGC,KAPH,CAOSL,QAPT,EAQD,CAEDE,KAAK,GACL,MAAO,WAAM,CACXD,SAAS,CAAG,IAAZ,CACD,CAFD,CAGD,CAnBQ,CAmBN,CAACP,OAAD,CAnBM,CAAT,CAqBA,MAAO,CAAEC,MAAM,CAANA,MAAF,CAAUE,OAAO,CAAPA,OAAV,CAAmBE,KAAK,CAALA,KAAnB,CAAP,CACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Bundle as BundleData } from \"../../audioset\";\nimport { fetchAudioset } from \"../../player/fetchAudioset\";\n\nexport function useRemoteBundle(idOrUrl: string) {\n  const [bundle, setBundle] = useState<BundleData | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<any>(null);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    function fetch() {\n      setLoading(true);\n      fetchAudioset(idOrUrl)\n        .then(result => {\n          if (!didCancel) {\n            setLoading(false);\n            setBundle(result);\n          }\n        })\n        .catch(setError);\n    }\n\n    fetch();\n    return () => {\n      didCancel = true;\n    };\n  }, [idOrUrl]);\n\n  return { bundle, loading, error };\n}\n"]},"metadata":{},"sourceType":"module"}