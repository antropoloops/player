{"ast":null,"code":"export default function (topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight; // Remove points whose weight is less than the minimum weight.\n\n  var arcs = topology.arcs.map(function (input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n),\n        // pessimistic\n    point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/topojson/node_modules/topojson-simplify/src/simplify.js"],"names":["topology","minWeight","Number","MIN_VALUE","arcs","map","input","i","j","n","length","output","Array","point","type","transform","bbox","objects"],"mappings":"AAAA,eAAe,UAASA,QAAT,EAAmBC,SAAnB,EAA8B;AAC3CA,EAAAA,SAAS,GAAGA,SAAS,IAAI,IAAb,GAAoBC,MAAM,CAACC,SAA3B,GAAuC,CAACF,SAApD,CAD2C,CAG3C;;AACA,MAAIG,IAAI,GAAGJ,QAAQ,CAACI,IAAT,CAAcC,GAAd,CAAkB,UAASC,KAAT,EAAgB;AAC3C,QAAIC,CAAC,GAAG,CAAC,CAAT;AAAA,QACIC,CAAC,GAAG,CADR;AAAA,QAEIC,CAAC,GAAGH,KAAK,CAACI,MAFd;AAAA,QAGIC,MAAM,GAAG,IAAIC,KAAJ,CAAUH,CAAV,CAHb;AAAA,QAG2B;AACvBI,IAAAA,KAJJ;;AAMA,WAAO,EAAEN,CAAF,GAAME,CAAb,EAAgB;AACd,UAAI,CAACI,KAAK,GAAGP,KAAK,CAACC,CAAD,CAAd,EAAmB,CAAnB,KAAyBN,SAA7B,EAAwC;AACtCU,QAAAA,MAAM,CAACH,CAAC,EAAF,CAAN,GAAc,CAACK,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAd;AACD;AACF;;AAEDF,IAAAA,MAAM,CAACD,MAAP,GAAgBF,CAAhB;AACA,WAAOG,MAAP;AACD,GAfU,CAAX;AAiBA,SAAO;AACLG,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,SAAS,EAAEf,QAAQ,CAACe,SAFf;AAGLC,IAAAA,IAAI,EAAEhB,QAAQ,CAACgB,IAHV;AAILC,IAAAA,OAAO,EAAEjB,QAAQ,CAACiB,OAJb;AAKLb,IAAAA,IAAI,EAAEA;AALD,GAAP;AAOD","sourcesContent":["export default function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}\n"]},"metadata":{},"sourceType":"module"}