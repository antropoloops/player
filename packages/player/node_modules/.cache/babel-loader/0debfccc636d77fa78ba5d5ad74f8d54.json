{"ast":null,"code":"import React from\"react\";import{useDeviceType}from\"../useDeviceType\";import{Controller}from\"./Controller\";import{Preview}from\"./Preview\";import{Sidebar}from\"./Sidebar\";import{useFullscreen}from\"./useFullscreen\";import{useKeyboardListener}from\"./useKeyboardListener\";import{usePlayer}from\"./usePlayer\";export var Player=function Player(_ref){var _player$control;var audioset=_ref.audioset;var player=usePlayer(audioset);var _useFullscreen=useFullscreen(),isFullscreen=_useFullscreen.isFullscreen,toggleFullscreen=_useFullscreen.toggleFullscreen;var _useDeviceType=useDeviceType(),isDesktop=_useDeviceType.isDesktop;useKeyboardListener((_player$control=player.control)===null||_player$control===void 0?void 0:_player$control.keyboard);var areVisualsVisible=isDesktop||player.isReady;var isSidebarVisible=!isFullscreen;return React.createElement(\"div\",{className:\"App Player\"},isSidebarVisible&&React.createElement(Sidebar,{audioset:audioset,onFullscreen:toggleFullscreen,onStopAll:function onStopAll(){var _player$control2;return player===null||player===void 0?void 0:(_player$control2=player.control)===null||_player$control2===void 0?void 0:_player$control2.stopAll(0);}},player.isReady&&player.control?React.createElement(Controller,{audioset:audioset,state:player.state,control:player.control}):React.createElement(Preview,{audioset:audioset,isReady:player.isReady,onStart:function onStart(){return player.setReady(true);}})),areVisualsVisible&&React.createElement(\"div\",{className:\"visuals\"},React.createElement(\"div\",{id:\"visuals\",ref:player.visualsRef})));};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Player.tsx"],"names":["React","useDeviceType","Controller","Preview","Sidebar","useFullscreen","useKeyboardListener","usePlayer","Player","audioset","player","isFullscreen","toggleFullscreen","isDesktop","control","keyboard","areVisualsVisible","isReady","isSidebarVisible","stopAll","state","setReady","visualsRef"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,mBAAT,KAAoC,uBAApC,CACA,OAASC,SAAT,KAA0B,aAA1B,CAMA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA+B,wBAA5BC,CAAAA,QAA4B,MAA5BA,QAA4B,CACnD,GAAMC,CAAAA,MAAM,CAAGH,SAAS,CAACE,QAAD,CAAxB,CADmD,mBAERJ,aAAa,EAFL,CAE3CM,YAF2C,gBAE3CA,YAF2C,CAE7BC,gBAF6B,gBAE7BA,gBAF6B,oBAG7BX,aAAa,EAHgB,CAG3CY,SAH2C,gBAG3CA,SAH2C,CAInDP,mBAAmB,kBAACI,MAAM,CAACI,OAAR,0CAAC,gBAAgBC,QAAjB,CAAnB,CAEA,GAAMC,CAAAA,iBAAiB,CAAGH,SAAS,EAAIH,MAAM,CAACO,OAA9C,CACA,GAAMC,CAAAA,gBAAgB,CAAG,CAACP,YAA1B,CAEA,MACE,4BAAK,SAAS,CAAC,YAAf,EACGO,gBAAgB,EACf,oBAAC,OAAD,EACE,QAAQ,CAAET,QADZ,CAEE,YAAY,CAAEG,gBAFhB,CAGE,SAAS,CAAE,gDAAMF,CAAAA,MAAN,SAAMA,MAAN,mCAAMA,MAAM,CAAEI,OAAd,2CAAM,iBAAiBK,OAAjB,CAAyB,CAAzB,CAAN,EAHb,EAKGT,MAAM,CAACO,OAAP,EAAkBP,MAAM,CAACI,OAAzB,CACC,oBAAC,UAAD,EACE,QAAQ,CAAEL,QADZ,CAEE,KAAK,CAAEC,MAAM,CAACU,KAFhB,CAGE,OAAO,CAAEV,MAAM,CAACI,OAHlB,EADD,CAOC,oBAAC,OAAD,EACE,QAAQ,CAAEL,QADZ,CAEE,OAAO,CAAEC,MAAM,CAACO,OAFlB,CAGE,OAAO,CAAE,yBAAMP,CAAAA,MAAM,CAACW,QAAP,CAAgB,IAAhB,CAAN,EAHX,EAZJ,CAFJ,CAsBGL,iBAAiB,EAChB,2BAAK,SAAS,CAAC,SAAf,EACE,2BAAK,EAAE,CAAC,SAAR,CAAkB,GAAG,CAAEN,MAAM,CAACY,UAA9B,EADF,CAvBJ,CADF,CA8BD,CAvCM","sourcesContent":["import React from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Controller } from \"./Controller\";\nimport { Preview } from \"./Preview\";\nimport { Sidebar } from \"./Sidebar\";\nimport { useFullscreen } from \"./useFullscreen\";\nimport { useKeyboardListener } from \"./useKeyboardListener\";\nimport { usePlayer } from \"./usePlayer\";\n\nexport interface PlayerProps {\n  audioset: Audioset;\n}\n\nexport const Player = ({ audioset }: PlayerProps) => {\n  const player = usePlayer(audioset);\n  const { isFullscreen, toggleFullscreen } = useFullscreen();\n  const { isDesktop } = useDeviceType();\n  useKeyboardListener(player.control?.keyboard);\n\n  const areVisualsVisible = isDesktop || player.isReady;\n  const isSidebarVisible = !isFullscreen;\n\n  return (\n    <div className=\"App Player\">\n      {isSidebarVisible && (\n        <Sidebar\n          audioset={audioset}\n          onFullscreen={toggleFullscreen}\n          onStopAll={() => player?.control?.stopAll(0)}\n        >\n          {player.isReady && player.control ? (\n            <Controller\n              audioset={audioset}\n              state={player.state}\n              control={player.control}\n            />\n          ) : (\n            <Preview\n              audioset={audioset}\n              isReady={player.isReady}\n              onStart={() => player.setReady(true)}\n            />\n          )}\n        </Sidebar>\n      )}\n      {areVisualsVisible && (\n        <div className=\"visuals\">\n          <div id=\"visuals\" ref={player.visualsRef} />\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}