{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipOpen.tsx\";\nimport React, { useReducer } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./ClipOpen.css\";\nexport const OpenClip = ({\n  ref,\n  clip,\n  onClick\n}) => {\n  const _useReducer = useReducer(x => !x, true),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        isReadmeVisible = _useReducer2[0],\n        toggleReadme = _useReducer2[1];\n\n  const Icon = isReadmeVisible ? ArrowUp : ArrowDown;\n  const cover2 = clip.resources.cover2 && clip.resources.cover2.small;\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: \"Clip open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"covers\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"cover\",\n    alt: clip.title,\n    src: clip.coverUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), cover2 ? React.createElement(\"img\", {\n    className: \"cover alternative\",\n    alt: clip.title,\n    src: cover2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    className: \"cover alternative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"\\xA0\")), React.createElement(\"div\", {\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clipName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, clip.name), React.createElement(Icon, {\n    onClick: toggleReadme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, clip.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, clip.artist))), React.createElement(\"div\", {\n    className: \"expand \".concat(!isReadmeVisible && \"hidden\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    markdown: clip.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipOpen.tsx"],"names":["React","useReducer","ArrowDown","ArrowUp","Markdown","OpenClip","ref","clip","onClick","x","isReadmeVisible","toggleReadme","Icon","cover2","resources","small","title","coverUrl","name","artist","readme"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,gBAAP;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAAA,sBACfP,UAAU,CAACQ,CAAC,IAAI,CAACA,CAAP,EAAU,IAAV,CADK;AAAA;AAAA,QAChDC,eADgD;AAAA,QAC/BC,YAD+B;;AAGvD,QAAMC,IAAI,GAAGF,eAAe,GAAGP,OAAH,GAAaD,SAAzC;AAEA,QAAMW,MAAM,GAAGN,IAAI,CAACO,SAAL,CAAeD,MAAf,IAAyBN,IAAI,CAACO,SAAL,CAAeD,MAAf,CAAsBE,KAA9D;AACA,SACE;AAAK,IAAA,GAAG,EAAET,GAAV;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAED,IAAI,CAACS,KAAjC;AAAwC,IAAA,GAAG,EAAET,IAAI,CAACU,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,MAAM,GACL;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAEN,IAAI,CAACS,KAA7C;AAAoD,IAAA,GAAG,EAAEH,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CADF,EASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,IAAI,CAACW,IAAhC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEP,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBJ,IAAI,CAACS,KAA5B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,IAAI,CAACY,MAAT,CAFF,CALF,CADF,EAWE;AAAK,IAAA,SAAS,mBAAY,CAACT,eAAD,IAAoB,QAAhC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,IAAI,CAACa,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CATF,CADF;AA2BD,CAjCM","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./ClipOpen.css\";\n\nexport const OpenClip = ({ ref, clip, onClick }: any) => {\n  const [isReadmeVisible, toggleReadme] = useReducer(x => !x, true);\n\n  const Icon = isReadmeVisible ? ArrowUp : ArrowDown;\n\n  const cover2 = clip.resources.cover2 && clip.resources.cover2.small;\n  return (\n    <div ref={ref} className=\"Clip open\">\n      <div className=\"covers\" onClick={onClick}>\n        <img className=\"cover\" alt={clip.title} src={clip.coverUrl} />\n        {cover2 ? (\n          <img className=\"cover alternative\" alt={clip.title} src={cover2} />\n        ) : (\n          <span className=\"cover alternative\">&nbsp;</span>\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"meta\">\n          <div className=\"column\">\n            <div className=\"clipName\">{clip.name}</div>\n            <Icon onClick={toggleReadme} />\n          </div>\n          <div className=\"column\">\n            <h3 className=\"title\">{clip.title}</h3>\n            <p>{clip.artist}</p>\n          </div>\n        </div>\n        <div className={`expand ${!isReadmeVisible && \"hidden\"}`}>\n          <Markdown markdown={clip.readme} />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}