{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport { getActiveAudioContext } from \"../../player\";\nimport { AudiosetControl, EmptyControlState } from \"../../player/Control\";\nexport function usePlayer(audioset) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        control = _useState2[0],\n        setControl = _useState2[1];\n\n  const _useState3 = useState(EmptyControlState),\n        _useState4 = _slicedToArray(_useState3, 2),\n        state = _useState4[0],\n        setState = _useState4[1];\n\n  useEffect(() => {\n    getActiveAudioContext().then(ctx => {\n      const ctl = new AudiosetControl(audioset, {\n        onControlStateChanged: newState => {\n          setState(newState);\n        },\n        onControlCommand: command => {// console.log(\"command!\", command);\n        }\n      });\n      setControl(ctl);\n      setState(ctl.getState());\n    });\n  }, [audioset]);\n  return {\n    control,\n    state\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/usePlayer.tsx"],"names":["useEffect","useState","getActiveAudioContext","AudiosetControl","EmptyControlState","usePlayer","audioset","control","setControl","state","setState","then","ctx","ctl","onControlStateChanged","newState","onControlCommand","command","getState"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,qBAAT,QAAsC,cAAtC;AACA,SACEC,eADF,EAEEC,iBAFF,QAIO,sBAJP;AAKA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAAuC;AAAA,oBACdL,QAAQ,CAAuB,IAAvB,CADM;AAAA;AAAA,QACrCM,OADqC;AAAA,QAC5BC,UAD4B;;AAAA,qBAElBP,QAAQ,CAACG,iBAAD,CAFU;AAAA;AAAA,QAErCK,KAFqC;AAAA,QAE9BC,QAF8B;;AAG5CV,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,qBAAqB,GAAGS,IAAxB,CAA6BC,GAAG,IAAI;AAClC,YAAMC,GAAG,GAAG,IAAIV,eAAJ,CAAoBG,QAApB,EAA8B;AACxCQ,QAAAA,qBAAqB,EAAEC,QAAQ,IAAI;AACjCL,UAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,SAHuC;AAIxCC,QAAAA,gBAAgB,EAAEC,OAAO,IAAI,CAC3B;AACD;AANuC,OAA9B,CAAZ;AAQAT,MAAAA,UAAU,CAACK,GAAD,CAAV;AACAH,MAAAA,QAAQ,CAACG,GAAG,CAACK,QAAJ,EAAD,CAAR;AACD,KAXD;AAYD,GAbQ,EAaN,CAACZ,QAAD,CAbM,CAAT;AAcA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { getActiveAudioContext } from \"../../player\";\nimport {\n  AudiosetControl,\n  EmptyControlState,\n  PlayerControl,\n} from \"../../player/Control\";\nexport function usePlayer(audioset: Audioset) {\n  const [control, setControl] = useState<PlayerControl | null>(null);\n  const [state, setState] = useState(EmptyControlState);\n  useEffect(() => {\n    getActiveAudioContext().then(ctx => {\n      const ctl = new AudiosetControl(audioset, {\n        onControlStateChanged: newState => {\n          setState(newState);\n        },\n        onControlCommand: command => {\n          // console.log(\"command!\", command);\n        },\n      });\n      setControl(ctl);\n      setState(ctl.getState());\n    });\n  }, [audioset]);\n  return { control, state };\n}\n"]},"metadata":{},"sourceType":"module"}