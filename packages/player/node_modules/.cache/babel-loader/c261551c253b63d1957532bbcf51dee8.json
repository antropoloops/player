{"ast":null,"code":"import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  coneInnerAngle: 360,\n  coneOuterAngle: 360,\n  coneOuterGain: 0,\n  distanceModel: 'inverse',\n  maxDistance: 10000,\n  orientationX: 1,\n  orientationY: 0,\n  orientationZ: 0,\n  panningModel: 'equalpower',\n  positionX: 0,\n  positionY: 0,\n  positionZ: 0,\n  refDistance: 1,\n  rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class PannerNode extends audioNodeConstructor {\n    constructor(context, options = DEFAULT_OPTIONS) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = { ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;\n      super(context, false, nativePannerNode, pannerNodeRenderer);\n      this._nativePannerNode = nativePannerNode; // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n\n      this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n      this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n\n    get coneInnerAngle() {\n      return this._nativePannerNode.coneInnerAngle;\n    }\n\n    set coneInnerAngle(value) {\n      this._nativePannerNode.coneInnerAngle = value;\n    }\n\n    get coneOuterAngle() {\n      return this._nativePannerNode.coneOuterAngle;\n    }\n\n    set coneOuterAngle(value) {\n      this._nativePannerNode.coneOuterAngle = value;\n    }\n\n    get coneOuterGain() {\n      return this._nativePannerNode.coneOuterGain;\n    }\n\n    set coneOuterGain(value) {\n      this._nativePannerNode.coneOuterGain = value;\n    }\n\n    get distanceModel() {\n      return this._nativePannerNode.distanceModel;\n    }\n\n    set distanceModel(value) {\n      this._nativePannerNode.distanceModel = value;\n    }\n\n    get maxDistance() {\n      return this._nativePannerNode.maxDistance;\n    }\n\n    set maxDistance(value) {\n      this._nativePannerNode.maxDistance = value;\n    }\n\n    get orientationX() {\n      return this._orientationX;\n    }\n\n    get orientationY() {\n      return this._orientationY;\n    }\n\n    get orientationZ() {\n      return this._orientationZ;\n    }\n\n    get panningModel() {\n      return this._nativePannerNode.panningModel;\n    }\n\n    set panningModel(value) {\n      this._nativePannerNode.panningModel = value;\n    }\n\n    get positionX() {\n      return this._positionX;\n    }\n\n    get positionY() {\n      return this._positionY;\n    }\n\n    get positionZ() {\n      return this._positionZ;\n    }\n\n    get refDistance() {\n      return this._nativePannerNode.refDistance;\n    }\n\n    set refDistance(value) {\n      this._nativePannerNode.refDistance = value;\n    }\n\n    get rolloffFactor() {\n      return this._nativePannerNode.rolloffFactor;\n    }\n\n    set rolloffFactor(value) {\n      this._nativePannerNode.rolloffFactor = value;\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/panner-node-constructor.js"],"names":["MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","createPannerNodeConstructor","audioNodeConstructor","createAudioParam","createNativePannerNode","createPannerNodeRenderer","getNativeContext","isNativeOfflineAudioContext","PannerNode","constructor","context","options","nativeContext","mergedOptions","nativePannerNode","isOffline","pannerNodeRenderer","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","value"],"mappings":"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","sourcesContent":["import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = ((isOffline) ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/panner-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}