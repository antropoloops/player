{"ast":null,"code":"export let context;\nexport async function getAudioContext() {\n  if (context) return context;\n  context = createAudioContext();\n\n  if (context.resume) {\n    console.log(\"trying to resume...\");\n    await context.resume();\n    console.log(\"resumed!\");\n  }\n\n  console.log(\"context ready!\");\n  return context;\n}\n\nfunction createAudioContext() {\n  console.log(\"create context\"); // iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\n\n  const ctx = new AudioContext();\n  const buffer = ctx.createBuffer(1, 1, ctx.sampleRate);\n  const source = ctx.createBufferSource();\n  source.buffer = buffer;\n  source.connect(ctx.destination);\n  source.start(0);\n  return ctx;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/Player/AudioContext.ts"],"names":["context","getAudioContext","createAudioContext","resume","console","log","ctx","AudioContext","buffer","createBuffer","sampleRate","source","createBufferSource","connect","destination","start"],"mappings":"AAAA,OAAO,IAAIA,OAAJ;AAEP,OAAO,eAAeC,eAAf,GAAwD;AAC7D,MAAID,OAAJ,EAAa,OAAOA,OAAP;AAEbA,EAAAA,OAAO,GAAGE,kBAAkB,EAA5B;;AACA,MAAIF,OAAO,CAACG,MAAZ,EAAoB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAML,OAAO,CAACG,MAAR,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAOL,OAAP;AACD;;AAED,SAASE,kBAAT,GAA8B;AAC5BE,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAD4B,CAE5B;;AACA,QAAMC,GAAG,GAAG,IAAIC,YAAJ,EAAZ;AACA,QAAMC,MAAM,GAAGF,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBH,GAAG,CAACI,UAA3B,CAAf;AACA,QAAMC,MAAM,GAAGL,GAAG,CAACM,kBAAJ,EAAf;AACAD,EAAAA,MAAM,CAACH,MAAP,GAAgBA,MAAhB;AACAG,EAAAA,MAAM,CAACE,OAAP,CAAeP,GAAG,CAACQ,WAAnB;AACAH,EAAAA,MAAM,CAACI,KAAP,CAAa,CAAb;AACA,SAAOT,GAAP;AACD","sourcesContent":["export let context: AudioContext | undefined;\n\nexport async function getAudioContext(): Promise<AudioContext> {\n  if (context) return context;\n\n  context = createAudioContext();\n  if (context.resume) {\n    console.log(\"trying to resume...\");\n    await context.resume();\n    console.log(\"resumed!\");\n  }\n  console.log(\"context ready!\");\n  return context;\n}\n\nfunction createAudioContext() {\n  console.log(\"create context\");\n  // iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\n  const ctx = new AudioContext();\n  const buffer = ctx.createBuffer(1, 1, ctx.sampleRate);\n  const source = ctx.createBufferSource();\n  source.buffer = buffer;\n  source.connect(ctx.destination);\n  source.start(0);\n  return ctx;\n}\n"]},"metadata":{},"sourceType":"module"}