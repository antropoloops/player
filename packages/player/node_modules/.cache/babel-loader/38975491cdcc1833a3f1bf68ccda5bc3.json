{"ast":null,"code":"export var createEvaluateSource = function createEvaluateSource(window) {\n  return function (source) {\n    return new Promise(function (resolve, reject) {\n      if (window === null) {\n        reject(new SyntaxError());\n        return;\n      }\n\n      var head = window.document.head;\n\n      if (head === null) {\n        reject(new SyntaxError());\n      } else {\n        var script = window.document.createElement('script'); // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n\n        var blob = new Blob([source], {\n          type: 'application/javascript'\n        });\n        var url = URL.createObjectURL(blob);\n        var originalOnErrorHandler = window.onerror;\n\n        var removeErrorEventListenerAndRevokeUrl = function removeErrorEventListenerAndRevokeUrl() {\n          window.onerror = originalOnErrorHandler;\n          URL.revokeObjectURL(url);\n        };\n\n        window.onerror = function (message, src, lineno, colno, error) {\n          // @todo Edge thinks the source is the one of the html document.\n          if (src === url || src === location.href && lineno === 1 && colno === 1) {\n            removeErrorEventListenerAndRevokeUrl();\n            reject(error);\n            return false;\n          }\n\n          if (originalOnErrorHandler !== null) {\n            return originalOnErrorHandler(message, src, lineno, colno, error);\n          }\n        };\n\n        script.onerror = function () {\n          removeErrorEventListenerAndRevokeUrl();\n          reject(new SyntaxError());\n        };\n\n        script.onload = function () {\n          removeErrorEventListenerAndRevokeUrl();\n          resolve();\n        };\n\n        script.src = url;\n        script.type = 'module';\n        head.appendChild(script);\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/evaluate-source.js"],"names":["createEvaluateSource","window","source","Promise","resolve","reject","SyntaxError","head","document","script","createElement","blob","Blob","type","url","URL","createObjectURL","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","revokeObjectURL","message","src","lineno","colno","error","location","href","onload","appendChild"],"mappings":"AAAA,OAAO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,MAAD,EAAY;AAC5C,SAAO,UAACC,MAAD;AAAA,WAAY,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChD,UAAIJ,MAAM,KAAK,IAAf,EAAqB;AACjBI,QAAAA,MAAM,CAAC,IAAIC,WAAJ,EAAD,CAAN;AACA;AACH;;AACD,UAAMC,IAAI,GAAGN,MAAM,CAACO,QAAP,CAAgBD,IAA7B;;AACA,UAAIA,IAAI,KAAK,IAAb,EAAmB;AACfF,QAAAA,MAAM,CAAC,IAAIC,WAAJ,EAAD,CAAN;AACH,OAFD,MAGK;AACD,YAAMG,MAAM,GAAGR,MAAM,CAACO,QAAP,CAAgBE,aAAhB,CAA8B,QAA9B,CAAf,CADC,CAED;;AACA,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACV,MAAD,CAAT,EAAmB;AAAEW,UAAAA,IAAI,EAAE;AAAR,SAAnB,CAAb;AACA,YAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;AACA,YAAMM,sBAAsB,GAAGhB,MAAM,CAACiB,OAAtC;;AACA,YAAMC,oCAAoC,GAAG,SAAvCA,oCAAuC,GAAM;AAC/ClB,UAAAA,MAAM,CAACiB,OAAP,GAAiBD,sBAAjB;AACAF,UAAAA,GAAG,CAACK,eAAJ,CAAoBN,GAApB;AACH,SAHD;;AAIAb,QAAAA,MAAM,CAACiB,OAAP,GAAiB,UAACG,OAAD,EAAUC,GAAV,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAwC;AACrD;AACA,cAAIH,GAAG,KAAKR,GAAR,IAAgBQ,GAAG,KAAKI,QAAQ,CAACC,IAAjB,IAAyBJ,MAAM,KAAK,CAApC,IAAyCC,KAAK,KAAK,CAAvE,EAA2E;AACvEL,YAAAA,oCAAoC;AACpCd,YAAAA,MAAM,CAACoB,KAAD,CAAN;AACA,mBAAO,KAAP;AACH;;AACD,cAAIR,sBAAsB,KAAK,IAA/B,EAAqC;AACjC,mBAAOA,sBAAsB,CAACI,OAAD,EAAUC,GAAV,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,CAA7B;AACH;AACJ,SAVD;;AAWAhB,QAAAA,MAAM,CAACS,OAAP,GAAiB,YAAM;AACnBC,UAAAA,oCAAoC;AACpCd,UAAAA,MAAM,CAAC,IAAIC,WAAJ,EAAD,CAAN;AACH,SAHD;;AAIAG,QAAAA,MAAM,CAACmB,MAAP,GAAgB,YAAM;AAClBT,UAAAA,oCAAoC;AACpCf,UAAAA,OAAO;AACV,SAHD;;AAIAK,QAAAA,MAAM,CAACa,GAAP,GAAaR,GAAb;AACAL,QAAAA,MAAM,CAACI,IAAP,GAAc,QAAd;AACAN,QAAAA,IAAI,CAACsB,WAAL,CAAiBpB,MAAjB;AACH;AACJ,KA1CkB,CAAZ;AAAA,GAAP;AA2CH,CA5CM","sourcesContent":["export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=/build/es2018/factories/evaluate-source.js.map"]},"metadata":{},"sourceType":"module"}