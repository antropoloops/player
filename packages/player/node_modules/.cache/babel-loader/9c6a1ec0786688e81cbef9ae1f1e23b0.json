{"ast":null,"code":"import { BACKUP_NATIVE_CONTEXT_STORE } from '../globals';\nexport const createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n  return nativeContext => {\n    /*\n     * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n     * backupNativeContext in that case.\n     */\n    if (nativeContext.state === 'closed' && nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n\n        if (backupNativeContext !== undefined) {\n          return backupNativeContext;\n        }\n\n        if (nativeOfflineAudioContextConstructor !== null) {\n          // @todo Copy the attached AudioWorkletProcessors and other settings.\n          const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n          BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n          return bckpNtveCntxt;\n        }\n      } else {\n        const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n\n        if (backupNativeContext !== undefined) {\n          return backupNativeContext;\n        } // @todo Copy the attached AudioWorkletProcessors and other settings.\n\n\n        const bckpNtveCntxt = new nativeAudioContextConstructor();\n        BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n        return bckpNtveCntxt;\n      }\n    }\n\n    return null;\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/get-backup-native-context.js"],"names":["BACKUP_NATIVE_CONTEXT_STORE","createGetBackupNativeContext","isNativeOfflineAudioContext","nativeAudioContextConstructor","nativeOfflineAudioContextConstructor","nativeContext","state","name","backupNativeContext","get","undefined","bckpNtveCntxt","set"],"mappings":"AAAA,SAASA,2BAAT,QAA4C,YAA5C;AACA,OAAO,MAAMC,4BAA4B,GAAG,CAACC,2BAAD,EAA8BC,6BAA9B,EAA6DC,oCAA7D,KAAsG;AAC9I,SAAQC,aAAD,IAAmB;AACtB;;;;AAIA,QAAIA,aAAa,CAACC,KAAd,KAAwB,QAAxB,IACGH,6BAA6B,KAAK,IADrC,IAEGA,6BAA6B,CAACI,IAA9B,KAAuC,oBAF9C,EAEoE;AAChE,UAAIL,2BAA2B,CAACG,aAAD,CAA/B,EAAgD;AAC5C,cAAMG,mBAAmB,GAAGR,2BAA2B,CAACS,GAA5B,CAAgCJ,aAAhC,CAA5B;;AACA,YAAIG,mBAAmB,KAAKE,SAA5B,EAAuC;AACnC,iBAAOF,mBAAP;AACH;;AACD,YAAIJ,oCAAoC,KAAK,IAA7C,EAAmD;AAC/C;AACA,gBAAMO,aAAa,GAAG,IAAIP,oCAAJ,CAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAA/C,CAAtB;AACAJ,UAAAA,2BAA2B,CAACY,GAA5B,CAAgCP,aAAhC,EAA+CM,aAA/C;AACA,iBAAOA,aAAP;AACH;AACJ,OAXD,MAYK;AACD,cAAMH,mBAAmB,GAAGR,2BAA2B,CAACS,GAA5B,CAAgCJ,aAAhC,CAA5B;;AACA,YAAIG,mBAAmB,KAAKE,SAA5B,EAAuC;AACnC,iBAAOF,mBAAP;AACH,SAJA,CAKD;;;AACA,cAAMG,aAAa,GAAG,IAAIR,6BAAJ,EAAtB;AACAH,QAAAA,2BAA2B,CAACY,GAA5B,CAAgCP,aAAhC,EAA+CM,aAA/C;AACA,eAAOA,aAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAhCD;AAiCH,CAlCM","sourcesContent":["import { BACKUP_NATIVE_CONTEXT_STORE } from '../globals';\nexport const createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        /*\n         * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n         * backupNativeContext in that case.\n         */\n        if (nativeContext.state === 'closed'\n            && nativeAudioContextConstructor !== null\n            && nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                if (nativeOfflineAudioContextConstructor !== null) {\n                    // @todo Copy the attached AudioWorkletProcessors and other settings.\n                    const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n                    BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                    return bckpNtveCntxt;\n                }\n            }\n            else {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                // @todo Copy the attached AudioWorkletProcessors and other settings.\n                const bckpNtveCntxt = new nativeAudioContextConstructor();\n                BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                return bckpNtveCntxt;\n            }\n        }\n        return null;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/get-backup-native-context.js.map"]},"metadata":{},"sourceType":"module"}