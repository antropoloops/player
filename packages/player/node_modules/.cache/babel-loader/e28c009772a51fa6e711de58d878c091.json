{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/shared/Header.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport { ArrowLeft } from \"./Icons\";\n\nconst getAudiosetPath = path => path && path !== \"index\" ? `/set/${path}` : `/`;\n/**\n * The header\n */\n\n\nexport const Header = ({\n  meta\n}) => meta && meta.path !== \"index\" ? React.createElement(BundleHeader, {\n  meta: meta,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}) : React.createElement(LogoHeader, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n});\nexport const BundleHeader = ({\n  meta\n}) => React.createElement(\"div\", {\n  className: \"Header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"navigation\",\n  to: getAudiosetPath(meta.parent_path),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(ArrowLeft, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, meta === null || meta === void 0 ? void 0 : meta.title)));\nexport const LogoHeader = () => React.createElement(\"div\", {\n  className: \"Header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"play-logo\",\n  src: \"/play-logo.png\",\n  alt: \"Play antropoloops\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}))));","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/shared/Header.tsx"],"names":["React","Link","ArrowLeft","getAudiosetPath","path","Header","meta","BundleHeader","parent_path","title","LogoHeader"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAMA,MAAMC,eAAe,GAAIC,IAAD,IACtBA,IAAI,IAAIA,IAAI,KAAK,OAAjB,GAA4B,QAAOA,IAAK,EAAxC,GAA6C,GAD/C;AAGA;;;;;AAGA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACpBA,IAAI,IAAIA,IAAI,CAACF,IAAL,KAAc,OAAtB,GAAgC,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAEE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhC,GAA+D,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD1D;AAQP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAC1B;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,YAAhB;AAA6B,EAAA,EAAE,EAAEH,eAAe,CAACG,IAAI,CAACE,WAAN,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKF,IAAL,aAAKA,IAAL,uBAAKA,IAAI,CAAEG,KAAX,CAFF,CADF,CADK;AASP,OAAO,MAAMC,UAAU,GAAG,MACxB;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,SAAS,EAAC,WADZ;AAEE,EAAA,GAAG,EAAC,gBAFN;AAGE,EAAA,GAAG,EAAC,mBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADK","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BundleMetadata } from \"../../audioset\";\nimport \"./Header.css\";\nimport { ArrowLeft } from \"./Icons\";\n\ninterface HeaderProps {\n  meta: BundleMetadata;\n}\n\nconst getAudiosetPath = (path: string) =>\n  path && path !== \"index\" ? `/set/${path}` : `/`;\n\n/**\n * The header\n */\nexport const Header = ({ meta }: Partial<HeaderProps>) =>\n  meta && meta.path !== \"index\" ? <BundleHeader meta={meta} /> : <LogoHeader />;\n\nexport interface BundleHeaderProps {\n  title: string;\n  path: string;\n}\n\nexport const BundleHeader = ({ meta }: HeaderProps) => (\n  <div className=\"Header\">\n    <Link className=\"navigation\" to={getAudiosetPath(meta.parent_path)}>\n      <ArrowLeft />\n      <h1>{meta?.title}</h1>\n    </Link>\n  </div>\n);\n\nexport const LogoHeader = () => (\n  <div className=\"Header\">\n    <div className=\"logo\">\n      <Link to=\"/\">\n        <img\n          className=\"play-logo\"\n          src=\"/play-logo.png\"\n          alt=\"Play antropoloops\"\n        />\n      </Link>\n    </div>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}