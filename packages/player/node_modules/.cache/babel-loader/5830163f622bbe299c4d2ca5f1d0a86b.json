{"ast":null,"code":"import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, wrapEventListener) => {\n  return class MinimalBaseAudioContext extends eventTargetConstructor {\n    constructor(_nativeContext, numberOfChannels) {\n      super(_nativeContext);\n      this._nativeContext = _nativeContext;\n      CONTEXT_STORE.set(this, _nativeContext); // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n\n      const sampleRate = _nativeContext.sampleRate;\n      Object.defineProperty(_nativeContext, 'sampleRate', {\n        get: () => sampleRate\n      });\n      this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n      this._listener = createAudioListener(this, _nativeContext);\n      this._onstatechange = null;\n    }\n\n    get currentTime() {\n      return this._nativeContext.currentTime;\n    }\n\n    get destination() {\n      return this._destination;\n    }\n\n    get listener() {\n      return this._listener;\n    }\n\n    get onstatechange() {\n      return this._onstatechange;\n    }\n\n    set onstatechange(value) {\n      const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n      this._nativeContext.onstatechange = wrappedListener;\n      const nativeOnStateChange = this._nativeContext.onstatechange;\n      this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n    }\n\n    get sampleRate() {\n      return this._nativeContext.sampleRate;\n    }\n\n    get state() {\n      return this._nativeContext.state;\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/minimal-base-audio-context-constructor.js"],"names":["CONTEXT_STORE","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","eventTargetConstructor","wrapEventListener","MinimalBaseAudioContext","constructor","_nativeContext","numberOfChannels","set","sampleRate","Object","defineProperty","get","_destination","_listener","_onstatechange","currentTime","destination","listener","onstatechange","value","wrappedListener","nativeOnStateChange","state"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,OAAO,MAAMC,wCAAwC,GAAG,CAACC,+BAAD,EAAkCC,mBAAlC,EAAuDC,sBAAvD,EAA+EC,iBAA/E,KAAqG;AACzJ,SAAO,MAAMC,uBAAN,SAAsCF,sBAAtC,CAA6D;AAChEG,IAAAA,WAAW,CAACC,cAAD,EAAiBC,gBAAjB,EAAmC;AAC1C,YAAMD,cAAN;AACA,WAAKA,cAAL,GAAsBA,cAAtB;AACAR,MAAAA,aAAa,CAACU,GAAd,CAAkB,IAAlB,EAAwBF,cAAxB,EAH0C,CAI1C;;AACA,YAAMG,UAAU,GAAGH,cAAc,CAACG,UAAlC;AACAC,MAAAA,MAAM,CAACC,cAAP,CAAsBL,cAAtB,EAAsC,YAAtC,EAAoD;AAChDM,QAAAA,GAAG,EAAE,MAAMH;AADqC,OAApD;AAGA,WAAKI,YAAL,GAAoB,IAAIb,+BAAJ,CAAoC,IAApC,EAA0CO,gBAA1C,CAApB;AACA,WAAKO,SAAL,GAAiBb,mBAAmB,CAAC,IAAD,EAAOK,cAAP,CAApC;AACA,WAAKS,cAAL,GAAsB,IAAtB;AACH;;AACD,QAAIC,WAAJ,GAAkB;AACd,aAAO,KAAKV,cAAL,CAAoBU,WAA3B;AACH;;AACD,QAAIC,WAAJ,GAAkB;AACd,aAAO,KAAKJ,YAAZ;AACH;;AACD,QAAIK,QAAJ,GAAe;AACX,aAAO,KAAKJ,SAAZ;AACH;;AACD,QAAIK,aAAJ,GAAoB;AAChB,aAAO,KAAKJ,cAAZ;AACH;;AACD,QAAII,aAAJ,CAAkBC,KAAlB,EAAyB;AACrB,YAAMC,eAAe,GAAI,OAAOD,KAAP,KAAiB,UAAlB,GAAgCjB,iBAAiB,CAAC,IAAD,EAAOiB,KAAP,CAAjD,GAAiE,IAAzF;AACA,WAAKd,cAAL,CAAoBa,aAApB,GAAoCE,eAApC;AACA,YAAMC,mBAAmB,GAAG,KAAKhB,cAAL,CAAoBa,aAAhD;AACA,WAAKJ,cAAL,GAAuBO,mBAAmB,KAAK,IAAxB,IAAgCA,mBAAmB,KAAKD,eAAzD,GAA4ED,KAA5E,GAAoFE,mBAA1G;AACH;;AACD,QAAIb,UAAJ,GAAiB;AACb,aAAO,KAAKH,cAAL,CAAoBG,UAA3B;AACH;;AACD,QAAIc,KAAJ,GAAY;AACR,aAAO,KAAKjB,cAAL,CAAoBiB,KAA3B;AACH;;AArC+D,GAApE;AAuCH,CAxCM","sourcesContent":["import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n            const sampleRate = _nativeContext.sampleRate;\n            Object.defineProperty(_nativeContext, 'sampleRate', {\n                get: () => sampleRate\n            });\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = (nativeOnStateChange !== null && nativeOnStateChange === wrappedListener) ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/minimal-base-audio-context-constructor.js.map"]},"metadata":{},"sourceType":"module"}