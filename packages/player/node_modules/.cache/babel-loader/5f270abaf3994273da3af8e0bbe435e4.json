{"ast":null,"code":"/**\n * Draw the panel (in PanelVisuals)\n */\nexport function drawPanel(container, width, height, imageUrl) {\n  container.append(\"svg:image\").attr(\"xlink:href\", imageUrl).attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", width).attr(\"height\", height).attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n}\nexport function createPanelProjector(containerWidth, containerHeight, realImageWidth, realImageHeight) {\n  const containerRatio = containerWidth / containerHeight;\n  const imageRatio = realImageWidth / realImageHeight;\n  return ([x, y]) => {\n    const xPos = containerRatio > imageRatio ? x / realImageWidth * containerHeight * imageRatio : x / realImageWidth * containerWidth;\n    const yPos = containerRatio > imageRatio ? y / realImageHeight * containerHeight : y / realImageHeight * (containerWidth / imageRatio);\n    return [xPos, yPos];\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/drawPanel.ts"],"names":["drawPanel","container","width","height","imageUrl","append","attr","createPanelProjector","containerWidth","containerHeight","realImageWidth","realImageHeight","containerRatio","imageRatio","x","y","xPos","yPos"],"mappings":"AAAA;;;AAGA,OAAO,SAASA,SAAT,CACLC,SADK,EAELC,KAFK,EAGLC,MAHK,EAILC,QAJK,EAKL;AACAH,EAAAA,SAAS,CACNI,MADH,CACU,WADV,EAEGC,IAFH,CAEQ,YAFR,EAEsBF,QAFtB,EAGGE,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGA,IAJH,CAIQ,GAJR,EAIa,CAJb,EAKGA,IALH,CAKQ,OALR,EAKiBJ,KALjB,EAMGI,IANH,CAMQ,QANR,EAMkBH,MANlB,EAOGG,IAPH,CAOQ,qBAPR,EAO+B,eAP/B;AAQD;AAED,OAAO,SAASC,oBAAT,CACLC,cADK,EAELC,eAFK,EAGLC,cAHK,EAILC,eAJK,EAKL;AACA,QAAMC,cAAc,GAAGJ,cAAc,GAAGC,eAAxC;AACA,QAAMI,UAAU,GAAGH,cAAc,GAAGC,eAApC;AACA,SAAO,CAAC,CAACG,CAAD,EAAIC,CAAJ,CAAD,KAA8B;AACnC,UAAMC,IAAI,GACRJ,cAAc,GAAGC,UAAjB,GACKC,CAAC,GAAGJ,cAAL,GAAuBD,eAAvB,GAAyCI,UAD7C,GAEKC,CAAC,GAAGJ,cAAL,GAAuBF,cAH7B;AAKA,UAAMS,IAAI,GACRL,cAAc,GAAGC,UAAjB,GACKE,CAAC,GAAGJ,eAAL,GAAwBF,eAD5B,GAEKM,CAAC,GAAGJ,eAAL,IAAyBH,cAAc,GAAGK,UAA1C,CAHN;AAIA,WAAO,CAACG,IAAD,EAAOC,IAAP,CAAP;AACD,GAXD;AAYD","sourcesContent":["/**\n * Draw the panel (in PanelVisuals)\n */\nexport function drawPanel(\n  container: any,\n  width: number,\n  height: number,\n  imageUrl: string,\n) {\n  container\n    .append(\"svg:image\")\n    .attr(\"xlink:href\", imageUrl)\n    .attr(\"x\", 0)\n    .attr(\"y\", 0)\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\");\n}\n\nexport function createPanelProjector(\n  containerWidth: number,\n  containerHeight: number,\n  realImageWidth: number,\n  realImageHeight: number,\n) {\n  const containerRatio = containerWidth / containerHeight;\n  const imageRatio = realImageWidth / realImageHeight;\n  return ([x, y]: [number, number]) => {\n    const xPos =\n      containerRatio > imageRatio\n        ? (x / realImageWidth) * containerHeight * imageRatio\n        : (x / realImageWidth) * containerWidth;\n\n    const yPos =\n      containerRatio > imageRatio\n        ? (y / realImageHeight) * containerHeight\n        : (y / realImageHeight) * (containerWidth / imageRatio);\n    return [xPos, yPos];\n  };\n}\n"]},"metadata":{},"sourceType":"module"}