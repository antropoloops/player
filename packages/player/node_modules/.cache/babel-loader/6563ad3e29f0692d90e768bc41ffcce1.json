{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nexport var createAudioDestinationNodeRenderer = function createAudioDestinationNodeRenderer(renderInputsOfAudioNode) {\n  var nativeAudioDestinationNodePromise = null;\n\n  var createAudioDestinationNode = function createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace) {\n    var nativeAudioDestinationNode;\n    return _regeneratorRuntime.async(function createAudioDestinationNode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace));\n\n          case 3:\n            return _context.abrupt(\"return\", nativeAudioDestinationNode);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return {\n    render: function render(proxy, nativeOfflineAudioContext, trace) {\n      if (nativeAudioDestinationNodePromise === null) {\n        nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n      }\n\n      return nativeAudioDestinationNodePromise;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-renderer-factory.js"],"names":["createAudioDestinationNodeRenderer","renderInputsOfAudioNode","nativeAudioDestinationNodePromise","createAudioDestinationNode","proxy","nativeOfflineAudioContext","trace","nativeAudioDestinationNode","destination","render"],"mappings":";AAAA,OAAO,IAAMA,kCAAkC,GAAG,SAArCA,kCAAqC,CAACC,uBAAD,EAA6B;AAC3E,MAAIC,iCAAiC,GAAG,IAAxC;;AACA,MAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAOC,KAAP,EAAcC,yBAAd,EAAyCC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AACzBC,YAAAA,0BADyB,GACIF,yBAAyB,CAACG,WAD9B;AAAA;AAAA,6CAEzBP,uBAAuB,CAACG,KAAD,EAAQC,yBAAR,EAAmCE,0BAAnC,EAA+DD,KAA/D,CAFE;;AAAA;AAAA,6CAGxBC,0BAHwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAKA,SAAO;AACHE,IAAAA,MADG,kBACIL,KADJ,EACWC,yBADX,EACsCC,KADtC,EAC6C;AAC5C,UAAIJ,iCAAiC,KAAK,IAA1C,EAAgD;AAC5CA,QAAAA,iCAAiC,GAAGC,0BAA0B,CAACC,KAAD,EAAQC,yBAAR,EAAmCC,KAAnC,CAA9D;AACH;;AACD,aAAOJ,iCAAP;AACH;AANE,GAAP;AAQH,CAfM","sourcesContent":["export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-destination-node-renderer-factory.js.map"]},"metadata":{},"sourceType":"module"}