{"ast":null,"code":"import { geoProjectionMutator as projectionMutator, geoCircle } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin } from \"./math.js\";\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [K * cosPhi0 * sin(lambda), (abs(lambda) > halfPi ? K : -K) * ( // rotate for back hemisphere\n    sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n} // Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\n\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n  return function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [atan2(y, x * cosPhi0 - z * sinPhi0), asin(z * cosPhi0 + x * sinPhi0)];\n  };\n}\n\nexport default function () {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  }; // Temporary hack; see hammerRetroazimuthalRotation.\n\n\n  p.rotate = function (_) {\n    if (!arguments.length) return _ = rotate_.call(p), _[1] += phi0 * degrees, _;\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function (stream) {\n    stream = stream_(stream);\n\n    stream.sphere = function () {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n\n      while (++i < n) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n\n      while (--i >= 0) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n\n    return stream;\n  };\n\n  return p.scale(79.4187).parallel(45).clipAngle(180 - 1e-3);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/hammerRetroazimuthal.js"],"names":["geoProjectionMutator","projectionMutator","geoCircle","abs","acos","asin","atan2","cos","degrees","epsilon","halfPi","radians","sqrt","sin","hammerRetroazimuthalRaw","phi0","sinPhi0","cosPhi0","rotate","hammerRetroazimuthalRotation","invert","forward","lambda","phi","p","sinPhi","cosPhi","cosLambda","z","sinz","K","x","y","rho","cosz","a","b","c","d","m","rotate_","stream_","stream","circle","parallel","_","arguments","length","r","call","center","sphere","polygonStart","ring","radius","coordinates","n","i","lineStart","point","lineEnd","polygonEnd","scale","clipAngle"],"mappings":"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","sourcesContent":["import {geoProjectionMutator as projectionMutator, geoCircle} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin} from \"./math.js\";\n\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [\n      K * cosPhi0 * sin(lambda),\n      (abs(lambda) > halfPi ? K : -K) // rotate for back hemisphere\n        * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n}\n\n// Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n\n  return function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [\n      atan2(y, x * cosPhi0 - z * sinPhi0),\n      asin(z * cosPhi0 + x * sinPhi0)\n    ];\n  };\n}\n\nexport default function() {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  };\n\n  // Temporary hack; see hammerRetroazimuthalRotation.\n  p.rotate = function(_) {\n    if (!arguments.length) return (_ = rotate_.call(p), _[1] += phi0 * degrees, _);\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function(stream) {\n    stream = stream_(stream);\n    stream.sphere = function() {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n      while (++i < n) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n      while (--i >= 0) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n    return stream;\n  };\n\n  return p\n      .scale(79.4187)\n      .parallel(45)\n      .clipAngle(180 - 1e-3);\n}\n"]},"metadata":{},"sourceType":"module"}