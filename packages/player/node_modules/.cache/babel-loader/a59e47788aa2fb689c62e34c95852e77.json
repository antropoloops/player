{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n  return (nativeContext, options) => {\n    // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n    if (nativeContext.createConstantSource === undefined) {\n      return createNativeConstantSourceNodeFaker(nativeContext, options);\n    }\n\n    const nativeConstantSourceNode = createNativeAudioNode(nativeContext, ntvCntxt => {\n      return ntvCntxt.createConstantSource();\n    });\n    assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset'); // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n    } // Bug #44: Only Firefox does throw a RangeError yet.\n\n\n    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n      wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n    }\n\n    return nativeConstantSourceNode;\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-factory.js"],"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeConstantSourceNodeFactory","cacheTestResult","createNativeAudioNode","createNativeConstantSourceNodeFaker","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","nativeContext","options","createConstantSource","undefined","nativeConstantSourceNode","ntvCntxt"],"mappings":"AAAA,SAASA,oCAAT,QAAqD,uDAArD;AACA,SAASC,4BAAT,QAA6C,6CAA7C;AACA,SAASC,yDAAT,QAA0E,8EAA1E;AACA,SAASC,wDAAT,QAAyE,6EAAzE;AACA,OAAO,MAAMC,qCAAqC,GAAG,CAACC,eAAD,EAAkBC,qBAAlB,EAAyCC,mCAAzC,EAA8EC,gEAA9E,EAAgJC,+DAAhJ,KAAoN;AACrQ,SAAO,CAACC,aAAD,EAAgBC,OAAhB,KAA4B;AAC/B;AACA,QAAID,aAAa,CAACE,oBAAd,KAAuCC,SAA3C,EAAsD;AAClD,aAAON,mCAAmC,CAACG,aAAD,EAAgBC,OAAhB,CAA1C;AACH;;AACD,UAAMG,wBAAwB,GAAGR,qBAAqB,CAACI,aAAD,EAAiBK,QAAD,IAAc;AAChF,aAAOA,QAAQ,CAACH,oBAAT,EAAP;AACH,KAFqD,CAAtD;AAGAX,IAAAA,4BAA4B,CAACa,wBAAD,EAA2BH,OAA3B,CAA5B;AACAX,IAAAA,oCAAoC,CAACc,wBAAD,EAA2BH,OAA3B,EAAoC,QAApC,CAApC,CAT+B,CAU/B;;AACA,QAAI,CAACN,eAAe,CAACG,gEAAD,EAAmE,MAAMA,gEAAgE,CAACE,aAAD,CAAzI,CAApB,EAA+K;AAC3KR,MAAAA,yDAAyD,CAACY,wBAAD,CAAzD;AACH,KAb8B,CAc/B;;;AACA,QAAI,CAACT,eAAe,CAACI,+DAAD,EAAkE,MAAMA,+DAA+D,CAACC,aAAD,CAAvI,CAApB,EAA6K;AACzKP,MAAAA,wDAAwD,CAACW,wBAAD,CAAxD;AACH;;AACD,WAAOA,wBAAP;AACH,GAnBD;AAoBH,CArBM","sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createConstantSource();\n        });\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-constant-source-node-factory.js.map"]},"metadata":{},"sourceType":"module"}