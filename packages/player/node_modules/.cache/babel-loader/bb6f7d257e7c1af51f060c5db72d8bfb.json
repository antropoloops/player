{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  width: 50%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}/** @jsx jsx */import{css,jsx}from\"@emotion/core\";import{Markdown}from\"../shared/Markdown\";export var OpenClip=function OpenClip(_ref){var ref=_ref.ref,clip=_ref.clip,onClick=_ref.onClick;return jsx(\"div\",{ref:ref,css:clipCss,className:\"Clip\",onClick:onClick},jsx(\"div\",null,jsx(\"img\",{css:coverCss,alt:clip.title,src:clip.coverUrl}),jsx(\"img\",{css:coverCss,alt:clip.title,src:clip.coverUrl})),jsx(\"div\",{className:\"meta\"},jsx(\"h3\",{className:\"title\"},clip.title),jsx(\"p\",null,clip.artist),jsx(Markdown,{markdown:clip.readme})));};var clipCss=css(_templateObject());var coverCss=css(_templateObject2());","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/OpenClip.tsx"],"names":["css","jsx","Markdown","OpenClip","ref","clip","onClick","clipCss","coverCss","title","coverUrl","artist","readme"],"mappings":"6fAAA,eACA,OAASA,GAAT,CAAcC,GAAd,KAAyB,eAAzB,CACA,OAASC,QAAT,KAAyB,oBAAzB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiC,IAA9BC,CAAAA,GAA8B,MAA9BA,GAA8B,CAAzBC,IAAyB,MAAzBA,IAAyB,CAAnBC,OAAmB,MAAnBA,OAAmB,CACvD,MACE,YAAK,GAAG,CAAEF,GAAV,CAAe,GAAG,CAAEG,OAApB,CAA6B,SAAS,CAAC,MAAvC,CAA8C,OAAO,CAAED,OAAvD,EACE,eACE,WAAK,GAAG,CAAEE,QAAV,CAAoB,GAAG,CAAEH,IAAI,CAACI,KAA9B,CAAqC,GAAG,CAAEJ,IAAI,CAACK,QAA/C,EADF,CAEE,WAAK,GAAG,CAAEF,QAAV,CAAoB,GAAG,CAAEH,IAAI,CAACI,KAA9B,CAAqC,GAAG,CAAEJ,IAAI,CAACK,QAA/C,EAFF,CADF,CAKE,WAAK,SAAS,CAAC,MAAf,EACE,UAAI,SAAS,CAAC,OAAd,EAAuBL,IAAI,CAACI,KAA5B,CADF,CAEE,aAAIJ,IAAI,CAACM,MAAT,CAFF,CAGE,IAAC,QAAD,EAAU,QAAQ,CAAEN,IAAI,CAACO,MAAzB,EAHF,CALF,CADF,CAaD,CAdM,CAgBP,GAAML,CAAAA,OAAO,CAAGP,GAAH,mBAAb,CAKA,GAAMQ,CAAAA,QAAQ,CAAGR,GAAH,oBAAd","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport { Markdown } from \"../shared/Markdown\";\n\nexport const OpenClip = ({ ref, clip, onClick }: any) => {\n  return (\n    <div ref={ref} css={clipCss} className=\"Clip\" onClick={onClick}>\n      <div>\n        <img css={coverCss} alt={clip.title} src={clip.coverUrl} />\n        <img css={coverCss} alt={clip.title} src={clip.coverUrl} />\n      </div>\n      <div className=\"meta\">\n        <h3 className=\"title\">{clip.title}</h3>\n        <p>{clip.artist}</p>\n        <Markdown markdown={clip.readme} />\n      </div>\n    </div>\n  );\n};\n\nconst clipCss = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst coverCss = css`\n  width: 50%;\n`;\n"]},"metadata":{},"sourceType":"module"}