{"ast":null,"code":"import React from\"react\";import{isAudioset}from\"../../audioset\";import{Player}from\"../components/Player\";import{Project}from\"../components/Project\";import useAnalytics from\"../hooks/useAnalytics\";import{useRemoteBundle}from\"../hooks/useRemoteBundle\";import{Loading}from\"../shared/Loading\";import NotFound from\"./NotFound\";export var Audioset=function Audioset(_ref){var idOrUrl=_ref.idOrUrl;useAnalytics();var _useRemoteBundle=useRemoteBundle(idOrUrl),bundle=_useRemoteBundle.bundle,loading=_useRemoteBundle.loading;if(loading){return React.createElement(Loading,null);}else if(bundle){return isAudioset(bundle)?React.createElement(Player,{audioset:bundle}):React.createElement(Project,{project:bundle});}else{return React.createElement(NotFound,null);}};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/screens/Audioset.tsx"],"names":["React","isAudioset","Player","Project","useAnalytics","useRemoteBundle","Loading","NotFound","Audioset","idOrUrl","bundle","loading"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAAmD,gBAAnD,CACA,OAASC,MAAT,KAAuB,sBAAvB,CACA,OAASC,OAAT,KAAwB,uBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,OAASC,eAAT,KAAgC,0BAAhC,CACA,OAASC,OAAT,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAKA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwB,IAArBC,CAAAA,OAAqB,MAArBA,OAAqB,CAC9CL,YAAY,GADkC,qBAElBC,eAAe,CAACI,OAAD,CAFG,CAEtCC,MAFsC,kBAEtCA,MAFsC,CAE9BC,OAF8B,kBAE9BA,OAF8B,CAG9C,GAAIA,OAAJ,CAAa,CACX,MAAO,qBAAC,OAAD,MAAP,CACD,CAFD,IAEO,IAAID,MAAJ,CAAY,CACjB,MAAOT,CAAAA,UAAU,CAACS,MAAD,CAAV,CACL,oBAAC,MAAD,EAAQ,QAAQ,CAAEA,MAAlB,EADK,CAGL,oBAAC,OAAD,EAAS,OAAO,CAAEA,MAAlB,EAHF,CAKD,CANM,IAMA,CACL,MAAO,qBAAC,QAAD,MAAP,CACD,CACF,CAdM","sourcesContent":["import React from \"react\";\nimport { isAudioset, Project as ProjectData } from \"../../audioset\";\nimport { Player } from \"../components/Player\";\nimport { Project } from \"../components/Project\";\nimport useAnalytics from \"../hooks/useAnalytics\";\nimport { useRemoteBundle } from \"../hooks/useRemoteBundle\";\nimport { Loading } from \"../shared/Loading\";\nimport NotFound from \"./NotFound\";\n\ntype Props = {\n  idOrUrl: string;\n};\nexport const Audioset = ({ idOrUrl }: Props) => {\n  useAnalytics();\n  const { bundle, loading } = useRemoteBundle(idOrUrl);\n  if (loading) {\n    return <Loading />;\n  } else if (bundle) {\n    return isAudioset(bundle) ? (\n      <Player audioset={bundle} />\n    ) : (\n      <Project project={bundle as ProjectData} />\n    );\n  } else {\n    return <NotFound />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}