{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/components/Project/Project.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDeviceType } from \"../../hooks/useDeviceType\";\nimport { Header } from \"../../shared/Header\";\nimport { Info } from \"../../shared/Icons\";\nimport { Markdown } from \"../../shared/Markdown\";\nimport { Scroll } from \"../../shared/Scroll\";\nimport { Readme } from \"../Player/Readme\";\nimport { Item } from \"./Item\";\nimport \"./Project.css\";\n\n/**\n * A Project is an collection of Audiosets. This view\n * displays a browser to select on of it.\n */\nexport const Project = ({\n  project\n}) => {\n  const references = project.audiosets || [];\n\n  const _useDeviceType = useDeviceType(),\n        isDesktop = _useDeviceType.isDesktop,\n        isMobile = _useDeviceType.isMobile;\n\n  return React.createElement(\"div\", {\n    className: \"App Project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Header, {\n    meta: project.meta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"responsive\",\n    alt: project.meta.title,\n    src: project.meta.logo_url,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), isMobile && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Readme, {\n    content: project.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"Audiosets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, references.map(reference => React.createElement(Item, {\n    key: reference.id,\n    reference: reference,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))))), React.createElement(\"footer\", {\n    className: \"Footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))), isDesktop && React.createElement(\"div\", {\n    className: \"visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    markdown: project.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/components/Project/Project.tsx"],"names":["React","Link","useDeviceType","Header","Info","Markdown","Scroll","Readme","Item","Project","project","references","audiosets","isDesktop","isMobile","meta","title","logo_url","width","readme","map","reference","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,eAAP;;AAMA;;;;AAIA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AACpD,QAAMC,UAAU,GAAGD,OAAO,CAACE,SAAR,IAAqB,EAAxC;;AADoD,yBAEpBV,aAAa,EAFO;AAAA,QAE5CW,SAF4C,kBAE5CA,SAF4C;AAAA,QAEjCC,QAFiC,kBAEjCA,QAFiC;;AAIpD,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEJ,OAAO,CAACK,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,GAAG,EAAEL,OAAO,CAACK,IAAR,CAAaC,KAFpB;AAGE,IAAA,GAAG,EAAEN,OAAO,CAACK,IAAR,CAAaE,QAHpB;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGJ,QAAQ,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,OAAO,CAACK,IAAR,CAAaI,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARJ,EAYE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,UAAU,CAACS,GAAX,CAAeC,SAAS,IACvB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,SAAS,CAACC,EAArB;AAAyB,IAAA,SAAS,EAAED,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAZF,CADF,CAFF,EAsBE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAtBF,EA6BGR,SAAS,IACR;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,OAAO,CAACK,IAAR,CAAaI,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9BJ,CADF;AAqCD,CAzCM","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Project as ProjectData } from \"../../../audioset\";\nimport { useDeviceType } from \"../../hooks/useDeviceType\";\nimport { Header } from \"../../shared/Header\";\nimport { Info } from \"../../shared/Icons\";\nimport { Markdown } from \"../../shared/Markdown\";\nimport { Scroll } from \"../../shared/Scroll\";\nimport { Readme } from \"../Player/Readme\";\nimport { Item } from \"./Item\";\nimport \"./Project.css\";\n\ninterface ProjectProps {\n  project: ProjectData;\n}\n\n/**\n * A Project is an collection of Audiosets. This view\n * displays a browser to select on of it.\n */\nexport const Project = ({ project }: ProjectProps) => {\n  const references = project.audiosets || [];\n  const { isDesktop, isMobile } = useDeviceType();\n\n  return (\n    <div className=\"App Project\">\n      <Header meta={project.meta} />\n      <Scroll>\n        <div className=\"content\">\n          <img\n            className=\"responsive\"\n            alt={project.meta.title}\n            src={project.meta.logo_url}\n            style={{ width: \"100%\" }}\n          />\n          {isMobile && (\n            <div>\n              <Readme content={project.meta.readme} />\n            </div>\n          )}\n          <ul className=\"Audiosets\">\n            {references.map(reference => (\n              <Item key={reference.id} reference={reference} />\n            ))}\n          </ul>\n        </div>\n      </Scroll>\n      <footer className=\"Footer\">\n        <div className=\"left\">\n          <Link to=\"/about\">\n            <Info />\n          </Link>\n        </div>\n      </footer>\n      {isDesktop && (\n        <div className=\"visuals\">\n          <Markdown markdown={project.meta.readme} />\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}