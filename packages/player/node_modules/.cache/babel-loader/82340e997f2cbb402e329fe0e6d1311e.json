{"ast":null,"code":"// https://github.com/scijs/integrate-adaptive-simpson\n// This algorithm adapted from pseudocode in:\n// http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf\nfunction adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n  if (state.nanEncountered) {\n    return NaN;\n  }\n\n  var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n  h = b - a;\n  f1 = f(a + h * 0.25);\n  f2 = f(b - h * 0.25); // Simple check for NaN:\n\n  if (isNaN(f1)) {\n    state.nanEncountered = true;\n    return;\n  } // Simple check for NaN:\n\n\n  if (isNaN(f2)) {\n    state.nanEncountered = true;\n    return;\n  }\n\n  sl = h * (fa + 4 * f1 + fm) / 12;\n  sr = h * (fm + 4 * f2 + fb) / 12;\n  s2 = sl + sr;\n  err = (s2 - V0) / 15;\n\n  if (depth > maxdepth) {\n    state.maxDepthCount++;\n    return s2 + err;\n  } else if (Math.abs(err) < tol) {\n    return s2 + err;\n  } else {\n    m = a + h * 0.5;\n    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V1)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V2)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    return V1 + V2;\n  }\n}\n\nexport function integrate(f, a, b, tol, maxdepth) {\n  var state = {\n    maxDepthCount: 0,\n    nanEncountered: false\n  };\n\n  if (tol === undefined) {\n    tol = 1e-8;\n  }\n\n  if (maxdepth === undefined) {\n    maxdepth = 20;\n  }\n\n  var fa = f(a);\n  var fm = f(0.5 * (a + b));\n  var fb = f(b);\n  var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n  var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n  /*\n    if (state.maxDepthCount > 0 && console && console.warn) {\n      console.warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n    }\n  \n    if (state.nanEncountered && console && console.warn) {\n      console.warn('integrate-adaptive-simpson: Warning: NaN encountered. Halting early.');\n    }\n  */\n\n  return result;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/integrate.js"],"names":["adsimp","f","a","b","fa","fm","fb","V0","tol","maxdepth","depth","state","nanEncountered","NaN","h","f1","f2","sl","sr","s2","m","V1","V2","err","isNaN","maxDepthCount","Math","abs","integrate","undefined","result"],"mappings":"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","sourcesContent":["// https://github.com/scijs/integrate-adaptive-simpson\n\n// This algorithm adapted from pseudocode in:\n// http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf\nfunction adsimp (f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n  if (state.nanEncountered) {\n    return NaN;\n  }\n\n  var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n\n  h = b - a;\n  f1 = f(a + h * 0.25);\n  f2 = f(b - h * 0.25);\n\n  // Simple check for NaN:\n  if (isNaN(f1)) {\n    state.nanEncountered = true;\n    return;\n  }\n\n  // Simple check for NaN:\n  if (isNaN(f2)) {\n    state.nanEncountered = true;\n    return;\n  }\n\n  sl = h * (fa + 4 * f1 + fm) / 12;\n  sr = h * (fm + 4 * f2 + fb) / 12;\n  s2 = sl + sr;\n  err = (s2 - V0) / 15;\n\n  if (depth > maxdepth) {\n    state.maxDepthCount++;\n    return s2 + err;\n  } else if (Math.abs(err) < tol) {\n    return s2 + err;\n  } else {\n    m = a + h * 0.5;\n\n    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V1)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V2)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    return V1 + V2;\n  }\n}\n\nexport function integrate (f, a, b, tol, maxdepth) {\n  var state = {\n    maxDepthCount: 0,\n    nanEncountered: false\n  };\n\n  if (tol === undefined) {\n    tol = 1e-8;\n  }\n  if (maxdepth === undefined) {\n    maxdepth = 20;\n  }\n\n  var fa = f(a);\n  var fm = f(0.5 * (a + b));\n  var fb = f(b);\n\n  var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n\n  var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n/*\n  if (state.maxDepthCount > 0 && console && console.warn) {\n    console.warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n  }\n\n  if (state.nanEncountered && console && console.warn) {\n    console.warn('integrate-adaptive-simpson: Warning: NaN encountered. Halting early.');\n  }\n*/\n\n  return result;\n}"]},"metadata":{},"sourceType":"module"}