{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math.js\";\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A), pi * y1];\n}\n\nvanDerGrinten3Raw.invert = function (x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0, halfPi * sin(2 * atan(y1))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten3Raw).scale(79.4183);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/vanDerGrinten3.js"],"names":["geoProjection","projection","abs","asin","atan","cos","epsilon","halfPi","pi","sign","sin","sqrt","tan","vanDerGrinten3Raw","lambda","phi","sinTheta","theta","A","y1","invert","x","y","scale"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAzB,QAA0C,QAA1C;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,OAA9B,EAAuCC,MAAvC,EAA+CC,EAA/C,EAAmDC,IAAnD,EAAyDC,GAAzD,EAA8DC,IAA9D,EAAoEC,GAApE,QAA8E,WAA9E;AAEA,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,GAAnC,EAAwC;AAC7C,MAAIb,GAAG,CAACa,GAAD,CAAH,GAAWT,OAAf,EAAwB,OAAO,CAACQ,MAAD,EAAS,CAAT,CAAP;AACxB,MAAIE,QAAQ,GAAGD,GAAG,GAAGR,MAArB;AAAA,MACIU,KAAK,GAAGd,IAAI,CAACa,QAAD,CADhB;AAEA,MAAId,GAAG,CAACY,MAAD,CAAH,GAAcR,OAAd,IAAyBJ,GAAG,CAACA,GAAG,CAACa,GAAD,CAAH,GAAWR,MAAZ,CAAH,GAAyBD,OAAtD,EAA+D,OAAO,CAAC,CAAD,EAAIE,EAAE,GAAGI,GAAG,CAACK,KAAK,GAAG,CAAT,CAAZ,CAAP;AAC/D,MAAIC,CAAC,GAAG,CAACV,EAAE,GAAGM,MAAL,GAAcA,MAAM,GAAGN,EAAxB,IAA8B,CAAtC;AAAA,MACIW,EAAE,GAAGH,QAAQ,IAAI,IAAIX,GAAG,CAACY,KAAD,CAAX,CADjB;AAEA,SAAO,CACLT,EAAE,IAAIC,IAAI,CAACK,MAAD,CAAJ,GAAeH,IAAI,CAACO,CAAC,GAAGA,CAAJ,GAAQ,CAAR,GAAYC,EAAE,GAAGA,EAAlB,CAAnB,GAA2CD,CAA/C,CADG,EAELV,EAAE,GAAGW,EAFA,CAAP;AAID;;AAEDN,iBAAiB,CAACO,MAAlB,GAA2B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACxC,MAAI,CAACA,CAAL,EAAQ,OAAO,CAACD,CAAD,EAAI,CAAJ,CAAP;AACR,MAAIF,EAAE,GAAGG,CAAC,GAAGd,EAAb;AAAA,MACIU,CAAC,GAAG,CAACV,EAAE,GAAGA,EAAL,IAAW,IAAIW,EAAE,GAAGA,EAApB,IAA0BE,CAAC,GAAGA,CAA/B,KAAqC,IAAIb,EAAJ,GAASa,CAA9C,CADR;AAEA,SAAO,CACLA,CAAC,GAAGb,EAAE,IAAIC,IAAI,CAACY,CAAD,CAAJ,GAAUV,IAAI,CAACO,CAAC,GAAGA,CAAJ,GAAQ,CAAT,CAAd,GAA4BA,CAAhC,CAAL,GAA0C,CADtC,EAELX,MAAM,GAAGG,GAAG,CAAC,IAAIN,IAAI,CAACe,EAAD,CAAT,CAFP,CAAP;AAID,CARD;;AAUA,eAAe,YAAW;AACxB,SAAOlB,UAAU,CAACY,iBAAD,CAAV,CACAU,KADA,CACM,OADN,CAAP;AAED","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math.js\";\n\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [\n    pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A),\n    pi * y1\n  ];\n}\n\nvanDerGrinten3Raw.invert = function(x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [\n    x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0,\n    halfPi * sin(2 * atan(y1))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten3Raw)\n        .scale(79.4183);\n}\n"]},"metadata":{},"sourceType":"module"}