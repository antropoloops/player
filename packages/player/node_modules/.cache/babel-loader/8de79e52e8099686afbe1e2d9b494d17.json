{"ast":null,"code":"import _slicedToArray from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from\"react\";import{hasKeyboard}from\"../../../../lib/hasKeyboard\";import\"./ClipClosed.css\";export var ClosedClip=function ClosedClip(_ref){var clip=_ref.clip,control=_ref.control;var _useReducer=useReducer(function(x){return!x;},false),_useReducer2=_slicedToArray(_useReducer,2),isMapKeyboard=_useReducer2[0],toggleMapKeyboard=_useReducer2[1];var keyboard=control&&control.keyboard;var clipKey=keyboard&&keyboard.getKey(clip.id);var startClip=function startClip(){return control&&control.startClip(clip.id,0);};function handleKeyToggle(){if(!keyboard){// no control\n}else if(isMapKeyboard){keyboard.stopMapMode();}else{keyboard.startMapMode(clip.id,function(newKey){toggleMapKeyboard();});}toggleMapKeyboard();}return/*#__PURE__*/React.createElement(\"div\",{className:\"Clip closed\",id:\"clip-\".concat(clip.id),style:{backgroundColor:clip.color}},/*#__PURE__*/React.createElement(\"div\",{className:\"cover\"},/*#__PURE__*/React.createElement(\"img\",{alt:clip.title,src:clip.coverUrl,onClick:startClip})),/*#__PURE__*/React.createElement(\"div\",{className:\"meta noselect\",onClick:startClip},/*#__PURE__*/React.createElement(\"h3\",{className:\"title\"},clip.title)),hasKeyboard()&&/*#__PURE__*/React.createElement(\"div\",{className:\"keyboard noselect\"},/*#__PURE__*/React.createElement(\"span\",{className:isMapKeyboard?\"active\":\"inactive\",onClick:handleKeyToggle},clipKey)));};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/ui/components/Player/Controller/Clip/ClipClosed.tsx"],"names":["React","useReducer","hasKeyboard","ClosedClip","clip","control","x","isMapKeyboard","toggleMapKeyboard","keyboard","clipKey","getKey","id","startClip","handleKeyToggle","stopMapMode","startMapMode","newKey","backgroundColor","color","title","coverUrl"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,WAAT,KAA4B,6BAA5B,CACA,MAAO,kBAAP,CAGA,MAAO,IAAMC,CAAAA,UAA+B,CAAG,QAAlCA,CAAAA,UAAkC,MAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,iBACzBJ,UAAU,CAAC,SAAAK,CAAC,QAAI,CAACA,CAAL,EAAF,CAAU,KAAV,CADe,4CAC7DC,aAD6D,iBAC9CC,iBAD8C,iBAGpE,GAAMC,CAAAA,QAAQ,CAAGJ,OAAO,EAAIA,OAAO,CAACI,QAApC,CACA,GAAMC,CAAAA,OAAO,CAAGD,QAAQ,EAAIA,QAAQ,CAACE,MAAT,CAAgBP,IAAI,CAACQ,EAArB,CAA5B,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMR,CAAAA,OAAO,EAAIA,OAAO,CAACQ,SAAR,CAAkBT,IAAI,CAACQ,EAAvB,CAA2B,CAA3B,CAAjB,EAAlB,CAEA,QAASE,CAAAA,eAAT,EAA2B,CACzB,GAAI,CAACL,QAAL,CAAe,CACb;AACD,CAFD,IAEO,IAAIF,aAAJ,CAAmB,CACxBE,QAAQ,CAACM,WAAT,GACD,CAFM,IAEA,CACLN,QAAQ,CAACO,YAAT,CAAsBZ,IAAI,CAACQ,EAA3B,CAA+B,SAACK,MAAD,CAAoB,CACjDT,iBAAiB,GAClB,CAFD,EAGD,CACDA,iBAAiB,GAClB,CAED,mBACE,2BACE,SAAS,CAAC,aADZ,CAEE,EAAE,gBAAUJ,IAAI,CAACQ,EAAf,CAFJ,CAGE,KAAK,CAAE,CAAEM,eAAe,CAAEd,IAAI,CAACe,KAAxB,CAHT,eAKE,2BAAK,SAAS,CAAC,OAAf,eACE,2BAAK,GAAG,CAAEf,IAAI,CAACgB,KAAf,CAAsB,GAAG,CAAEhB,IAAI,CAACiB,QAAhC,CAA0C,OAAO,CAAER,SAAnD,EADF,CALF,cAQE,2BAAK,SAAS,CAAC,eAAf,CAA+B,OAAO,CAAEA,SAAxC,eACE,0BAAI,SAAS,CAAC,OAAd,EAAuBT,IAAI,CAACgB,KAA5B,CADF,CARF,CAWGlB,WAAW,iBACV,2BAAK,SAAS,CAAC,mBAAf,eACE,4BACE,SAAS,CAAEK,aAAa,CAAG,QAAH,CAAc,UADxC,CAEE,OAAO,CAAEO,eAFX,EAIGJ,OAJH,CADF,CAZJ,CADF,CAwBD,CA5CM","sourcesContent":["import React, { useReducer } from \"react\";\nimport { hasKeyboard } from \"../../../../lib/hasKeyboard\";\nimport \"./ClipClosed.css\";\nimport { ClipProps } from \"./index\";\n\nexport const ClosedClip: React.FC<ClipProps> = ({ clip, control }) => {\n  const [isMapKeyboard, toggleMapKeyboard] = useReducer(x => !x, false);\n\n  const keyboard = control && control.keyboard;\n  const clipKey = keyboard && keyboard.getKey(clip.id);\n  const startClip = () => control && control.startClip(clip.id, 0);\n\n  function handleKeyToggle() {\n    if (!keyboard) {\n      // no control\n    } else if (isMapKeyboard) {\n      keyboard.stopMapMode();\n    } else {\n      keyboard.startMapMode(clip.id, (newKey: string) => {\n        toggleMapKeyboard();\n      });\n    }\n    toggleMapKeyboard();\n  }\n\n  return (\n    <div\n      className=\"Clip closed\"\n      id={`clip-${clip.id}`}\n      style={{ backgroundColor: clip.color }}\n    >\n      <div className=\"cover\">\n        <img alt={clip.title} src={clip.coverUrl} onClick={startClip} />\n      </div>\n      <div className=\"meta noselect\" onClick={startClip}>\n        <h3 className=\"title\">{clip.title}</h3>\n      </div>\n      {hasKeyboard() && (\n        <div className=\"keyboard noselect\">\n          <span\n            className={isMapKeyboard ? \"active\" : \"inactive\"}\n            onClick={handleKeyToggle}\n          >\n            {clipKey}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}