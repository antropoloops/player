{"ast":null,"code":"export function planarTriangleArea(triangle) {\n  var a = triangle[0],\n      b = triangle[1],\n      c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\nexport function planarRingArea(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n\n  return Math.abs(area) / 2;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/topojson/node_modules/topojson-simplify/src/planar.js"],"names":["planarTriangleArea","triangle","a","b","c","Math","abs","planarRingArea","ring","i","n","length","area"],"mappings":"AAAA,OAAO,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC3C,MAAIC,CAAC,GAAGD,QAAQ,CAAC,CAAD,CAAhB;AAAA,MAAqBE,CAAC,GAAGF,QAAQ,CAAC,CAAD,CAAjC;AAAA,MAAsCG,CAAC,GAAGH,QAAQ,CAAC,CAAD,CAAlD;AACA,SAAOI,IAAI,CAACC,GAAL,CAAS,CAACJ,CAAC,CAAC,CAAD,CAAD,GAAOE,CAAC,CAAC,CAAD,CAAT,KAAiBD,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAzB,IAAgC,CAACA,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAT,KAAiBC,CAAC,CAAC,CAAD,CAAD,GAAOF,CAAC,CAAC,CAAD,CAAzB,CAAzC,IAA0E,CAAjF;AACD;AAED,OAAO,SAASK,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,MAAIC,CAAC,GAAG,CAAC,CAAT;AAAA,MAAYC,CAAC,GAAGF,IAAI,CAACG,MAArB;AAAA,MAA6BT,CAA7B;AAAA,MAAgCC,CAAC,GAAGK,IAAI,CAACE,CAAC,GAAG,CAAL,CAAxC;AAAA,MAAiDE,IAAI,GAAG,CAAxD;;AACA,SAAO,EAAEH,CAAF,GAAMC,CAAb,EAAgBR,CAAC,GAAGC,CAAJ,EAAOA,CAAC,GAAGK,IAAI,CAACC,CAAD,CAAf,EAAoBG,IAAI,IAAIV,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAR,GAAcD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAlD;;AAChB,SAAOE,IAAI,CAACC,GAAL,CAASM,IAAT,IAAiB,CAAxB;AACD","sourcesContent":["export function planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nexport function planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n"]},"metadata":{},"sourceType":"module"}