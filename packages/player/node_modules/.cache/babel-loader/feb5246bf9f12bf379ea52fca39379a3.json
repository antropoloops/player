{"ast":null,"code":"export function copyFromChannel(audioBuffer, // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n  if (typeof audioBuffer.copyFromChannel === 'function') {\n    // The byteLength will be 0 when the ArrayBuffer was transferred.\n    if (parent[key].byteLength === 0) {\n      parent[key] = new Float32Array(128);\n    }\n\n    audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset); // Bug #5: Safari does not support copyFromChannel().\n  } else {\n    const channelData = audioBuffer.getChannelData(channelNumber); // The byteLength will be 0 when the ArrayBuffer was transferred.\n\n    if (parent[key].byteLength === 0) {\n      parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n    } else {\n      const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n      parent[key].set(slicedInput);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/helpers/copy-from-channel.js"],"names":["copyFromChannel","audioBuffer","parent","key","channelNumber","bufferOffset","byteLength","Float32Array","channelData","getChannelData","slice","slicedInput","buffer","BYTES_PER_ELEMENT","set"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,WAAzB,EACP;AACAC,MAFO,EAECC,GAFD,EAEMC,aAFN,EAEqBC,YAFrB,EAEmC;AACtC,MAAI,OAAOJ,WAAW,CAACD,eAAnB,KAAuC,UAA3C,EAAuD;AACnD;AACA,QAAIE,MAAM,CAACC,GAAD,CAAN,CAAYG,UAAZ,KAA2B,CAA/B,EAAkC;AAC9BJ,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAc,IAAII,YAAJ,CAAiB,GAAjB,CAAd;AACH;;AACDN,IAAAA,WAAW,CAACD,eAAZ,CAA4BE,MAAM,CAACC,GAAD,CAAlC,EAAyCC,aAAzC,EAAwDC,YAAxD,EALmD,CAMnD;AACH,GAPD,MAQK;AACD,UAAMG,WAAW,GAAGP,WAAW,CAACQ,cAAZ,CAA2BL,aAA3B,CAApB,CADC,CAED;;AACA,QAAIF,MAAM,CAACC,GAAD,CAAN,CAAYG,UAAZ,KAA2B,CAA/B,EAAkC;AAC9BJ,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcK,WAAW,CAACE,KAAZ,CAAkBL,YAAlB,EAAgCA,YAAY,GAAG,GAA/C,CAAd;AACH,KAFD,MAGK;AACD,YAAMM,WAAW,GAAG,IAAIJ,YAAJ,CAAiBC,WAAW,CAACI,MAA7B,EAAqCP,YAAY,GAAGE,YAAY,CAACM,iBAAjE,EAAoF,GAApF,CAApB;AACAX,MAAAA,MAAM,CAACC,GAAD,CAAN,CAAYW,GAAZ,CAAgBH,WAAhB;AACH;AACJ;AACJ","sourcesContent":["export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=/build/es2018/helpers/copy-from-channel.js.map"]},"metadata":{},"sourceType":"module"}