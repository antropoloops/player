{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/components/Player/Controller/Clip/ClipClosed.tsx\";\nimport React, { useReducer } from \"react\";\nimport { hasKeyboard } from \"../../../../lib/hasKeyboard\";\nimport \"./ClipClosed.css\";\nexport const ClosedClip = ({\n  clip,\n  control\n}) => {\n  const _useReducer = useReducer(x => !x, false),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        isMapKeyboard = _useReducer2[0],\n        toggleMapKeyboard = _useReducer2[1];\n\n  const keyboard = control && control.keyboard;\n  const clipKey = keyboard && keyboard.getKey(clip.id);\n\n  const startClip = () => control && control.startClip(clip.id, 0);\n\n  function handleKeyToggle() {\n    if (!keyboard) {// no control\n    } else if (isMapKeyboard) {\n      keyboard.stopMapMode();\n    } else {\n      keyboard.startMapMode(clip.id, newKey => {\n        toggleMapKeyboard();\n      });\n    }\n\n    toggleMapKeyboard();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Clip closed\",\n    id: `clip-${clip.id}`,\n    style: {\n      backgroundColor: clip.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: clip.title,\n    src: clip.coverUrl,\n    onClick: startClip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"meta noselect\",\n    onClick: startClip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, clip.title)), hasKeyboard() && React.createElement(\"div\", {\n    className: \"keyboard noselect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: isMapKeyboard ? \"active\" : \"inactive\",\n    onClick: handleKeyToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, clipKey)));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/components/Player/Controller/Clip/ClipClosed.tsx"],"names":["React","useReducer","hasKeyboard","ClosedClip","clip","control","x","isMapKeyboard","toggleMapKeyboard","keyboard","clipKey","getKey","id","startClip","handleKeyToggle","stopMapMode","startMapMode","newKey","backgroundColor","color","title","coverUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAO,kBAAP;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAkC;AAAA,sBACfJ,UAAU,CAACK,CAAC,IAAI,CAACA,CAAP,EAAU,KAAV,CADK;AAAA;AAAA,QACnDC,aADmD;AAAA,QACpCC,iBADoC;;AAG1D,QAAMC,QAAQ,GAAGJ,OAAO,IAAIA,OAAO,CAACI,QAApC;AACA,QAAMC,OAAO,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,MAAT,CAAgBP,IAAI,CAACQ,EAArB,CAA5B;;AACA,QAAMC,SAAS,GAAG,MAAMR,OAAO,IAAIA,OAAO,CAACQ,SAAR,CAAkBT,IAAI,CAACQ,EAAvB,EAA2B,CAA3B,CAAnC;;AAEA,WAASE,eAAT,GAA2B;AACzB,QAAI,CAACL,QAAL,EAAe,CACb;AACD,KAFD,MAEO,IAAIF,aAAJ,EAAmB;AACxBE,MAAAA,QAAQ,CAACM,WAAT;AACD,KAFM,MAEA;AACLN,MAAAA,QAAQ,CAACO,YAAT,CAAsBZ,IAAI,CAACQ,EAA3B,EAAgCK,MAAD,IAAoB;AACjDT,QAAAA,iBAAiB;AAClB,OAFD;AAGD;;AACDA,IAAAA,iBAAiB;AAClB;;AAED,SACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,EAAE,EAAG,QAAOJ,IAAI,CAACQ,EAAG,EAFtB;AAGE,IAAA,KAAK,EAAE;AAAEM,MAAAA,eAAe,EAAEd,IAAI,CAACe;AAAxB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEf,IAAI,CAACgB,KAAf;AAAsB,IAAA,GAAG,EAAEhB,IAAI,CAACiB,QAAhC;AAA0C,IAAA,OAAO,EAAER,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAQE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBT,IAAI,CAACgB,KAA5B,CADF,CARF,EAWGlB,WAAW,MACV;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEK,aAAa,GAAG,QAAH,GAAc,UADxC;AAEE,IAAA,OAAO,EAAEO,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,OAJH,CADF,CAZJ,CADF;AAwBD,CA5CM","sourcesContent":["import React, { useReducer } from \"react\";\nimport { ClipProps } from \"./index\";\nimport { hasKeyboard } from \"../../../../lib/hasKeyboard\";\nimport \"./ClipClosed.css\";\n\nexport const ClosedClip = ({ clip, control }: ClipProps) => {\n  const [isMapKeyboard, toggleMapKeyboard] = useReducer(x => !x, false);\n\n  const keyboard = control && control.keyboard;\n  const clipKey = keyboard && keyboard.getKey(clip.id);\n  const startClip = () => control && control.startClip(clip.id, 0);\n\n  function handleKeyToggle() {\n    if (!keyboard) {\n      // no control\n    } else if (isMapKeyboard) {\n      keyboard.stopMapMode();\n    } else {\n      keyboard.startMapMode(clip.id, (newKey: string) => {\n        toggleMapKeyboard();\n      });\n    }\n    toggleMapKeyboard();\n  }\n\n  return (\n    <div\n      className=\"Clip closed\"\n      id={`clip-${clip.id}`}\n      style={{ backgroundColor: clip.color }}\n    >\n      <div className=\"cover\">\n        <img alt={clip.title} src={clip.coverUrl} onClick={startClip} />\n      </div>\n      <div className=\"meta noselect\" onClick={startClip}>\n        <h3 className=\"title\">{clip.title}</h3>\n      </div>\n      {hasKeyboard() && (\n        <div className=\"keyboard noselect\">\n          <span\n            className={isMapKeyboard ? \"active\" : \"inactive\"}\n            onClick={handleKeyToggle}\n          >\n            {clipKey}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}