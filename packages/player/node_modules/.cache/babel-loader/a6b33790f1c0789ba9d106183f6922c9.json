{"ast":null,"code":"import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = nativeAudioBufferSourceNode => {\n  nativeAudioBufferSourceNode.start = (start => {\n    let isScheduled = false;\n    return (when = 0, offset = 0, duration) => {\n      if (isScheduled) {\n        throw createInvalidStateError();\n      }\n\n      start.call(nativeAudioBufferSourceNode, when, offset, duration);\n      isScheduled = true;\n    };\n  })(nativeAudioBufferSourceNode.start);\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js"],"names":["createInvalidStateError","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","nativeAudioBufferSourceNode","start","isScheduled","when","offset","duration","call"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,kCAAxC;AACA,OAAO,MAAMC,oDAAoD,GAAIC,2BAAD,IAAiC;AACjGA,EAAAA,2BAA2B,CAACC,KAA5B,GAAoC,CAAEA,KAAD,IAAW;AAC5C,QAAIC,WAAW,GAAG,KAAlB;AACA,WAAO,CAACC,IAAI,GAAG,CAAR,EAAWC,MAAM,GAAG,CAApB,EAAuBC,QAAvB,KAAoC;AACvC,UAAIH,WAAJ,EAAiB;AACb,cAAMJ,uBAAuB,EAA7B;AACH;;AACDG,MAAAA,KAAK,CAACK,IAAN,CAAWN,2BAAX,EAAwCG,IAAxC,EAA8CC,MAA9C,EAAsDC,QAAtD;AACAH,MAAAA,WAAW,GAAG,IAAd;AACH,KAND;AAOH,GATmC,EASjCF,2BAA2B,CAACC,KATK,CAApC;AAUH,CAXM","sourcesContent":["import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map"]},"metadata":{},"sourceType":"module"}