{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/components/Player/SessionHeader.tsx\";\nimport React from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nexport const SessionHeader = ({\n  meta,\n  onToggle,\n  isOpen\n}) => React.createElement(\"div\", {\n  className: \"Header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"navigation btn-link\",\n  onClick: onToggle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, isOpen ? React.createElement(ArrowDown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}) : React.createElement(ArrowUp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, meta.title)));","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/components/Player/SessionHeader.tsx"],"names":["React","ArrowDown","ArrowUp","SessionHeader","meta","onToggle","isOpen","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAC5BC,EAAAA,IAD4B;AAE5BC,EAAAA,QAF4B;AAG5BC,EAAAA;AAH4B,CAAD,KAK3B;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,SAAS,EAAC,qBAAlB;AAAwC,EAAA,OAAO,EAAED,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,MAAM,GAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,GAAmB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD5B,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKF,IAAI,CAACG,KAAV,CAFF,CADF,CALK","sourcesContent":["import React from \"react\";\nimport { BundleMetadata } from \"../../audioset\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\n\nexport const SessionHeader = ({\n  meta,\n  onToggle,\n  isOpen,\n}: SessionHeaderProps) => (\n  <div className=\"Header\">\n    <button className=\"navigation btn-link\" onClick={onToggle}>\n      {isOpen ? <ArrowDown /> : <ArrowUp />}\n      <h1>{meta.title}</h1>\n    </button>\n  </div>\n);\n\ninterface SessionHeaderProps {\n  meta: BundleMetadata;\n  onToggle: () => void;\n  isOpen: boolean;\n}\n"]},"metadata":{},"sourceType":"module"}