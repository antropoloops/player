{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt, sqrtPi } from \"./math.js\";\nvar sqrt3 = sqrt(3);\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function (x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function () {\n  return projection(crasterRaw).scale(156.19);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/craster.js"],"names":["geoProjection","projection","asin","cos","sin","sqrt","sqrtPi","sqrt3","crasterRaw","lambda","phi","invert","x","y","scale"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAzB,QAA0C,QAA1C;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,MAA9B,QAA2C,WAA3C;AAEA,IAAIC,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAhB;AAEA,OAAO,SAASG,UAAT,CAAoBC,MAApB,EAA4BC,GAA5B,EAAiC;AACtC,SAAO,CAACH,KAAK,GAAGE,MAAR,IAAkB,IAAIN,GAAG,CAAC,IAAIO,GAAJ,GAAU,CAAX,CAAP,GAAuB,CAAzC,IAA8CJ,MAA/C,EAAuDC,KAAK,GAAGD,MAAR,GAAiBF,GAAG,CAACM,GAAG,GAAG,CAAP,CAA3E,CAAP;AACD;;AAEDF,UAAU,CAACG,MAAX,GAAoB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACjC,MAAIH,GAAG,GAAG,IAAIR,IAAI,CAACW,CAAC,IAAIN,KAAK,GAAGD,MAAZ,CAAF,CAAlB;AACA,SAAO,CAACA,MAAM,GAAGM,CAAT,IAAcL,KAAK,IAAI,IAAIJ,GAAG,CAAC,IAAIO,GAAJ,GAAU,CAAX,CAAP,GAAuB,CAA3B,CAAnB,CAAD,EAAoDA,GAApD,CAAP;AACD,CAHD;;AAKA,eAAe,YAAW;AACxB,SAAOT,UAAU,CAACO,UAAD,CAAV,CACFM,KADE,CACI,MADJ,CAAP;AAED","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt, sqrtPi} from \"./math.js\";\n\nvar sqrt3 = sqrt(3);\n\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function(x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function() {\n  return projection(crasterRaw)\n      .scale(156.19);\n}\n"]},"metadata":{},"sourceType":"module"}