{"ast":null,"code":"import { getCoverSize, getHorizontalPadding, getVerticalPadding, getInfoHeight } from \"./dimensions\";\nexport default function drawAlbum(el, width, params) {\n  const trackNumber = params.trackNumber,\n        imageUrl = params.imageUrl,\n        country = params.country,\n        trackColor = params.trackColor;\n  const album = el.append(\"g\");\n  const coverSize = getCoverSize(width);\n  const horizontalPadding = getHorizontalPadding(width);\n  const verticalPadding = getVerticalPadding(width);\n  const infoHeight = getInfoHeight(width);\n  const fontSize = \"1.1vw\";\n  album.append(\"svg:image\").attr(\"width\", coverSize).attr(\"height\", coverSize).attr(\"x\", trackNumber * coverSize).attr(\"y\", 0).style(\"stroke\", \"white\").attr(\"xlink:href\", imageUrl); // Draw country rectangle\n\n  album.append(\"rect\").attr(\"width\", coverSize).attr(\"height\", infoHeight).attr(\"x\", trackNumber * coverSize).attr(\"y\", coverSize + verticalPadding).style(\"fill\", trackColor); // Draw country text\n\n  const countryText = album.append(\"text\").attr(\"id\", \"countryText\" + trackNumber).attr(\"x\", trackNumber * coverSize + horizontalPadding).attr(\"y\", coverSize + verticalPadding + infoHeight / 2).attr(\"dy\", \"0.35em\").style(\"font-size\", fontSize).text(country); // Trucate text larger than coverSize\n\n  const countryTextId = \"countryText\" + trackNumber;\n\n  function wrap(textElement, textId) {\n    // FIXME: don't use document\n    const danger = document.getElementById(textId);\n    if (!danger) return;\n    let textLength = danger.getBBox().width;\n    let text = textElement.text();\n\n    while (textLength > coverSize - horizontalPadding * 2 && text.length > 0) {\n      text = text.slice(0, -1);\n      textElement.text(text + \"...\");\n      textLength = danger.getBBox().width;\n    }\n  }\n\n  wrap(countryText, countryTextId);\n  return album;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/drawAlbum.js"],"names":["getCoverSize","getHorizontalPadding","getVerticalPadding","getInfoHeight","drawAlbum","el","width","params","trackNumber","imageUrl","country","trackColor","album","append","coverSize","horizontalPadding","verticalPadding","infoHeight","fontSize","attr","style","countryText","text","countryTextId","wrap","textElement","textId","danger","document","getElementById","textLength","getBBox","length","slice"],"mappings":"AAAA,SACEA,YADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,aAJF,QAKO,cALP;AAOA,eAAe,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AAAA,QAC3CC,WAD2C,GACID,MADJ,CAC3CC,WAD2C;AAAA,QAC9BC,QAD8B,GACIF,MADJ,CAC9BE,QAD8B;AAAA,QACpBC,OADoB,GACIH,MADJ,CACpBG,OADoB;AAAA,QACXC,UADW,GACIJ,MADJ,CACXI,UADW;AAEnD,QAAMC,KAAK,GAAGP,EAAE,CAACQ,MAAH,CAAU,GAAV,CAAd;AACA,QAAMC,SAAS,GAAGd,YAAY,CAACM,KAAD,CAA9B;AACA,QAAMS,iBAAiB,GAAGd,oBAAoB,CAACK,KAAD,CAA9C;AACA,QAAMU,eAAe,GAAGd,kBAAkB,CAACI,KAAD,CAA1C;AACA,QAAMW,UAAU,GAAGd,aAAa,CAACG,KAAD,CAAhC;AACA,QAAMY,QAAQ,GAAG,OAAjB;AAEAN,EAAAA,KAAK,CACFC,MADH,CACU,WADV,EAEGM,IAFH,CAEQ,OAFR,EAEiBL,SAFjB,EAGGK,IAHH,CAGQ,QAHR,EAGkBL,SAHlB,EAIGK,IAJH,CAIQ,GAJR,EAIaX,WAAW,GAAGM,SAJ3B,EAKGK,IALH,CAKQ,GALR,EAKa,CALb,EAMGC,KANH,CAMS,QANT,EAMmB,OANnB,EAOGD,IAPH,CAOQ,YAPR,EAOsBV,QAPtB,EATmD,CAkBnD;;AACAG,EAAAA,KAAK,CACFC,MADH,CACU,MADV,EAEGM,IAFH,CAEQ,OAFR,EAEiBL,SAFjB,EAGGK,IAHH,CAGQ,QAHR,EAGkBF,UAHlB,EAIGE,IAJH,CAIQ,GAJR,EAIaX,WAAW,GAAGM,SAJ3B,EAKGK,IALH,CAKQ,GALR,EAKaL,SAAS,GAAGE,eALzB,EAMGI,KANH,CAMS,MANT,EAMiBT,UANjB,EAnBmD,CA2BnD;;AACA,QAAMU,WAAW,GAAGT,KAAK,CACtBC,MADiB,CACV,MADU,EAEjBM,IAFiB,CAEZ,IAFY,EAEN,gBAAgBX,WAFV,EAGjBW,IAHiB,CAGZ,GAHY,EAGPX,WAAW,GAAGM,SAAd,GAA0BC,iBAHnB,EAIjBI,IAJiB,CAIZ,GAJY,EAIPL,SAAS,GAAGE,eAAZ,GAA8BC,UAAU,GAAG,CAJpC,EAKjBE,IALiB,CAKZ,IALY,EAKN,QALM,EAMjBC,KANiB,CAMX,WANW,EAMEF,QANF,EAOjBI,IAPiB,CAOZZ,OAPY,CAApB,CA5BmD,CAqCnD;;AACA,QAAMa,aAAa,GAAG,gBAAgBf,WAAtC;;AACA,WAASgB,IAAT,CAAcC,WAAd,EAA2BC,MAA3B,EAAmC;AACjC;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,MAAxB,CAAf;AACA,QAAI,CAACC,MAAL,EAAa;AACb,QAAIG,UAAU,GAAGH,MAAM,CAACI,OAAP,GAAiBzB,KAAlC;AACA,QAAIgB,IAAI,GAAGG,WAAW,CAACH,IAAZ,EAAX;;AAEA,WAAOQ,UAAU,GAAGhB,SAAS,GAAGC,iBAAiB,GAAG,CAA7C,IAAkDO,IAAI,CAACU,MAAL,GAAc,CAAvE,EAA0E;AACxEV,MAAAA,IAAI,GAAGA,IAAI,CAACW,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACAR,MAAAA,WAAW,CAACH,IAAZ,CAAiBA,IAAI,GAAG,KAAxB;AACAQ,MAAAA,UAAU,GAAGH,MAAM,CAACI,OAAP,GAAiBzB,KAA9B;AACD;AACF;;AACDkB,EAAAA,IAAI,CAACH,WAAD,EAAcE,aAAd,CAAJ;AAEA,SAAOX,KAAP;AACD","sourcesContent":["import {\n  getCoverSize,\n  getHorizontalPadding,\n  getVerticalPadding,\n  getInfoHeight\n} from \"./dimensions\";\n\nexport default function drawAlbum(el, width, params) {\n  const { trackNumber, imageUrl, country, trackColor } = params;\n  const album = el.append(\"g\");\n  const coverSize = getCoverSize(width);\n  const horizontalPadding = getHorizontalPadding(width);\n  const verticalPadding = getVerticalPadding(width);\n  const infoHeight = getInfoHeight(width);\n  const fontSize = \"1.1vw\";\n\n  album\n    .append(\"svg:image\")\n    .attr(\"width\", coverSize)\n    .attr(\"height\", coverSize)\n    .attr(\"x\", trackNumber * coverSize)\n    .attr(\"y\", 0)\n    .style(\"stroke\", \"white\")\n    .attr(\"xlink:href\", imageUrl);\n\n  // Draw country rectangle\n  album\n    .append(\"rect\")\n    .attr(\"width\", coverSize)\n    .attr(\"height\", infoHeight)\n    .attr(\"x\", trackNumber * coverSize)\n    .attr(\"y\", coverSize + verticalPadding)\n    .style(\"fill\", trackColor);\n\n  // Draw country text\n  const countryText = album\n    .append(\"text\")\n    .attr(\"id\", \"countryText\" + trackNumber)\n    .attr(\"x\", trackNumber * coverSize + horizontalPadding)\n    .attr(\"y\", coverSize + verticalPadding + infoHeight / 2)\n    .attr(\"dy\", \"0.35em\")\n    .style(\"font-size\", fontSize)\n    .text(country);\n\n  // Trucate text larger than coverSize\n  const countryTextId = \"countryText\" + trackNumber;\n  function wrap(textElement, textId) {\n    // FIXME: don't use document\n    const danger = document.getElementById(textId);\n    if (!danger) return;\n    let textLength = danger.getBBox().width;\n    let text = textElement.text();\n\n    while (textLength > coverSize - horizontalPadding * 2 && text.length > 0) {\n      text = text.slice(0, -1);\n      textElement.text(text + \"...\");\n      textLength = danger.getBBox().width;\n    }\n  }\n  wrap(countryText, countryTextId);\n\n  return album;\n}\n"]},"metadata":{},"sourceType":"module"}