{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Readme.tsx\";\nimport React, { useReducer } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Readme.css\";\nexport const Readme = ({\n  closed,\n  content\n}) => {\n  const _useReducer = useReducer(x => !x, false),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        isOpen = _useReducer2[0],\n        toggleOpen = _useReducer2[1];\n\n  console.log(\"jodeer\", content);\n\n  if (!content.length) {\n    return null;\n  }\n\n  const markdown = isOpen ? content : summary(content);\n  return React.createElement(\"div\", {\n    className: \"Readme\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    markdown: markdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn-link\",\n    onClick: toggleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, isOpen ? React.createElement(ArrowUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }) : React.createElement(ArrowDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n};\n\nfunction summary(content) {\n  const nextLineIndex = content.indexOf(\"\\n\");\n  const firstLine = nextLineIndex > 0 ? content.slice(0, nextLineIndex) : content;\n\n  if (firstLine.length < 100) {\n    return firstLine;\n  }\n\n  const firstPointIndex = firstLine.search(/[.:]/);\n  const firstSentence = firstPointIndex > 0 ? firstLine.slice(0, firstPointIndex) : firstLine;\n  return firstSentence + \".\";\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Readme.tsx"],"names":["React","useReducer","ArrowDown","ArrowUp","Markdown","Readme","closed","content","x","isOpen","toggleOpen","console","log","length","markdown","summary","nextLineIndex","indexOf","firstLine","slice","firstPointIndex","search","firstSentence"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,cAAP;AAOA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuC;AAAA,sBAC9BN,UAAU,CAACO,CAAC,IAAI,CAACA,CAAP,EAAU,KAAV,CADoB;AAAA;AAAA,QACpDC,MADoD;AAAA,QAC5CC,UAD4C;;AAG3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,OAAtB;;AACA,MAAI,CAACA,OAAO,CAACM,MAAb,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,QAAMC,QAAQ,GAAGL,MAAM,GAAGF,OAAH,GAAaQ,OAAO,CAACR,OAAD,CAA3C;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEO,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEJ,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1B,CAFF,CADF;AAQD,CAlBM;;AAoBP,SAASM,OAAT,CAAiBR,OAAjB,EAAkC;AAChC,QAAMS,aAAa,GAAGT,OAAO,CAACU,OAAR,CAAgB,IAAhB,CAAtB;AACA,QAAMC,SAAS,GACbF,aAAa,GAAG,CAAhB,GAAoBT,OAAO,CAACY,KAAR,CAAc,CAAd,EAAiBH,aAAjB,CAApB,GAAsDT,OADxD;;AAEA,MAAIW,SAAS,CAACL,MAAV,GAAmB,GAAvB,EAA4B;AAC1B,WAAOK,SAAP;AACD;;AAED,QAAME,eAAe,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,CAAxB;AACA,QAAMC,aAAa,GACjBF,eAAe,GAAG,CAAlB,GAAsBF,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmBC,eAAnB,CAAtB,GAA4DF,SAD9D;AAEA,SAAOI,aAAa,GAAG,GAAvB;AACD","sourcesContent":["import React, { useReducer } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Readme.css\";\n\ninterface ReeadmeProps {\n  closed: boolean;\n  content: string;\n}\n\nexport const Readme = ({ closed, content }: ReeadmeProps) => {\n  const [isOpen, toggleOpen] = useReducer(x => !x, false);\n\n  console.log(\"jodeer\", content);\n  if (!content.length) {\n    return null;\n  }\n\n  const markdown = isOpen ? content : summary(content);\n\n  return (\n    <div className=\"Readme\">\n      <Markdown markdown={markdown} />\n      <button className=\"btn-link\" onClick={toggleOpen}>\n        {isOpen ? <ArrowUp /> : <ArrowDown />}\n      </button>\n    </div>\n  );\n};\n\nfunction summary(content: string) {\n  const nextLineIndex = content.indexOf(\"\\n\");\n  const firstLine =\n    nextLineIndex > 0 ? content.slice(0, nextLineIndex) : content;\n  if (firstLine.length < 100) {\n    return firstLine;\n  }\n\n  const firstPointIndex = firstLine.search(/[.:]/);\n  const firstSentence =\n    firstPointIndex > 0 ? firstLine.slice(0, firstPointIndex) : firstLine;\n  return firstSentence + \".\";\n}\n"]},"metadata":{},"sourceType":"module"}