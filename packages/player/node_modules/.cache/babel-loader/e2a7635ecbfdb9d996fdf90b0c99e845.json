{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipOpen.tsx\";\nimport React, { useState } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nexport const OpenClip = ({\n  ref,\n  clip,\n  onClick\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isReadmeVisible = _useState2[0],\n        setReadmeVisible = _useState2[1];\n\n  const cover2 = clip.resources.cover2 && clip.resources.cover2.small;\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: \"Clip open\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"covers\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"cover\",\n    alt: clip.title,\n    src: clip.coverUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), cover2 ? React.createElement(\"img\", {\n    className: \"cover alternative\",\n    alt: clip.title,\n    src: cover2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    className: \"cover alternative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\xA0\")), React.createElement(\"div\", {\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"clipName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, clip.name), React.createElement(ArrowDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(ArrowUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, clip.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, clip.artist))), React.createElement(\"div\", {\n    className: \"expand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    markdown: clip.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipOpen.tsx"],"names":["React","useState","ArrowDown","ArrowUp","Markdown","OpenClip","ref","clip","onClick","isReadmeVisible","setReadmeVisible","cover2","resources","small","title","coverUrl","name","artist","readme"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAAA,oBACXP,QAAQ,CAAC,IAAD,CADG;AAAA;AAAA,QAChDQ,eADgD;AAAA,QAC/BC,gBAD+B;;AAGvD,QAAMC,MAAM,GAAGJ,IAAI,CAACK,SAAL,CAAeD,MAAf,IAAyBJ,IAAI,CAACK,SAAL,CAAeD,MAAf,CAAsBE,KAA9D;AACA,SACE;AAAK,IAAA,GAAG,EAAEP,GAAV;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAED,IAAI,CAACO,KAAjC;AAAwC,IAAA,GAAG,EAAEP,IAAI,CAACQ,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,MAAM,GACL;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAEJ,IAAI,CAACO,KAA7C;AAAoD,IAAA,GAAG,EAAEH,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CADF,EASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,IAAI,CAACS,IAAhC,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBT,IAAI,CAACO,KAA5B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAI,CAACU,MAAT,CAFF,CANF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEV,IAAI,CAACW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CATF,CADF;AA4BD,CAhCM","sourcesContent":["import React, { useState } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\n\nexport const OpenClip = ({ ref, clip, onClick }: any) => {\n  const [isReadmeVisible, setReadmeVisible] = useState(true);\n\n  const cover2 = clip.resources.cover2 && clip.resources.cover2.small;\n  return (\n    <div ref={ref} className=\"Clip open\">\n      <div className=\"covers\" onClick={onClick}>\n        <img className=\"cover\" alt={clip.title} src={clip.coverUrl} />\n        {cover2 ? (\n          <img className=\"cover alternative\" alt={clip.title} src={cover2} />\n        ) : (\n          <span className=\"cover alternative\">&nbsp;</span>\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"meta\">\n          <div className=\"column\">\n            <div className=\"clipName\">{clip.name}</div>\n            <ArrowDown />\n            <ArrowUp />\n          </div>\n          <div className=\"column\">\n            <h3 className=\"title\">{clip.title}</h3>\n            <p>{clip.artist}</p>\n          </div>\n        </div>\n        <div className=\"expand\">\n          <Markdown markdown={clip.readme} />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}