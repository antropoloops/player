{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getAudioContext}from\"./AudioContext\";/**\n * Fetch an AudioBuffer from url\n * @param url\n */export function fetchAudioBuffer(_x){return _fetchAudioBuffer.apply(this,arguments);}function _fetchAudioBuffer(){_fetchAudioBuffer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var context,response,arrayBuffer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getAudioContext();case 2:context=_context.sent;_context.next=5;return fetch(url);case 5:response=_context.sent;_context.next=8;return response.arrayBuffer();case 8:arrayBuffer=_context.sent;return _context.abrupt(\"return\",decodeArrayBuffer(context,arrayBuffer));case 10:case\"end\":return _context.stop();}}},_callee);}));return _fetchAudioBuffer.apply(this,arguments);}function decodeArrayBuffer(ctx,buffer){return new Promise(function(resolve,reject){ctx.decodeAudioData(buffer,resolve,reject);});}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/player/fetchAudioBuffer.ts"],"names":["getAudioContext","fetchAudioBuffer","url","context","fetch","response","arrayBuffer","decodeArrayBuffer","ctx","buffer","Promise","resolve","reject","decodeAudioData"],"mappings":"qTAAA,OAASA,eAAT,KAAgC,gBAAhC,CAEA;;;GAIA,eAAsBC,CAAAA,gBAAtB,qD,uGAAO,iBAAgCC,GAAhC,yKACiBF,CAAAA,eAAe,EADhC,QACCG,OADD,qCAEkBC,CAAAA,KAAK,CAACF,GAAD,CAFvB,QAECG,QAFD,qCAGqBA,CAAAA,QAAQ,CAACC,WAAT,EAHrB,QAGCA,WAHD,+CAIEC,iBAAiB,CAACJ,OAAD,CAAUG,WAAV,CAJnB,yD,mDAOP,QAASC,CAAAA,iBAAT,CACEC,GADF,CAEEC,MAFF,CAGwB,CACtB,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCJ,GAAG,CAACK,eAAJ,CAAoBJ,MAApB,CAA4BE,OAA5B,CAAqCC,MAArC,EACD,CAFM,CAAP,CAGD","sourcesContent":["import { getAudioContext } from \"./AudioContext\";\n\n/**\n * Fetch an AudioBuffer from url\n * @param url\n */\nexport async function fetchAudioBuffer(url: string): Promise<AudioBuffer> {\n  const context = await getAudioContext();\n  const response = await fetch(url);\n  const arrayBuffer = await response.arrayBuffer();\n  return decodeArrayBuffer(context, arrayBuffer);\n}\n\nfunction decodeArrayBuffer(\n  ctx: AudioContext,\n  buffer: ArrayBuffer,\n): Promise<AudioBuffer> {\n  return new Promise((resolve, reject) => {\n    ctx.decodeAudioData(buffer, resolve, reject);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}