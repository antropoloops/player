{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipClosed.tsx\";\nimport React, { useReducer } from \"react\";\nimport \"./ClipClosed.css\";\nexport const ClosedClip = ({\n  clip,\n  onClick\n}) => {\n  const _useReducer = useReducer(x => !x, false),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        isMapKeyboard = _useReducer2[0],\n        toggleMapKeyboard = _useReducer2[1];\n\n  function handleKeyToggle() {\n    toggleMapKeyboard(null);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Clip closed\",\n    id: \"clip-\".concat(clip.id),\n    style: {\n      backgroundColor: clip.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"cover\",\n    alt: clip.title,\n    src: clip.coverUrl,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"meta\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, clip.title)), React.createElement(\"div\", {\n    className: \"keyboard noselect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: isMapKeyboard ? \"active\" : \"inactive\",\n    onClick: handleKeyToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, clip.keyMap)));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/ClipClosed.tsx"],"names":["React","useReducer","ClosedClip","clip","onClick","x","isMapKeyboard","toggleMapKeyboard","handleKeyToggle","id","backgroundColor","color","title","coverUrl","keyMap"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,kBAAP;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA4B;AAAA,sBACTH,UAAU,CAACI,CAAC,IAAI,CAACA,CAAP,EAAU,KAAV,CADD;AAAA;AAAA,QAC7CC,aAD6C;AAAA,QAC9BC,iBAD8B;;AAGpD,WAASC,eAAT,GAA2B;AACzBD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AAED,SACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,EAAE,iBAAUJ,IAAI,CAACM,EAAf,CAFJ;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEP,IAAI,CAACQ;AAAxB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,GAAG,EAAER,IAAI,CAACS,KAFZ;AAGE,IAAA,GAAG,EAAET,IAAI,CAACU,QAHZ;AAIE,IAAA,OAAO,EAAET,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAWE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,IAAI,CAACS,KAA5B,CADF,CAXF,EAcE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEN,aAAa,GAAG,QAAH,GAAc,UADxC;AAEE,IAAA,OAAO,EAAEE,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,IAAI,CAACW,MAJR,CADF,CAdF,CADF;AAyBD,CAhCM","sourcesContent":["import React, { useReducer } from \"react\";\nimport \"./ClipClosed.css\";\n\nexport const ClosedClip = ({ clip, onClick }: any) => {\n  const [isMapKeyboard, toggleMapKeyboard] = useReducer(x => !x, false);\n\n  function handleKeyToggle() {\n    toggleMapKeyboard(null);\n  }\n\n  return (\n    <div\n      className=\"Clip closed\"\n      id={`clip-${clip.id}`}\n      style={{ backgroundColor: clip.color }}\n    >\n      <img\n        className=\"cover\"\n        alt={clip.title}\n        src={clip.coverUrl}\n        onClick={onClick}\n      />\n      <div className=\"meta\" onClick={onClick}>\n        <h3 className=\"title\">{clip.title}</h3>\n      </div>\n      <div className=\"keyboard noselect\">\n        <span\n          className={isMapKeyboard ? \"active\" : \"inactive\"}\n          onClick={handleKeyToggle}\n        >\n          {clip.keyMap}\n        </span>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}