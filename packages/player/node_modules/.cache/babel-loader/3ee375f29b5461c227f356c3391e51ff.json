{"ast":null,"code":"import * as d3 from \"d3\";\nexport default function createWave(parent, screenWidth, cx, cy, trackColor, trackVolume) {\n  const firstRadius = Math.floor(screenWidth / 30 * trackVolume);\n  const lastRadius = 150;\n  const radius = d3.range(firstRadius, lastRadius);\n  const duration = 20;\n  const wave = parent.append(\"circle\").attr(\"cx\", cx).attr(\"cy\", cy).attr(\"r\", 0).style(\"fill\", \"none\").style(\"stroke\", trackColor);\n  radius.forEach((r, i) => {\n    const initialWidth = 2;\n    const strokeWidth = initialWidth - initialWidth * r / lastRadius;\n    wave.transition().duration(duration).delay(i * duration).attr(\"r\", r).style(\"stroke-width\", strokeWidth).on(\"end\", (d, i, nodes) => {\n      if (r === lastRadius - 1) nodes[i].remove();\n    });\n  });\n  return wave;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/drawWave.js"],"names":["d3","createWave","parent","screenWidth","cx","cy","trackColor","trackVolume","firstRadius","Math","floor","lastRadius","radius","range","duration","wave","append","attr","style","forEach","r","i","initialWidth","strokeWidth","transition","delay","on","d","nodes","remove"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA,eAAe,SAASC,UAAT,CACbC,MADa,EAEbC,WAFa,EAGbC,EAHa,EAIbC,EAJa,EAKbC,UALa,EAMbC,WANa,EAOb;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAYP,WAAW,GAAG,EAAf,GAAqBI,WAAhC,CAApB;AACA,QAAMI,UAAU,GAAG,GAAnB;AACA,QAAMC,MAAM,GAAGZ,EAAE,CAACa,KAAH,CAASL,WAAT,EAAsBG,UAAtB,CAAf;AACA,QAAMG,QAAQ,GAAG,EAAjB;AAEA,QAAMC,IAAI,GAAGb,MAAM,CAChBc,MADU,CACH,QADG,EAEVC,IAFU,CAEL,IAFK,EAECb,EAFD,EAGVa,IAHU,CAGL,IAHK,EAGCZ,EAHD,EAIVY,IAJU,CAIL,GAJK,EAIA,CAJA,EAKVC,KALU,CAKJ,MALI,EAKI,MALJ,EAMVA,KANU,CAMJ,QANI,EAMMZ,UANN,CAAb;AAQAM,EAAAA,MAAM,CAACO,OAAP,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB,UAAMC,YAAY,GAAG,CAArB;AACA,UAAMC,WAAW,GAAGD,YAAY,GAAIA,YAAY,GAAGF,CAAhB,GAAqBT,UAAxD;AACAI,IAAAA,IAAI,CACDS,UADH,GAEGV,QAFH,CAEYA,QAFZ,EAGGW,KAHH,CAGSJ,CAAC,GAAGP,QAHb,EAIGG,IAJH,CAIQ,GAJR,EAIaG,CAJb,EAKGF,KALH,CAKS,cALT,EAKyBK,WALzB,EAMGG,EANH,CAMM,KANN,EAMa,CAACC,CAAD,EAAIN,CAAJ,EAAOO,KAAP,KAAiB;AAC1B,UAAIR,CAAC,KAAKT,UAAU,GAAG,CAAvB,EAA0BiB,KAAK,CAACP,CAAD,CAAL,CAASQ,MAAT;AAC3B,KARH;AASD,GAZD;AAcA,SAAOd,IAAP;AACD","sourcesContent":["import * as d3 from \"d3\";\n\nexport default function createWave(\n  parent,\n  screenWidth,\n  cx,\n  cy,\n  trackColor,\n  trackVolume\n) {\n  const firstRadius = Math.floor((screenWidth / 30) * trackVolume);\n  const lastRadius = 150;\n  const radius = d3.range(firstRadius, lastRadius);\n  const duration = 20;\n\n  const wave = parent\n    .append(\"circle\")\n    .attr(\"cx\", cx)\n    .attr(\"cy\", cy)\n    .attr(\"r\", 0)\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", trackColor);\n\n  radius.forEach((r, i) => {\n    const initialWidth = 2;\n    const strokeWidth = initialWidth - (initialWidth * r) / lastRadius;\n    wave\n      .transition()\n      .duration(duration)\n      .delay(i * duration)\n      .attr(\"r\", r)\n      .style(\"stroke-width\", strokeWidth)\n      .on(\"end\", (d, i, nodes) => {\n        if (r === lastRadius - 1) nodes[i].remove();\n      });\n  });\n\n  return wave;\n}\n"]},"metadata":{},"sourceType":"module"}