{"ast":null,"code":"import * as d3 from \"d3\";\n// Number of slices in a circle\nconst NUMSLICES = 36; // Scale. Get the degrees for a specific slice\n\nconst degreesFromSlice = d3.scaleLinear().range([0, 360]) // working in degrees\n.domain([0, NUMSLICES]);\nexport default function drawCircle(parent, width, cx, cy, clip) {\n  const duration = clip.audio.durationSeconds;\n  const trackVolume = clip.audio.volume;\n  const trackColor = clip.color;\n  const circlesGroup = parent.append(\"g\").attr(\"class\", \"circleGroup\").attr(\"transform\", \"translate(\".concat(cx, \", \").concat(cy, \")\")); // We need to group again, so that the circle turns in its location\n\n  const circle = circlesGroup.append(\"g\").attr(\"class\", \"circle\"); // Arc generator\n\n  const arc = d3.arc(); // Create outerArcs data\n\n  const outerArcs = createOuterArcs(width, trackVolume); // Draw outerArcs\n\n  circle.selectAll(\".outerArcs\").data(outerArcs).enter().append(\"path\").attr(\"class\", \"outerArcs\").attr(\"d\", arc).style(\"fill\", trackColor).style(\"opacity\", (d, i) => {\n    return 0.3 / NUMSLICES * i;\n  }); // Create innerArcs data\n\n  const innerArcs = createInnerArcs(width, trackVolume); // Draw innerArcs\n\n  circle.selectAll(\".innerArcs\").data(innerArcs).enter().append(\"path\").attr(\"class\", \"innerArcs\").attr(\"d\", arc).style(\"fill\", trackColor).style(\"opacity\", (d, i) => {\n    return 1 / NUMSLICES * i;\n  });\n  circle.append(\"line\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", -(width / 30 * trackVolume + width / 350)).style(\"stroke\", trackColor).style(\"stroke-width\", 1.5); // Add animation to make the circle turn\n\n  const turnTimer = d3.timer(turn);\n\n  function turn(elapsed) {\n    const elapsedSeconds = elapsed / 1000 % duration;\n    const turnScale = d3.scaleLinear().range([1, 0]).domain([0, duration]);\n    circle.style(\"transform\", \"rotate(\".concat(-turnScale(elapsedSeconds), \"turn)\"));\n\n    if (d3.select(\".circle\").empty()) {\n      turnTimer.stop();\n    }\n  }\n\n  return circlesGroup;\n}\n\nfunction createInnerArcs(width, trackVolume) {\n  return d3.range(NUMSLICES).map((d, i) => {\n    return {\n      startAngle: deg2rad(degreesFromSlice(d)),\n      endAngle: i === NUMSLICES - 1 ? deg2rad(degreesFromSlice(d + 1)) : deg2rad(degreesFromSlice(d + 2)),\n      innerRadius: 0,\n      outerRadius: width / 30 * trackVolume\n    };\n  });\n}\n\nfunction createOuterArcs(width, trackVolume) {\n  return d3.range(NUMSLICES).map((d, i) => {\n    return {\n      startAngle: deg2rad(degreesFromSlice(d)),\n      endAngle: i === NUMSLICES - 1 ? deg2rad(degreesFromSlice(d + 1)) : deg2rad(degreesFromSlice(d + 2)),\n      innerRadius: 0,\n      outerRadius: width / 30 * trackVolume * 2\n    };\n  });\n} // Transform degrees into radians\n\n\nfunction deg2rad(degrees) {\n  return degrees * (Math.PI / 180);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/drawCircle.ts"],"names":["d3","NUMSLICES","degreesFromSlice","scaleLinear","range","domain","drawCircle","parent","width","cx","cy","clip","duration","audio","durationSeconds","trackVolume","volume","trackColor","color","circlesGroup","append","attr","circle","arc","outerArcs","createOuterArcs","selectAll","data","enter","style","d","i","innerArcs","createInnerArcs","turnTimer","timer","turn","elapsed","elapsedSeconds","turnScale","select","empty","stop","map","startAngle","deg2rad","endAngle","innerRadius","outerRadius","degrees","Math","PI"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport { Clip } from \"../Audioset\";\n\n// Number of slices in a circle\nconst NUMSLICES = 36;\n\n// Scale. Get the degrees for a specific slice\nconst degreesFromSlice = d3\n  .scaleLinear()\n  .range([0, 360]) // working in degrees\n  .domain([0, NUMSLICES]);\n\nexport default function drawCircle(\n  parent: any,\n  width: number,\n  cx: number,\n  cy: number,\n  clip: Clip,\n) {\n  const duration = clip.audio.durationSeconds;\n  const trackVolume = clip.audio.volume;\n  const trackColor = clip.color;\n  const circlesGroup = parent\n    .append(\"g\")\n    .attr(\"class\", \"circleGroup\")\n    .attr(\"transform\", `translate(${cx}, ${cy})`);\n\n  // We need to group again, so that the circle turns in its location\n  const circle = circlesGroup.append(\"g\").attr(\"class\", \"circle\");\n\n  // Arc generator\n  const arc = d3.arc();\n\n  // Create outerArcs data\n  const outerArcs = createOuterArcs(width, trackVolume);\n\n  // Draw outerArcs\n  circle\n    .selectAll(\".outerArcs\")\n    .data(outerArcs)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"outerArcs\")\n    .attr(\"d\", arc)\n    .style(\"fill\", trackColor)\n    .style(\"opacity\", (d: any, i: number) => {\n      return (0.3 / NUMSLICES) * i;\n    });\n\n  // Create innerArcs data\n  const innerArcs = createInnerArcs(width, trackVolume);\n\n  // Draw innerArcs\n  circle\n    .selectAll(\".innerArcs\")\n    .data(innerArcs)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"innerArcs\")\n    .attr(\"d\", arc)\n    .style(\"fill\", trackColor)\n    .style(\"opacity\", (d: any, i: number) => {\n      return (1 / NUMSLICES) * i;\n    });\n\n  circle\n    .append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", 0)\n    .attr(\"x2\", 0)\n    .attr(\"y2\", -((width / 30) * trackVolume + width / 350))\n    .style(\"stroke\", trackColor)\n    .style(\"stroke-width\", 1.5);\n\n  // Add animation to make the circle turn\n  const turnTimer = d3.timer(turn);\n  function turn(elapsed: number) {\n    const elapsedSeconds = (elapsed / 1000) % duration;\n    const turnScale = d3\n      .scaleLinear()\n      .range([1, 0])\n      .domain([0, duration]);\n    circle.style(\"transform\", `rotate(${-turnScale(elapsedSeconds)}turn)`);\n    if (d3.select(\".circle\").empty()) {\n      turnTimer.stop();\n    }\n  }\n\n  return circlesGroup;\n}\n\nfunction createInnerArcs(width: number, trackVolume: number) {\n  return d3.range(NUMSLICES).map((d, i) => {\n    return {\n      startAngle: deg2rad(degreesFromSlice(d)),\n      endAngle:\n        i === NUMSLICES - 1\n          ? deg2rad(degreesFromSlice(d + 1))\n          : deg2rad(degreesFromSlice(d + 2)),\n      innerRadius: 0,\n      outerRadius: (width / 30) * trackVolume,\n    };\n  });\n}\n\nfunction createOuterArcs(width: number, trackVolume: number) {\n  return d3.range(NUMSLICES).map((d, i) => {\n    return {\n      startAngle: deg2rad(degreesFromSlice(d)),\n      endAngle:\n        i === NUMSLICES - 1\n          ? deg2rad(degreesFromSlice(d + 1))\n          : deg2rad(degreesFromSlice(d + 2)),\n      innerRadius: 0,\n      outerRadius: (width / 30) * trackVolume * 2,\n    };\n  });\n}\n\n// Transform degrees into radians\nfunction deg2rad(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\n"]},"metadata":{},"sourceType":"module"}