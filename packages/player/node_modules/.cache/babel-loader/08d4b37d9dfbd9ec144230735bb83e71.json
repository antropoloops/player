{"ast":null,"code":"import { getCoverSize, getHorizontalPadding, getVerticalPadding, getInfoHeight } from \"./dimensions\";\nexport default function drawAlbum(el, width, clip) {\n  const trackNumber = clip.trackNum;\n  const imageUrl = clip.resources.cover.small;\n  const country = clip.country;\n  const trackColor = clip.color;\n  const album = el.append(\"g\");\n  const coverSize = getCoverSize(width);\n  const horizontalPadding = getHorizontalPadding(width);\n  const verticalPadding = getVerticalPadding(width);\n  const infoHeight = getInfoHeight(width);\n  const fontSize = \"1.1vw\";\n  album.append(\"svg:image\").attr(\"width\", coverSize).attr(\"height\", coverSize).attr(\"x\", trackNumber * coverSize).attr(\"y\", 0).style(\"stroke\", \"white\").attr(\"xlink:href\", imageUrl); // Draw country rectangle\n\n  album.append(\"rect\").attr(\"width\", coverSize).attr(\"height\", infoHeight).attr(\"x\", trackNumber * coverSize).attr(\"y\", coverSize + verticalPadding).style(\"fill\", trackColor); // Draw country text\n\n  const countryText = album.append(\"text\").attr(\"id\", \"countryText\" + trackNumber).attr(\"x\", trackNumber * coverSize + horizontalPadding).attr(\"y\", coverSize + verticalPadding + infoHeight / 2).attr(\"dy\", \"0.35em\").style(\"font-size\", fontSize).text(country); // Trucate text larger than coverSize\n\n  const countryTextId = \"countryText\" + trackNumber;\n\n  function wrap(textElement, textId) {\n    // FIXME: don't use document\n    const danger = document.getElementById(textId);\n    if (!danger) return;\n    let textLength = danger.getBBox().width;\n    let text = textElement.text();\n\n    while (textLength > coverSize - horizontalPadding * 2 && text.length > 0) {\n      text = text.slice(0, -1);\n      textElement.text(text + \"...\");\n      textLength = danger.getBBox().width;\n    }\n  }\n\n  wrap(countryText, countryTextId);\n  return album;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/drawAlbum.ts"],"names":["getCoverSize","getHorizontalPadding","getVerticalPadding","getInfoHeight","drawAlbum","el","width","clip","trackNumber","trackNum","imageUrl","resources","cover","small","country","trackColor","color","album","append","coverSize","horizontalPadding","verticalPadding","infoHeight","fontSize","attr","style","countryText","text","countryTextId","wrap","textElement","textId","danger","document","getElementById","textLength","getBBox","length","slice"],"mappings":"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","sourcesContent":["import { getCoverSize, getHorizontalPadding, getVerticalPadding, getInfoHeight } from \"./dimensions\";\nimport { Clip } from \"../Audioset\";\n\nexport default function drawAlbum(el: any, width: number, clip: Clip) {\n  const trackNumber = clip.trackNum;\n  const imageUrl = clip.resources.cover.small;\n  const country = clip.country;\n  const trackColor = clip.color;\n  const album = el.append(\"g\");\n  const coverSize = getCoverSize(width);\n  const horizontalPadding = getHorizontalPadding(width);\n  const verticalPadding = getVerticalPadding(width);\n  const infoHeight = getInfoHeight(width);\n  const fontSize = \"1.1vw\";\n\n  album\n    .append(\"svg:image\")\n    .attr(\"width\", coverSize)\n    .attr(\"height\", coverSize)\n    .attr(\"x\", trackNumber * coverSize)\n    .attr(\"y\", 0)\n    .style(\"stroke\", \"white\")\n    .attr(\"xlink:href\", imageUrl);\n\n  // Draw country rectangle\n  album\n    .append(\"rect\")\n    .attr(\"width\", coverSize)\n    .attr(\"height\", infoHeight)\n    .attr(\"x\", trackNumber * coverSize)\n    .attr(\"y\", coverSize + verticalPadding)\n    .style(\"fill\", trackColor);\n\n  // Draw country text\n  const countryText = album\n    .append(\"text\")\n    .attr(\"id\", \"countryText\" + trackNumber)\n    .attr(\"x\", trackNumber * coverSize + horizontalPadding)\n    .attr(\"y\", coverSize + verticalPadding + infoHeight / 2)\n    .attr(\"dy\", \"0.35em\")\n    .style(\"font-size\", fontSize)\n    .text(country);\n\n  // Trucate text larger than coverSize\n  const countryTextId = \"countryText\" + trackNumber;\n\n  function wrap(textElement: any, textId: any) {\n    // FIXME: don't use document\n    const danger = document.getElementById(textId) as any;\n    if (!danger) return;\n    let textLength = danger.getBBox().width;\n    let text = textElement.text();\n\n    while (textLength > coverSize - horizontalPadding * 2 && text.length > 0) {\n      text = text.slice(0, -1);\n      textElement.text(text + \"...\");\n      textLength = danger.getBBox().width;\n    }\n  }\n  wrap(countryText, countryTextId);\n\n  return album;\n}\n"]},"metadata":{},"sourceType":"module"}