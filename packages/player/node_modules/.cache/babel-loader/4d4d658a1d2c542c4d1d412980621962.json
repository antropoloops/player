{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Browser.tsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Browser.css\";\nimport { Scroll } from \"./Scroll\";\nimport { Header } from \"./shared/Header\";\nimport { Markdown } from \"./shared/Markdown\";\nimport { useDeviceType } from \"./useDeviceType\";\n\nconst Project = ({\n  audioset\n}) => {\n  const audiosets = audioset.audiosets || [];\n\n  const _useDeviceType = useDeviceType(),\n        isDesktop = _useDeviceType.isDesktop,\n        isMobile = _useDeviceType.isMobile;\n\n  return React.createElement(\"div\", {\n    className: \"App Project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Header, {\n    meta: audioset.meta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, isMobile && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: audioset.meta.title,\n    src: audioset.meta.logo_url,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Markdown, {\n    className: \"mobile\",\n    markdown: audioset.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"Audiosets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, audiosets.map(child => React.createElement(AudiosetItem, {\n    key: child.id,\n    audioset: child,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))))), isDesktop && React.createElement(\"div\", {\n    className: \"visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    markdown: audioset.meta.readme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Welcome\"));\n};\n\nexport default Project;\n\nconst AudiosetItem = ({\n  audioset\n}) => React.createElement(Link, {\n  to: \"/set/\".concat(audioset.publish_path),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"AudiosetItem\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: audioset.logo_url,\n  alt: audioset.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"meta\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, audioset.title), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, audioset.description))));","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Browser.tsx"],"names":["React","Link","Scroll","Header","Markdown","useDeviceType","Project","audioset","audiosets","isDesktop","isMobile","meta","title","logo_url","width","readme","map","child","id","AudiosetItem","publish_path","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AudiosetProject, AudiosetReference } from \"../audioset\";\nimport \"./Browser.css\";\nimport { Scroll } from \"./Scroll\";\nimport { Header } from \"./shared/Header\";\nimport { Markdown } from \"./shared/Markdown\";\nimport { useDeviceType } from \"./useDeviceType\";\n\ninterface ProjectProps {\n  audioset: AudiosetProject;\n}\n\nconst Project = ({ audioset }: ProjectProps) => {\n  const audiosets = audioset.audiosets || [];\n  const { isDesktop, isMobile } = useDeviceType();\n\n  return (\n    <div className=\"App Project\">\n      <Header meta={audioset.meta} />\n      <Scroll>\n        <div className=\"content\">\n          {isMobile && (\n            <div>\n              <img\n                alt={audioset.meta.title}\n                src={audioset.meta.logo_url}\n                style={{ width: \"100%\" }}\n              />\n              <Markdown className=\"mobile\" markdown={audioset.meta.readme} />\n            </div>\n          )}\n          <ul className=\"Audiosets\">\n            {audiosets.map(child => (\n              <AudiosetItem key={child.id} audioset={child} />\n            ))}\n          </ul>\n        </div>\n      </Scroll>\n      {isDesktop && (\n        <div className=\"visuals\">\n          <Markdown markdown={audioset.meta.readme} />\n        </div>\n      )}\n      <div className=\"footer\">Welcome</div>\n    </div>\n  );\n};\n\nexport default Project;\n\ninterface AudiosetItemProps {\n  audioset: AudiosetReference;\n}\nconst AudiosetItem = ({ audioset }: AudiosetItemProps) => (\n  <Link to={`/set/${audioset.publish_path}`}>\n    <div className=\"AudiosetItem\">\n      <img src={audioset.logo_url} alt={audioset.title} />\n      <div className=\"meta\">\n        <h3>{audioset.title}</h3>\n        <p>{audioset.description}</p>\n      </div>\n    </div>\n  </Link>\n);\n"]},"metadata":{},"sourceType":"module"}