{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan } from \"./math.js\";\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [sin(k) / tanPhi, phi + (1 - cos(k)) / tanPhi];\n}\n\npolyconicRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10,\n      delta;\n\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  tanPhi = tan(phi);\n  return [(abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi), phi];\n};\n\nexport default function () {\n  return projection(polyconicRaw).scale(103.74);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/polyconic.js"],"names":["geoProjection","projection","abs","acos","asin","cos","epsilon","halfPi","sign","sin","tan","polyconicRaw","lambda","phi","tanPhi","k","invert","x","y","i","delta","secPhi","j","scale"],"mappings":"AAAA,SAAQA,aAAa,IAAIC,UAAzB,QAA0C,QAA1C;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,OAA9B,EAAuCC,MAAvC,EAA+CC,IAA/C,EAAqDC,GAArD,EAA0DC,GAA1D,QAAoE,WAApE;AAEA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,GAA9B,EAAmC;AACxC,MAAIX,GAAG,CAACW,GAAD,CAAH,GAAWP,OAAf,EAAwB,OAAO,CAACM,MAAD,EAAS,CAAT,CAAP;AACxB,MAAIE,MAAM,GAAGJ,GAAG,CAACG,GAAD,CAAhB;AAAA,MACIE,CAAC,GAAGH,MAAM,GAAGH,GAAG,CAACI,GAAD,CADpB;AAEA,SAAO,CACLJ,GAAG,CAACM,CAAD,CAAH,GAASD,MADJ,EAELD,GAAG,GAAG,CAAC,IAAIR,GAAG,CAACU,CAAD,CAAR,IAAeD,MAFhB,CAAP;AAID;;AAEDH,YAAY,CAACK,MAAb,GAAsB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACnC,MAAIhB,GAAG,CAACgB,CAAD,CAAH,GAASZ,OAAb,EAAsB,OAAO,CAACW,CAAD,EAAI,CAAJ,CAAP;AACtB,MAAIF,CAAC,GAAGE,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAApB;AAAA,MACIL,GAAG,GAAGK,CAAC,GAAG,GADd;AAAA,MAEIC,CAAC,GAAG,EAFR;AAAA,MAEYC,KAFZ;;AAGA,KAAG;AACD,QAAIN,MAAM,GAAGJ,GAAG,CAACG,GAAD,CAAhB;AAAA,QACIQ,MAAM,GAAG,IAAIhB,GAAG,CAACQ,GAAD,CADpB;AAAA,QAEIS,CAAC,GAAGP,CAAC,GAAG,IAAIG,CAAJ,GAAQL,GAAZ,GAAkBA,GAAG,GAAGA,GAFhC;AAGAA,IAAAA,GAAG,IAAIO,KAAK,GAAG,CAACN,MAAM,GAAGQ,CAAT,GAAa,KAAKT,GAAG,GAAGK,CAAX,CAAd,KAAgC,IAAII,CAAC,GAAGD,MAAJ,GAAaA,MAAjB,GAA0B,KAAKR,GAAG,GAAGK,CAAX,IAAgBJ,MAA1E,CAAf;AACD,GALD,QAKSZ,GAAG,CAACkB,KAAD,CAAH,GAAad,OAAb,IAAwB,EAAEa,CAAF,GAAM,CALvC;;AAMAL,EAAAA,MAAM,GAAGJ,GAAG,CAACG,GAAD,CAAZ;AACA,SAAO,CACL,CAACX,GAAG,CAACgB,CAAD,CAAH,GAAShB,GAAG,CAACW,GAAG,GAAG,IAAIC,MAAX,CAAZ,GAAiCV,IAAI,CAACa,CAAC,GAAGH,MAAL,CAArC,GAAoDN,IAAI,CAACS,CAAD,CAAJ,IAAWd,IAAI,CAACD,GAAG,CAACe,CAAC,GAAGH,MAAL,CAAJ,CAAJ,GAAwBP,MAAnC,CAArD,IAAmGE,GAAG,CAACI,GAAD,CADjG,EAELA,GAFK,CAAP;AAID,CAhBD;;AAkBA,eAAe,YAAW;AACxB,SAAOZ,UAAU,CAACU,YAAD,CAAV,CACFY,KADE,CACI,MADJ,CAAP;AAED","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan} from \"./math.js\";\n\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [\n    sin(k) / tanPhi,\n    phi + (1 - cos(k)) / tanPhi\n  ];\n}\n\npolyconicRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10, delta;\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n  tanPhi = tan(phi);\n  return [\n    (abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(polyconicRaw)\n      .scale(103.74);\n}\n"]},"metadata":{},"sourceType":"module"}