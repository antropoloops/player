{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { hammerRaw } from \"./hammer.js\";\nimport { cos, pi, sin } from \"./math.js\"; // Bertin 1953 as a modified Briesemeister\n// https://bl.ocks.org/Fil/5b9ee9636dfb6ffa53443c9006beb642\n\nexport function bertin1953Raw() {\n  var hammer = hammerRaw(1.68, 2),\n      fu = 1.4,\n      k = 12;\n  return function (lambda, phi) {\n    if (lambda + phi < -fu) {\n      var u = (lambda - phi + 1.6) * (lambda + phi + fu) / 8;\n      lambda += u;\n      phi -= 0.8 * u * sin(phi + pi / 2);\n    }\n\n    var r = hammer(lambda, phi);\n    var d = (1 - cos(lambda * phi)) / k;\n\n    if (r[1] < 0) {\n      r[0] *= 1 + d;\n    }\n\n    if (r[1] > 0) {\n      r[1] *= 1 + d / 1.5 * r[0] * r[0];\n    }\n\n    return r;\n  };\n}\nexport default function () {\n  var p = projection(bertin1953Raw());\n  p.rotate([-16.5, -42]);\n  delete p.rotate;\n  return p.scale(176.57).center([7.93, 0.09]);\n}","map":null,"metadata":{},"sourceType":"module"}