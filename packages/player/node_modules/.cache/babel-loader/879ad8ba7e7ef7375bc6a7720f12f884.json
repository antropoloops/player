{"ast":null,"code":"import _slicedToArray from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{player}from\"../../Player\";import{Clip}from\"./Clip\";export var Clips=function Clips(_ref){var audioset=_ref.audioset;var state=useControlState();if(!audioset||!audioset.tracks){return React.createElement(React.Fragment,null);}return React.createElement(\"div\",{className:\"Clips\"},audioset.tracks.map(function(track){return React.createElement(\"div\",{key:track.id,className:\"Track\",style:{backgroundColor:track.color}},React.createElement(\"h2\",{className:\"title\"},track.name),track.clipIds.map(function(clipId){return React.createElement(Clip,{key:clipId,clip:audioset.index.clipById[clipId],isActive:state.clips[clipId].state===\"playing\",onClick:function onClick(){return player.control.toggleClip(clipId,0);}});}));}));};function useControlState(){var _useState=useState(player.control.getState()),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){return player.onControlStateChanged(function(controlState){setState(controlState);});});return state;}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Clips.tsx"],"names":["React","useEffect","useState","player","Clip","Clips","audioset","state","useControlState","tracks","map","track","id","backgroundColor","color","name","clipIds","clipId","index","clipById","clips","control","toggleClip","getState","setState","onControlStateChanged","controlState"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,MAAT,KAAuB,cAAvB,CAEA,OAASC,IAAT,KAAqB,QAArB,CAMA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA8B,IAA3BC,CAAAA,QAA2B,MAA3BA,QAA2B,CACjD,GAAMC,CAAAA,KAAK,CAAGC,eAAe,EAA7B,CAEA,GAAI,CAACF,QAAD,EAAa,CAACA,QAAQ,CAACG,MAA3B,CAAmC,CACjC,MAAO,yCAAP,CACD,CAED,MACE,4BAAK,SAAS,CAAC,OAAf,EACGH,QAAQ,CAACG,MAAT,CAAgBC,GAAhB,CAAoB,SAAAC,KAAK,QACxB,4BACE,GAAG,CAAEA,KAAK,CAACC,EADb,CAEE,SAAS,CAAC,OAFZ,CAGE,KAAK,CAAE,CAAEC,eAAe,CAAEF,KAAK,CAACG,KAAzB,CAHT,EAKE,0BAAI,SAAS,CAAC,OAAd,EAAuBH,KAAK,CAACI,IAA7B,CALF,CAMGJ,KAAK,CAACK,OAAN,CAAcN,GAAd,CAAkB,SAAAO,MAAM,QACvB,qBAAC,IAAD,EACE,GAAG,CAAEA,MADP,CAEE,IAAI,CAAEX,QAAQ,CAACY,KAAT,CAAeC,QAAf,CAAwBF,MAAxB,CAFR,CAGE,QAAQ,CAAEV,KAAK,CAACa,KAAN,CAAYH,MAAZ,EAAoBV,KAApB,GAA8B,SAH1C,CAIE,OAAO,CAAE,yBAAMJ,CAAAA,MAAM,CAACkB,OAAP,CAAeC,UAAf,CAA0BL,MAA1B,CAAkC,CAAlC,CAAN,EAJX,EADuB,EAAxB,CANH,CADwB,EAAzB,CADH,CADF,CAqBD,CA5BM,CA8BP,QAAST,CAAAA,eAAT,EAAyC,eACbN,QAAQ,CAACC,MAAM,CAACkB,OAAP,CAAeE,QAAf,EAAD,CADK,wCAChChB,KADgC,eACzBiB,QADyB,eAEvCvB,SAAS,CAAC,iBACRE,CAAAA,MAAM,CAACsB,qBAAP,CAA6B,SAAAC,YAAY,CAAI,CAC3CF,QAAQ,CAACE,YAAD,CAAR,CACD,CAFD,CADQ,EAAD,CAAT,CAKA,MAAOnB,CAAAA,KAAP,CACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Audioset } from \"../../Audioset\";\nimport { player } from \"../../Player\";\nimport { ControlState } from \"../../Player/AudiosetControl\";\nimport { Clip } from \"./Clip\";\n\ninterface ClipsProps {\n  audioset: Audioset;\n}\n\nexport const Clips = ({ audioset }: ClipsProps) => {\n  const state = useControlState();\n\n  if (!audioset || !audioset.tracks) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"Clips\">\n      {audioset.tracks.map(track => (\n        <div\n          key={track.id}\n          className=\"Track\"\n          style={{ backgroundColor: track.color }}\n        >\n          <h2 className=\"title\">{track.name}</h2>\n          {track.clipIds.map(clipId => (\n            <Clip\n              key={clipId}\n              clip={audioset.index.clipById[clipId]}\n              isActive={state.clips[clipId].state === \"playing\"}\n              onClick={() => player.control.toggleClip(clipId, 0)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nfunction useControlState(): ControlState {\n  const [state, setState] = useState(player.control.getState());\n  useEffect(() =>\n    player.onControlStateChanged(controlState => {\n      setState(controlState);\n    }),\n  );\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}