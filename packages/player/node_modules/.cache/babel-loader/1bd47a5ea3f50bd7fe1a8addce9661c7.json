{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/App/Player/Player.tsx\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"./index.css\";\nimport Loader from \"../../lib/loader\";\nimport Preview from \"./Preview\";\nimport { Clips } from \"./Clips\";\nimport { Visuals } from \"./Visuals\";\nimport { Header } from \"../shared/Header\";\nconst SKIP = false;\n\nconst Player = ({\n  audioset\n}) => {\n  const _useLoader = useLoader(audioset),\n        _useLoader2 = _slicedToArray(_useLoader, 2),\n        loader = _useLoader2[0],\n        loadState = _useLoader2[1];\n\n  useVisuals(audioset);\n  const status = loadState.status;\n  return React.createElement(\"div\", {\n    className: \"App Player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Header, {\n    meta: audioset.meta,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"scroll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, SKIP || status === \"ready\" ? React.createElement(Clips, {\n    audioset: audioset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : React.createElement(Preview, {\n    audioset: audioset,\n    loadState: loadState,\n    onStart: () => loader.start(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Player\"), React.createElement(\"div\", {\n    className: \"visuals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, (SKIP || status === \"ready\") && React.createElement(Visuals, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nexport default Player;\n\nfunction useLoader(audioset) {\n  const _useState = useState({\n    status: \"\",\n    total: 0,\n    completed: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadState = _useState2[0],\n        setLoadState = _useState2[1];\n\n  const loader = useMemo(() => {\n    const loader = new Loader(audioset);\n    loader.onChange(setLoadState);\n    setLoadState(loader.getState());\n    return loader;\n  }, [audioset]);\n  return [loader, loadState];\n}\n\nfunction useVisuals(audioset) {\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        visuals = _useState4[0],\n        setVisuals = _useState4[1];\n\n  useEffect(() => {\n    console.log(\"open visuals\", audioset.id);\n    import(\"../../lib/visuals\").then(visuals => {\n      setVisuals(audioset && visuals.init(audioset));\n    });\n  }, [audioset]);\n  return visuals;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/App/Player/Player.tsx"],"names":["React","useState","useEffect","useMemo","Loader","Preview","Clips","Visuals","Header","SKIP","Player","audioset","useLoader","loader","loadState","useVisuals","status","meta","start","total","completed","setLoadState","onChange","getState","visuals","setVisuals","console","log","id","then","init"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport \"./index.css\";\nimport Loader, { LoadState } from \"../../lib/loader\";\nimport Preview from \"./Preview\";\nimport { Clips } from \"./Clips\";\nimport { Visuals } from \"./Visuals\";\nimport { Header } from \"../shared/Header\";\nimport { Audioset } from \"../../lib/audioset\";\n\nconst SKIP = false;\n\ntype PlayerProps = {\n  audioset: Audioset;\n};\n\nconst Player = ({ audioset }: PlayerProps) => {\n  const [loader, loadState] = useLoader(audioset);\n  useVisuals(audioset);\n\n  const status = loadState.status;\n\n  return (\n    <div className=\"App Player\">\n      <Header meta={audioset.meta} />\n      <div className=\"scroll\">\n        <div className=\"content\">\n          {SKIP || status === \"ready\" ? (\n            <Clips audioset={audioset} />\n          ) : (\n            <Preview\n              audioset={audioset}\n              loadState={loadState}\n              onStart={() => loader.start()}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"footer\">Player</div>\n      <div className=\"visuals\">\n        {(SKIP || status === \"ready\") && <Visuals />}\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n\nfunction useLoader(audioset: Audioset): [Loader, LoadState] {\n  const [loadState, setLoadState] = useState({\n    status: \"\",\n    total: 0,\n    completed: 0\n  });\n  const loader = useMemo(() => {\n    const loader = new Loader(audioset);\n    loader.onChange(setLoadState);\n    setLoadState(loader.getState());\n    return loader;\n  }, [audioset]);\n  return [loader, loadState];\n}\n\nfunction useVisuals(audioset: Audioset) {\n  const [visuals, setVisuals] = useState();\n\n  useEffect(() => {\n    console.log(\"open visuals\", audioset.id);\n    import(\"../../lib/visuals\").then(visuals => {\n      setVisuals(audioset && visuals.init(audioset));\n    });\n  }, [audioset]);\n\n  return visuals;\n}\n"]},"metadata":{},"sourceType":"module"}