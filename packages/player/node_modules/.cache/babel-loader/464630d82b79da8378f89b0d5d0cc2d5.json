{"ast":null,"code":"import { geoProjection as projection } from \"d3-geo\";\nimport { abs, halfPi, pi, sign, sqrt1_2 } from \"../math.js\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function (x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * x0 + (y > 0 ? 1 : -1) * d,\n          y1 = -s * y0 + (x > 0 ? 1 : -1) * d;\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n  return projection(projectQuincuncial).rotate([-90, -90, 45]).clipAngle(180 - 1e-3);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/quincuncial/index.js"],"names":["geoProjection","projection","abs","halfPi","pi","sign","sqrt1_2","project","dx","projectQuincuncial","lambda","phi","t","p","x","y","d","s","invert","x0","y0","x1","y1","rotate","clipAngle"],"mappings":"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","sourcesContent":["import {geoProjection as projection} from \"d3-geo\";\nimport {abs, halfPi, pi, sign, sqrt1_2} from \"../math.js\";\n\nexport default function(project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function(x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * x0 + (y > 0 ? 1 : -1) * d,\n          y1 = -s * y0 + (x > 0 ? 1 : -1) * d;\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n\n  return projection(projectQuincuncial)\n      .rotate([-90, -90, 45])\n      .clipAngle(180 - 1e-3);\n}\n"]},"metadata":{},"sourceType":"module"}