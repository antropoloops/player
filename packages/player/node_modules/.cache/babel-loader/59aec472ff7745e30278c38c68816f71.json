{"ast":null,"code":"import { select } from \"d3\";\n\n/**\n * A display encapsulates drawing mechanics\n *\n * @param {*} el\n */\nexport class Display {\n  createSvg() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  constructor(el) {\n    this.el = el;\n    this.dimensions = void 0;\n    this.svg = void 0;\n    this.dimensions = {\n      width: this.el.offsetWidth,\n      height: this.el.offsetHeight\n    };\n    const container = select(this.el);\n    this.svg = container.append(\"svg\").attr(\"width\", this.dimensions.width).attr(\"height\", this.dimensions.height).attr(\"viewBox\", \"0 0 \".concat(this.dimensions.width, \" \").concat(this.dimensions.height));\n    this.clear();\n  }\n\n  setVisible(isVisible) {\n    this.el.style.display = isVisible ? \"block\" : \"none\";\n  }\n\n  clear() {\n    const container = select(this.el);\n    container.selectAll(\"*\").remove();\n  }\n\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/visuals/display.ts"],"names":["select","Display","createSvg","Error","constructor","el","dimensions","svg","width","offsetWidth","height","offsetHeight","container","append","attr","clear","setVisible","isVisible","style","display","selectAll","remove"],"mappings":"AAAA,SAASA,MAAT,QAAkC,IAAlC;;AAOA;;;;;AAMA,OAAO,MAAMC,OAAN,CAAc;AACnBC,EAAAA,SAAS,GAAG;AACV,UAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAIDC,EAAAA,WAAW,CAASC,EAAT,EAA0B;AAAA,SAAjBA,EAAiB,GAAjBA,EAAiB;AAAA,SAHrCC,UAGqC;AAAA,SAFrCC,GAEqC;AACnC,SAAKD,UAAL,GAAkB;AAChBE,MAAAA,KAAK,EAAE,KAAKH,EAAL,CAAQI,WADC;AAEhBC,MAAAA,MAAM,EAAE,KAAKL,EAAL,CAAQM;AAFA,KAAlB;AAIA,UAAMC,SAAS,GAAGZ,MAAM,CAAC,KAAKK,EAAN,CAAxB;AAEA,SAAKE,GAAL,GAAWK,SAAS,CACjBC,MADQ,CACD,KADC,EAERC,IAFQ,CAEH,OAFG,EAEM,KAAKR,UAAL,CAAgBE,KAFtB,EAGRM,IAHQ,CAGH,QAHG,EAGO,KAAKR,UAAL,CAAgBI,MAHvB,EAIRI,IAJQ,CAIH,SAJG,gBAIe,KAAKR,UAAL,CAAgBE,KAJ/B,cAIwC,KAAKF,UAAL,CAAgBI,MAJxD,EAAX;AAMA,SAAKK,KAAL;AACD;;AAEDC,EAAAA,UAAU,CAACC,SAAD,EAAqB;AAC7B,SAAKZ,EAAL,CAAQa,KAAR,CAAcC,OAAd,GAAwBF,SAAS,GAAG,OAAH,GAAa,MAA9C;AACD;;AAEDF,EAAAA,KAAK,GAAG;AACN,UAAMH,SAAS,GAAGZ,MAAM,CAAC,KAAKK,EAAN,CAAxB;AACAO,IAAAA,SAAS,CAACQ,SAAV,CAAoB,GAApB,EAAyBC,MAAzB;AACD;;AA9BkB","sourcesContent":["import { select, Selection } from \"d3\";\n\nexport type Dimension = {\n  width: number;\n  height: number;\n};\n\n/**\n * A display encapsulates drawing mechanics\n *\n * @param {*} el\n */\n\nexport class Display {\n  createSvg() {\n    throw new Error(\"Method not implemented.\");\n  }\n  dimensions: Dimension;\n  svg: Selection<SVGSVGElement, unknown, null, undefined>;\n\n  constructor(private el: HTMLElement) {\n    this.dimensions = {\n      width: this.el.offsetWidth,\n      height: this.el.offsetHeight,\n    };\n    const container = select(this.el);\n\n    this.svg = container\n      .append(\"svg\")\n      .attr(\"width\", this.dimensions.width)\n      .attr(\"height\", this.dimensions.height)\n      .attr(\"viewBox\", `0 0 ${this.dimensions.width} ${this.dimensions.height}`);\n\n    this.clear();\n  }\n\n  setVisible(isVisible: boolean) {\n    this.el.style.display = isVisible ? \"block\" : \"none\";\n  }\n\n  clear() {\n    const container = select(this.el);\n    container.selectAll(\"*\").remove();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}