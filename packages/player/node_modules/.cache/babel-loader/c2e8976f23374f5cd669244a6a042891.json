{"ast":null,"code":"import debug from \"debug\";\nexport let context;\nconst log = debug(\"atpls:context\");\n/**\n * @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio\n */\n\nexport async function getAudioContext() {\n  context = context || createAudioContext();\n  console.log(\"ea\", context.state);\n\n  if (context.state !== \"running\" && context.resume) {\n    return context.resume().then(() => context);\n  } else {\n    return context;\n  }\n}\n\nfunction createAudioContext() {\n  log(\"create context\"); // iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\n\n  const ctx = new AudioContext();\n  const buffer = ctx.createBuffer(1, 1, ctx.sampleRate);\n  const source = ctx.createBufferSource();\n  source.buffer = buffer;\n  source.connect(ctx.destination);\n  source.start(0);\n  return ctx;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/Player/AudioContext.ts"],"names":["debug","context","log","getAudioContext","createAudioContext","console","state","resume","then","ctx","AudioContext","buffer","createBuffer","sampleRate","source","createBufferSource","connect","destination","start"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAIC,OAAJ;AAEP,MAAMC,GAAG,GAAGF,KAAK,CAAC,eAAD,CAAjB;AAEA;;;;AAGA,OAAO,eAAeG,eAAf,GAAwD;AAC7DF,EAAAA,OAAO,GAAGA,OAAO,IAAIG,kBAAkB,EAAvC;AACAC,EAAAA,OAAO,CAACH,GAAR,CAAY,IAAZ,EAAkBD,OAAO,CAACK,KAA1B;;AAEA,MAAIL,OAAO,CAACK,KAAR,KAAkB,SAAlB,IAA+BL,OAAO,CAACM,MAA3C,EAAmD;AACjD,WAAON,OAAO,CAACM,MAAR,GAAiBC,IAAjB,CAAsB,MAAMP,OAA5B,CAAP;AACD,GAFD,MAEO;AACL,WAAOA,OAAP;AACD;AACF;;AAED,SAASG,kBAAT,GAA8B;AAC5BF,EAAAA,GAAG,CAAC,gBAAD,CAAH,CAD4B,CAE5B;;AACA,QAAMO,GAAG,GAAG,IAAIC,YAAJ,EAAZ;AACA,QAAMC,MAAM,GAAGF,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBH,GAAG,CAACI,UAA3B,CAAf;AACA,QAAMC,MAAM,GAAGL,GAAG,CAACM,kBAAJ,EAAf;AACAD,EAAAA,MAAM,CAACH,MAAP,GAAgBA,MAAhB;AACAG,EAAAA,MAAM,CAACE,OAAP,CAAeP,GAAG,CAACQ,WAAnB;AACAH,EAAAA,MAAM,CAACI,KAAP,CAAa,CAAb;AACA,SAAOT,GAAP;AACD","sourcesContent":["import debug from \"debug\";\nexport let context: AudioContext | undefined;\n\nconst log = debug(\"atpls:context\");\n\n/**\n * @see https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio\n */\nexport async function getAudioContext(): Promise<AudioContext> {\n  context = context || createAudioContext();\n  console.log(\"ea\", context.state);\n\n  if (context.state !== \"running\" && context.resume) {\n    return context.resume().then(() => context);\n  } else {\n    return context;\n  }\n}\n\nfunction createAudioContext() {\n  log(\"create context\");\n  // iOS hack. See https://github.com/tambien/StartAudioContext/blob/master/StartAudioContext.js\n  const ctx = new AudioContext();\n  const buffer = ctx.createBuffer(1, 1, ctx.sampleRate);\n  const source = ctx.createBufferSource();\n  source.buffer = buffer;\n  source.connect(ctx.destination);\n  source.start(0);\n  return ctx;\n}\n"]},"metadata":{},"sourceType":"module"}