{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Controller.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { player } from \"../../player\";\nimport \"./Controller.css\";\nimport { Track } from \"./Track\";\nexport const Controller = ({\n  audioset,\n  state\n}) => {\n  if (!audioset || !audioset.tracks) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Audioset not loaded\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Controller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, audioset.tracks.map(track => React.createElement(Track, {\n    key: track.id,\n    track: track,\n    audioset: audioset,\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nfunction useControlState() {\n  const _useState = useState(player.control.getState()),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => player.onControlStateChanged(controlState => {\n    setState(controlState);\n  }));\n  return state;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Controller.tsx"],"names":["React","useEffect","useState","player","Track","Controller","audioset","state","tracks","map","track","id","useControlState","control","getState","setState","onControlStateChanged","controlState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,QAAuB,cAAvB;AAEA,OAAO,kBAAP;AACA,SAASC,KAAT,QAAsB,SAAtB;AAOA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA0C;AAClE,MAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACE,MAA3B,EAAmC;AACjC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACE,MAAT,CAAgBC,GAAhB,CAAoBC,KAAK,IACxB,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,IAAA,KAAK,EAAED,KAA7B;AAAoC,IAAA,QAAQ,EAAEJ,QAA9C;AAAwD,IAAA,KAAK,EAAEC,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CAZM;;AAcP,SAASK,eAAT,GAAyC;AAAA,oBACbV,QAAQ,CAACC,MAAM,CAACU,OAAP,CAAeC,QAAf,EAAD,CADK;AAAA;AAAA,QAChCP,KADgC;AAAA,QACzBQ,QADyB;;AAGvCd,EAAAA,SAAS,CAAC,MACRE,MAAM,CAACa,qBAAP,CAA6BC,YAAY,IAAI;AAC3CF,IAAAA,QAAQ,CAACE,YAAD,CAAR;AACD,GAFD,CADO,CAAT;AAKA,SAAOV,KAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { player } from \"../../player\";\nimport { ControlState } from \"../../player/AudiosetControl\";\nimport \"./Controller.css\";\nimport { Track } from \"./Track\";\n\ninterface ControllerProps {\n  audioset: Audioset;\n  state: ControlState;\n}\n\nexport const Controller = ({ audioset, state }: ControllerProps) => {\n  if (!audioset || !audioset.tracks) {\n    return <div>Audioset not loaded</div>;\n  }\n\n  return (\n    <div className=\"Controller\">\n      {audioset.tracks.map(track => (\n        <Track key={track.id} track={track} audioset={audioset} state={state} />\n      ))}\n    </div>\n  );\n};\n\nfunction useControlState(): ControlState {\n  const [state, setState] = useState(player.control.getState());\n\n  useEffect(() =>\n    player.onControlStateChanged(controlState => {\n      setState(controlState);\n    }),\n  );\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}