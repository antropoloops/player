{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Readme.tsx\";\nimport React, { useReducer } from \"react\";\nimport { ArrowDown } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nexport const Readme = ({\n  closed,\n  content\n}) => {\n  const _useReducer = useReducer(x => !x, false),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        isOpen = _useReducer2[0],\n        toggleOpen = _useReducer2[1];\n\n  return React.createElement(\"div\", {\n    className: \"Readme\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    markdown: ssummary(content),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    class: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ArrowDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n};\n\nfunction ssummary(content) {\n  const nextLineIndex = content.indexOf(\"\\n\");\n  const firstLine = nextLineIndex > 0 ? content.slice(0, nextLineIndex) : content;\n\n  if (firstLine.length < 100) {\n    return firstLine;\n  }\n\n  const firstPointIndex = firstLine.search(/[.:]/);\n  const firstSentence = firstPointIndex > 0 ? firstLine.slice(0, firstPointIndex) : firstLine;\n  return firstSentence + \".\";\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Readme.tsx"],"names":["React","useReducer","ArrowDown","Markdown","Readme","closed","content","x","isOpen","toggleOpen","ssummary","nextLineIndex","indexOf","firstLine","slice","length","firstPointIndex","search","firstSentence"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAOA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuC;AAAA,sBAC9BL,UAAU,CAACM,CAAC,IAAI,CAACA,CAAP,EAAU,KAAV,CADoB;AAAA;AAAA,QACpDC,MADoD;AAAA,QAC5CC,UAD4C;;AAG3D,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,QAAQ,CAACJ,OAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CAXM;;AAaP,SAASI,QAAT,CAAkBJ,OAAlB,EAAmC;AACjC,QAAMK,aAAa,GAAGL,OAAO,CAACM,OAAR,CAAgB,IAAhB,CAAtB;AACA,QAAMC,SAAS,GACbF,aAAa,GAAG,CAAhB,GAAoBL,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAiBH,aAAjB,CAApB,GAAsDL,OADxD;;AAEA,MAAIO,SAAS,CAACE,MAAV,GAAmB,GAAvB,EAA4B;AAC1B,WAAOF,SAAP;AACD;;AAED,QAAMG,eAAe,GAAGH,SAAS,CAACI,MAAV,CAAiB,MAAjB,CAAxB;AACA,QAAMC,aAAa,GACjBF,eAAe,GAAG,CAAlB,GAAsBH,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmBE,eAAnB,CAAtB,GAA4DH,SAD9D;AAEA,SAAOK,aAAa,GAAG,GAAvB;AACD","sourcesContent":["import React, { useReducer } from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { ArrowDown } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\n\ninterface ReeadmeProps {\n  closed: boolean;\n  content: string;\n}\n\nexport const Readme = ({ closed, content }: ReeadmeProps) => {\n  const [isOpen, toggleOpen] = useReducer(x => !x, false);\n\n  return (\n    <div className=\"Readme\">\n      <Markdown markdown={ssummary(content)} />\n      <button class=\"link\">\n        <ArrowDown />\n      </button>\n    </div>\n  );\n};\n\nfunction ssummary(content: string) {\n  const nextLineIndex = content.indexOf(\"\\n\");\n  const firstLine =\n    nextLineIndex > 0 ? content.slice(0, nextLineIndex) : content;\n  if (firstLine.length < 100) {\n    return firstLine;\n  }\n\n  const firstPointIndex = firstLine.search(/[.:]/);\n  const firstSentence =\n    firstPointIndex > 0 ? firstLine.slice(0, firstPointIndex) : firstLine;\n  return firstSentence + \".\";\n}\n"]},"metadata":{},"sourceType":"module"}