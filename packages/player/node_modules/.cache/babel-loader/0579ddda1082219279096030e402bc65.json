{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport { player } from \"../player\";\nexport function useAudiosetLoadStatus(audiosetId) {\n  const _useState = useState({\n    stage: \"loading\",\n    audiosetId\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadStatus = _useState2[0],\n        setLoadStatus = _useState2[1];\n\n  useEffect(() => {\n    player.loader.loadAudioset(audiosetId).then(status => setLoadStatus(status)).catch(error => setLoadStatus({\n      stage: \"error\",\n      error\n    }));\n  }, [audiosetId]);\n  return loadStatus;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/useAudiosetLoad.ts"],"names":["useEffect","useState","player","useAudiosetLoadStatus","audiosetId","stage","loadStatus","setLoadStatus","loader","loadAudioset","then","status","catch","error"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,SAASC,qBAAT,CAA+BC,UAA/B,EAAuE;AAAA,oBACxCH,QAAQ,CAAqB;AAC/DI,IAAAA,KAAK,EAAE,SADwD;AAE/DD,IAAAA;AAF+D,GAArB,CADgC;AAAA;AAAA,QACrEE,UADqE;AAAA,QACzDC,aADyD;;AAK5EP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,MAAM,CAACM,MAAP,CACGC,YADH,CACgBL,UADhB,EAEGM,IAFH,CAEQC,MAAM,IAAIJ,aAAa,CAACI,MAAD,CAF/B,EAGGC,KAHH,CAGSC,KAAK,IAAIN,aAAa,CAAC;AAAEF,MAAAA,KAAK,EAAE,OAAT;AAAkBQ,MAAAA;AAAlB,KAAD,CAH/B;AAID,GALQ,EAKN,CAACT,UAAD,CALM,CAAT;AAOA,SAAOE,UAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { AudiosetLoadStatus } from \"../audioset/AudiosetLoader\";\nimport { player } from \"../player\";\n\nexport function useAudiosetLoadStatus(audiosetId: string): AudiosetLoadStatus {\n  const [loadStatus, setLoadStatus] = useState<AudiosetLoadStatus>({\n    stage: \"loading\",\n    audiosetId,\n  });\n  useEffect(() => {\n    player.loader\n      .loadAudioset(audiosetId)\n      .then(status => setLoadStatus(status))\n      .catch(error => setLoadStatus({ stage: \"error\", error }));\n  }, [audiosetId]);\n\n  return loadStatus;\n}\n"]},"metadata":{},"sourceType":"module"}