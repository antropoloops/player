{"ast":null,"code":"import React from\"react\";import{getAudioContext,player}from\"../../player\";import{Header}from\"../shared/Header\";import{Scroll}from\"../shared/Scroll\";import{useDeviceType}from\"../useDeviceType\";import{Controller}from\"./Controller\";import\"./Player.css\";import Preview from\"./Preview\";import{useResourceLoadingStatus}from\"./useResourceLoadingStatus\";import{Visuals}from\"./Visuals\";var SKIP_PREVIEW=true;export var Player=function Player(_ref){var audioset=_ref.audioset;var resourceStatus=useResourceLoadingStatus();var isReady=SKIP_PREVIEW||resourceStatus.status===\"ready\";var _useDeviceType=useDeviceType(),isDesktop=_useDeviceType.isDesktop;var isVisual=isDesktop||isReady;var handleStart=function handleStart(){getAudioContext().then(function(){return player.resources.load();}).then(function(){return player.control.keyboard.active=true;});};return React.createElement(\"div\",{className:\"App Player\"},React.createElement(Header,{meta:audioset.meta}),React.createElement(Scroll,null,React.createElement(\"div\",{className:\"content\"},isReady?React.createElement(Controller,{audioset:audioset}):React.createElement(Preview,{audioset:audioset,resourceStatus:resourceStatus,onStart:handleStart}))),React.createElement(\"div\",{className:\"footer\"},\"Player\"),isVisual&&React.createElement(\"div\",{className:\"visuals\"},React.createElement(Visuals,{audioset:audioset})));};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Player.tsx"],"names":["React","getAudioContext","player","Header","Scroll","useDeviceType","Controller","Preview","useResourceLoadingStatus","Visuals","SKIP_PREVIEW","Player","audioset","resourceStatus","isReady","status","isDesktop","isVisual","handleStart","then","resources","load","control","keyboard","active","meta"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,eAAT,CAA0BC,MAA1B,KAAwC,cAAxC,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,OAASC,MAAT,KAAuB,kBAAvB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,wBAAT,KAAyC,4BAAzC,CACA,OAASC,OAAT,KAAwB,WAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,IAArB,CAMA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA+B,IAA5BC,CAAAA,QAA4B,MAA5BA,QAA4B,CACnD,GAAMC,CAAAA,cAAc,CAAGL,wBAAwB,EAA/C,CACA,GAAMM,CAAAA,OAAO,CAAGJ,YAAY,EAAIG,cAAc,CAACE,MAAf,GAA0B,OAA1D,CAFmD,mBAG7BV,aAAa,EAHgB,CAG3CW,SAH2C,gBAG3CA,SAH2C,CAKnD,GAAMC,CAAAA,QAAQ,CAAGD,SAAS,EAAIF,OAA9B,CAEA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBjB,eAAe,GACZkB,IADH,CACQ,iBAAMjB,CAAAA,MAAM,CAACkB,SAAP,CAAiBC,IAAjB,EAAN,EADR,EAEGF,IAFH,CAEQ,iBAAOjB,CAAAA,MAAM,CAACoB,OAAP,CAAeC,QAAf,CAAwBC,MAAxB,CAAiC,IAAxC,EAFR,EAGD,CAJD,CAMA,MACE,4BAAK,SAAS,CAAC,YAAf,EACE,oBAAC,MAAD,EAAQ,IAAI,CAAEZ,QAAQ,CAACa,IAAvB,EADF,CAEE,oBAAC,MAAD,MACE,2BAAK,SAAS,CAAC,SAAf,EACGX,OAAO,CACN,oBAAC,UAAD,EAAY,QAAQ,CAAEF,QAAtB,EADM,CAGN,oBAAC,OAAD,EACE,QAAQ,CAAEA,QADZ,CAEE,cAAc,CAAEC,cAFlB,CAGE,OAAO,CAAEK,WAHX,EAJJ,CADF,CAFF,CAeE,2BAAK,SAAS,CAAC,QAAf,WAfF,CAgBGD,QAAQ,EACP,2BAAK,SAAS,CAAC,SAAf,EAA0B,oBAAC,OAAD,EAAS,QAAQ,CAAEL,QAAnB,EAA1B,CAjBJ,CADF,CAsBD,CAnCM","sourcesContent":["import React from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport { getAudioContext, player } from \"../../player\";\nimport { Header } from \"../shared/Header\";\nimport { Scroll } from \"../shared/Scroll\";\nimport { useDeviceType } from \"../useDeviceType\";\nimport { Controller } from \"./Controller\";\nimport \"./Player.css\";\nimport Preview from \"./Preview\";\nimport { useResourceLoadingStatus } from \"./useResourceLoadingStatus\";\nimport { Visuals } from \"./Visuals\";\n\nconst SKIP_PREVIEW = true;\n\nexport interface PlayerProps {\n  audioset: Audioset;\n}\n\nexport const Player = ({ audioset }: PlayerProps) => {\n  const resourceStatus = useResourceLoadingStatus();\n  const isReady = SKIP_PREVIEW || resourceStatus.status === \"ready\";\n  const { isDesktop } = useDeviceType();\n\n  const isVisual = isDesktop || isReady;\n\n  const handleStart = () => {\n    getAudioContext()\n      .then(() => player.resources.load())\n      .then(() => (player.control.keyboard.active = true));\n  };\n\n  return (\n    <div className=\"App Player\">\n      <Header meta={audioset.meta} />\n      <Scroll>\n        <div className=\"content\">\n          {isReady ? (\n            <Controller audioset={audioset} />\n          ) : (\n            <Preview\n              audioset={audioset}\n              resourceStatus={resourceStatus}\n              onStart={handleStart}\n            />\n          )}\n        </div>\n      </Scroll>\n      <div className=\"footer\">Player</div>\n      {isVisual && (\n        <div className=\"visuals\">{<Visuals audioset={audioset} />}</div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}