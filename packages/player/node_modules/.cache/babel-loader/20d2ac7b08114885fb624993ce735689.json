{"ast":null,"code":"export var createTestAudioContextCloseMethodSupport = function createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor) {\n  return function () {\n    if (nativeAudioContextConstructor === null) {\n      return false;\n    } // Try to check the prototype before constructing the AudioContext.\n\n\n    if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n      return true;\n    }\n\n    var audioContext = new nativeAudioContextConstructor();\n    var isAudioContextClosable = audioContext.close !== undefined;\n\n    try {\n      audioContext.close();\n    } catch (_a) {// Ignore errors.\n    }\n\n    return isAudioContextClosable;\n  };\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-close-method-support.js"],"names":["createTestAudioContextCloseMethodSupport","nativeAudioContextConstructor","prototype","undefined","close","audioContext","isAudioContextClosable","_a"],"mappings":"AAAA,OAAO,IAAMA,wCAAwC,GAAG,SAA3CA,wCAA2C,CAACC,6BAAD,EAAmC;AACvF,SAAO,YAAM;AACT,QAAIA,6BAA6B,KAAK,IAAtC,EAA4C;AACxC,aAAO,KAAP;AACH,KAHQ,CAIT;;;AACA,QAAIA,6BAA6B,CAACC,SAA9B,KAA4CC,SAA5C,IACAF,6BAA6B,CAACC,SAA9B,CAAwCE,KAAxC,KAAkDD,SADtD,EACiE;AAC7D,aAAO,IAAP;AACH;;AACD,QAAME,YAAY,GAAG,IAAIJ,6BAAJ,EAArB;AACA,QAAMK,sBAAsB,GAAID,YAAY,CAACD,KAAb,KAAuBD,SAAvD;;AACA,QAAI;AACAE,MAAAA,YAAY,CAACD,KAAb;AACH,KAFD,CAGA,OAAOG,EAAP,EAAW,CACP;AACH;;AACD,WAAOD,sBAAP;AACH,GAlBD;AAmBH,CApBM","sourcesContent":["export const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined &&\n            nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        const isAudioContextClosable = (audioContext.close !== undefined);\n        try {\n            audioContext.close();\n        }\n        catch (_a) {\n            // Ignore errors.\n        }\n        return isAudioContextClosable;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-context-close-method-support.js.map"]},"metadata":{},"sourceType":"module"}