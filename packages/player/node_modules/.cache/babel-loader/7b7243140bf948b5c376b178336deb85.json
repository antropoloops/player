{"ast":null,"code":"var _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Preview.tsx\";\nimport React from \"react\";\nimport \"./Preview.css\";\nimport { Readme } from \"./Readme\";\nexport const Preview = ({\n  audioset,\n  isReady,\n  onStart\n}) => {\n  return React.createElement(\"div\", {\n    className: \"Preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: audioset.meta.title,\n    src: audioset.meta.logo_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Readme, {\n    content: audioset.meta.readme,\n    closed: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), isReady && React.createElement(\"div\", {\n    className: \"StartButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-link\",\n    title: \"Start playing\",\n    onClick: onStart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/play.png\",\n    alt: \"Empezar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Preview.tsx"],"names":["React","Readme","Preview","audioset","isReady","onStart","meta","title","logo_url","readme"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AAQA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAkD;AACvE,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,QAAQ,CAACG,IAAT,CAAcC,KAAxB;AAA+B,IAAA,GAAG,EAAEJ,QAAQ,CAACG,IAAT,CAAcE,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,QAAQ,CAACG,IAAT,CAAcG,MAA/B;AAAuC,IAAA,MAAM,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGL,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAC,eAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,GAAG,EAAC,WAAT;AAAqB,IAAA,GAAG,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CAHJ,CAHF,CADF;AAoBD,CArBM","sourcesContent":["import React from \"react\";\nimport { Audioset } from \"../../audioset\";\nimport \"./Preview.css\";\nimport { Readme } from \"./Readme\";\n\ninterface PreviewProps {\n  audioset: Audioset;\n  isReady: boolean;\n  onStart: () => void;\n}\n\nexport const Preview = ({ audioset, isReady, onStart }: PreviewProps) => {\n  return (\n    <div className=\"Preview\">\n      <img alt={audioset.meta.title} src={audioset.meta.logo_url} />\n\n      <div className=\"inside\">\n        <Readme content={audioset.meta.readme} closed={true} />\n        {isReady && (\n          <div className=\"StartButton\">\n            <button\n              className=\"btn-link\"\n              title=\"Start playing\"\n              onClick={onStart}\n            >\n              <img src=\"/play.png\" alt=\"Empezar\" />\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}