{"ast":null,"code":"import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { pi } from \"../math.js\";\nimport polyhedral from \"./index.js\";\nimport octahedron from \"./octahedron.js\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).angle(-30).scale(101.858).center([0, 45]);\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/d3-geo-projection/src/polyhedral/butterfly.js"],"names":["geoCentroid","centroid","geoGnomonic","gnomonic","pi","polyhedral","octahedron","faceProjection","face","c","type","coordinates","scale","translate","rotate","faces","map","project","forEach","d","i","node","children","push","lambda","phi","angle","center"],"mappings":"AAAA,SAAQA,WAAW,IAAIC,QAAvB,EAAiCC,WAAW,IAAIC,QAAhD,QAA+D,QAA/D;AACA,SAAQC,EAAR,QAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,eAAe,UAASC,cAAT,EAAyB;AAEtCA,EAAAA,cAAc,GAAGA,cAAc,IAAI,UAASC,IAAT,EAAe;AAChD,QAAIC,CAAC,GAAGR,QAAQ,CAAC;AAACS,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,WAAW,EAAEH;AAAlC,KAAD,CAAhB;AACA,WAAOL,QAAQ,GAAGS,KAAX,CAAiB,CAAjB,EAAoBC,SAApB,CAA8B,CAAC,CAAD,EAAI,CAAJ,CAA9B,EAAsCC,MAAtC,CAA6C,CAAC,CAACL,CAAC,CAAC,CAAD,CAAH,EAAQ,CAACA,CAAC,CAAC,CAAD,CAAV,CAA7C,CAAP;AACD,GAHD;;AAKA,MAAIM,KAAK,GAAGT,UAAU,CAACU,GAAX,CAAe,UAASR,IAAT,EAAe;AACxC,WAAO;AAACA,MAAAA,IAAI,EAAEA,IAAP;AAAaS,MAAAA,OAAO,EAAEV,cAAc,CAACC,IAAD;AAApC,KAAP;AACD,GAFW,CAAZ;AAIA,GAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0BU,OAA1B,CAAkC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC/C,QAAIC,IAAI,GAAGN,KAAK,CAACI,CAAD,CAAhB;AACAE,IAAAA,IAAI,IAAI,CAACA,IAAI,CAACC,QAAL,KAAkBD,IAAI,CAACC,QAAL,GAAgB,EAAlC,CAAD,EAAwCC,IAAxC,CAA6CR,KAAK,CAACK,CAAD,CAAlD,CAAR;AACD,GAHD;AAKA,SAAOf,UAAU,CAACU,KAAK,CAAC,CAAD,CAAN,EAAW,UAASS,MAAT,EAAiBC,GAAjB,EAAsB;AAC5C,WAAOV,KAAK,CAACS,MAAM,GAAG,CAACpB,EAAD,GAAM,CAAf,GAAmBqB,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc,CAAjC,GACPD,MAAM,GAAG,CAAT,GAAaC,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc,CAA3B,GACAD,MAAM,GAAGpB,EAAE,GAAG,CAAd,GAAkBqB,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc,CAAhC,GACAA,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc,CAHR,CAAZ;AAID,GALY,CAAV,CAMFC,KANE,CAMI,CAAC,EANL,EAOFd,KAPE,CAOI,OAPJ,EAQFe,MARE,CAQK,CAAC,CAAD,EAAI,EAAJ,CARL,CAAP;AASD","sourcesContent":["import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {pi} from \"../math.js\";\nimport polyhedral from \"./index.js\";\nimport octahedron from \"./octahedron.js\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .angle(-30)\n      .scale(101.858)\n      .center([0, 45]);\n}\n"]},"metadata":{},"sourceType":"module"}