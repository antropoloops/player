{"ast":null,"code":"import _classCallCheck from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var AudioContextEngine=/*#__PURE__*/function(){function AudioContextEngine(context){_classCallCheck(this,AudioContextEngine);this.context=context;}_createClass(AudioContextEngine,[{key:\"createAudioSource\",value:function createAudioSource(props,destination){var node=this.context.createBufferSource();node.buffer=props.buffer;node.connect(destination);return node;}},{key:\"createTrack\",value:function createTrack(props,destination){var node=this.context.createGain();node.connect(destination||this.context.destination);return node;}}]);return AudioContextEngine;}();","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/Player/AudioContextEngine.ts"],"names":["AudioContextEngine","context","props","destination","node","createBufferSource","buffer","connect","createGain"],"mappings":"sTAQA,UAAaA,CAAAA,kBAAb,yBACE,4BAAoBC,OAApB,CAA2C,+CAAvBA,OAAuB,CAAvBA,OAAuB,CAAE,CAD/C,2FAIIC,KAJJ,CAKIC,WALJ,CAMiB,CACb,GAAMC,CAAAA,IAAI,CAAG,KAAKH,OAAL,CAAaI,kBAAb,EAAb,CACAD,IAAI,CAACE,MAAL,CAAcJ,KAAK,CAACI,MAApB,CACAF,IAAI,CAACG,OAAL,CAAaJ,WAAb,EACA,MAAOC,CAAAA,IAAP,CACD,CAXH,gDAaIF,KAbJ,CAcIC,WAdJ,CAegB,CACZ,GAAMC,CAAAA,IAAI,CAAG,KAAKH,OAAL,CAAaO,UAAb,EAAb,CACAJ,IAAI,CAACG,OAAL,CAAaJ,WAAW,EAAI,KAAKF,OAAL,CAAaE,WAAzC,EACA,MAAOC,CAAAA,IAAP,CACD,CAnBH","sourcesContent":["import {\n  AudioEngine,\n  AudioSource,\n  AudioSourceProperties,\n  AudioTrack,\n  AudioTrackProperties,\n} from \"./Audio\";\n\nexport class AudioContextEngine implements AudioEngine {\n  constructor(private context: AudioContext) {}\n\n  public createAudioSource(\n    props: AudioSourceProperties,\n    destination: any,\n  ): AudioSource {\n    const node = this.context.createBufferSource();\n    node.buffer = props.buffer;\n    node.connect(destination);\n    return node;\n  }\n  public createTrack(\n    props: AudioTrackProperties,\n    destination?: any,\n  ): AudioTrack {\n    const node = this.context.createGain();\n    node.connect(destination || this.context.destination);\n    return node;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}