{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from\"react\";import{getActiveAudioContext}from\"../../player\";import{AudioContextEngine}from\"../../player/AudioContextEngine\";import{AudiosetControl,EmptyControlState}from\"../../player/Control\";import{ResourceLoader}from\"../../player/ResourceLoader\";import{Sampler}from\"../../player/Sampler\";export function usePlayer(audioset){// Make visuals render after reference is set: https://dev.to/thekashey/the-same-useref-but-it-will-callback-8bo\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),el=_useState2[0],setReference=_useState2[1];var visualsRef=useCallback(function(newRef){setReference(newRef);},[]);var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isReady=_useState4[0],setReady=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),control=_useState6[0],setControl=_useState6[1];var _useState7=useState(EmptyControlState),_useState8=_slicedToArray(_useState7,2),state=_useState8[0],setState=_useState8[1];useEffect(function(){var cancelled=false;var sampler;var visuals;function createPlayer(){var loader,_ref,VisualControl,ctx,ctl;return _regeneratorRuntime.async(function createPlayer$(_context){while(1){switch(_context.prev=_context.next){case 0:loader=new ResourceLoader(audioset,function(status){// TODO: set clip enabled\n});loader.preload();if(el){_context.next=4;break;}return _context.abrupt(\"return\");case 4:_context.next=6;return _regeneratorRuntime.awrap(import(\"../../visuals/index\"));case 6:_ref=_context.sent;VisualControl=_ref.VisualControl;_context.next=10;return _regeneratorRuntime.awrap(getActiveAudioContext());case 10:ctx=_context.sent;if(!cancelled){_context.next=13;break;}return _context.abrupt(\"return\");case 13:loader.load(ctx);sampler=createSampler(audioset,ctx,loader);visuals=new VisualControl(audioset,el);ctl=new AudiosetControl(audioset,{onControlStateChanged:function onControlStateChanged(newState){setState(newState);},onControlCommand:function onControlCommand(command){var _sampler,_visuals;(_sampler=sampler)===null||_sampler===void 0?void 0:_sampler.run(command);(_visuals=visuals)===null||_visuals===void 0?void 0:_visuals.run(command);}});setControl(ctl);setState(ctl.getState());case 19:case\"end\":return _context.stop();}}});}createPlayer();return function(){var _visuals2,_sampler2;cancelled=true;(_visuals2=visuals)===null||_visuals2===void 0?void 0:_visuals2.detach();(_sampler2=sampler)===null||_sampler2===void 0?void 0:_sampler2.dispose();};},[audioset,el]);return{visualsRef:visualsRef,control:control,state:state,isReady:isReady,setReady:setReady};}function createSampler(audioset,ctx,buffers){var audio=new AudioContextEngine(ctx);var sampler=new Sampler(audioset,buffers,audio);return sampler;}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/usePlayer.tsx"],"names":["useCallback","useEffect","useState","getActiveAudioContext","AudioContextEngine","AudiosetControl","EmptyControlState","ResourceLoader","Sampler","usePlayer","audioset","el","setReference","visualsRef","newRef","isReady","setReady","control","setControl","state","setState","cancelled","sampler","visuals","createPlayer","loader","status","preload","VisualControl","ctx","load","createSampler","ctl","onControlStateChanged","newState","onControlCommand","command","run","getState","detach","dispose","buffers","audio"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { IAudioContext } from \"standardized-audio-context\";\nimport { Audioset } from \"../../audioset\";\nimport { getActiveAudioContext } from \"../../player\";\nimport { AudioContextEngine } from \"../../player/AudioContextEngine\";\nimport {\n  AudiosetControl,\n  EmptyControlState,\n  PlayerControl,\n} from \"../../player/Control\";\nimport { ResourceLoader } from \"../../player/ResourceLoader\";\nimport { Sampler } from \"../../player/Sampler\";\nimport { VisualControl as VC } from \"../../visuals\";\n\nexport function usePlayer(audioset: Audioset) {\n  // Make visuals render after reference is set: https://dev.to/thekashey/the-same-useref-but-it-will-callback-8bo\n  const [el, setReference] = useState<HTMLDivElement | null>(null);\n  const visualsRef = useCallback((newRef: HTMLDivElement) => {\n    setReference(newRef);\n  }, []);\n\n  const [isReady, setReady] = useState<boolean>(false);\n  const [control, setControl] = useState<PlayerControl | null>(null);\n  const [state, setState] = useState(EmptyControlState);\n\n  useEffect(() => {\n    let cancelled = false;\n    let sampler: Sampler | undefined;\n    let visuals: VC | undefined;\n\n    async function createPlayer() {\n      const loader = new ResourceLoader(audioset, status => {\n        // TODO: set clip enabled\n      });\n      loader.preload();\n\n      if (!el) {\n        // FIXME: if no visuals div, nothing works\n        // this is to prevent create a player without visuals\n        // maybe we want to configure visuals or not\n        return;\n      }\n\n      const { VisualControl } = await import(\"../../visuals/index\");\n      const ctx = await getActiveAudioContext();\n\n      if (cancelled) {\n        return;\n      }\n\n      loader.load(ctx);\n      sampler = createSampler(audioset, ctx, loader);\n\n      visuals = new VisualControl(audioset, el);\n\n      const ctl = new AudiosetControl(audioset, {\n        onControlStateChanged: newState => {\n          setState(newState);\n        },\n        onControlCommand: command => {\n          sampler?.run(command);\n          visuals?.run(command);\n        },\n      });\n      setControl(ctl);\n      setState(ctl.getState());\n    }\n\n    createPlayer();\n    return () => {\n      cancelled = true;\n      visuals?.detach();\n      sampler?.dispose();\n    };\n  }, [audioset, el]);\n\n  return { visualsRef, control, state, isReady, setReady };\n}\n\nfunction createSampler(\n  audioset: Audioset,\n  ctx: IAudioContext,\n  buffers: ResourceLoader,\n): Sampler {\n  const audio = new AudioContextEngine(ctx);\n  const sampler = new Sampler(audioset, buffers, audio);\n  return sampler;\n}\n"]},"metadata":{},"sourceType":"module"}