{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dani/Antropoloops/atpls-player/src/ui/Player/Readme.tsx\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Readme.css\";\nexport const Readme = ({\n  closed,\n  content\n}) => {\n  const _useReducer = useReducer(x => !x, false),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        isOpen = _useReducer2[0],\n        toggleOpen = _useReducer2[1];\n\n  useEffect(() => {\n    if (isOpen) {\n      toggleOpen();\n    }\n  }, [content]);\n\n  if (!content.length) {\n    return null;\n  }\n\n  const summary = getSummary(content);\n  const isLarge = content.length > summary.length;\n  return React.createElement(\"div\", {\n    className: \"Readme\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    markdown: isOpen ? content : summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn-link\",\n    onClick: toggleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, isLarge && (isOpen ? React.createElement(ArrowUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : React.createElement(ArrowDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n};\n\nfunction getSummary(content) {\n  const nextLineIndex = content.indexOf(\"\\n\");\n  const firstLine = nextLineIndex > 0 ? content.slice(0, nextLineIndex) : content;\n\n  if (firstLine.length < 100) {\n    return firstLine;\n  }\n\n  const firstPointIndex = firstLine.search(/[.:]/);\n  const firstSentence = firstPointIndex > 0 ? firstLine.slice(0, firstPointIndex) : firstLine;\n  return firstSentence + \".\";\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/Readme.tsx"],"names":["React","useEffect","useReducer","ArrowDown","ArrowUp","Markdown","Readme","closed","content","x","isOpen","toggleOpen","length","summary","getSummary","isLarge","nextLineIndex","indexOf","firstLine","slice","firstPointIndex","search","firstSentence"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,cAAP;AAOA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuC;AAAA,sBAC9BN,UAAU,CAACO,CAAC,IAAI,CAACA,CAAP,EAAU,KAAV,CADoB;AAAA;AAAA,QACpDC,MADoD;AAAA,QAC5CC,UAD4C;;AAE3DV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAJ,EAAY;AAAEC,MAAAA,UAAU;AAAI;AAC7B,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;;AAIA,MAAI,CAACA,OAAO,CAACI,MAAb,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,QAAMC,OAAO,GAAGC,UAAU,CAACN,OAAD,CAA1B;AACA,QAAMO,OAAO,GAAGP,OAAO,CAACI,MAAR,GAAiBC,OAAO,CAACD,MAAzC;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEF,MAAM,GAAGF,OAAH,GAAaK,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEF,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,KAAKL,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,CADV,CAFF,CADF;AAQD,CArBM;;AAuBP,SAASI,UAAT,CAAoBN,OAApB,EAAqC;AACnC,QAAMQ,aAAa,GAAGR,OAAO,CAACS,OAAR,CAAgB,IAAhB,CAAtB;AACA,QAAMC,SAAS,GACbF,aAAa,GAAG,CAAhB,GAAoBR,OAAO,CAACW,KAAR,CAAc,CAAd,EAAiBH,aAAjB,CAApB,GAAsDR,OADxD;;AAEA,MAAIU,SAAS,CAACN,MAAV,GAAmB,GAAvB,EAA4B;AAC1B,WAAOM,SAAP;AACD;;AAED,QAAME,eAAe,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,CAAxB;AACA,QAAMC,aAAa,GACjBF,eAAe,GAAG,CAAlB,GAAsBF,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmBC,eAAnB,CAAtB,GAA4DF,SAD9D;AAEA,SAAOI,aAAa,GAAG,GAAvB;AACD","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { ArrowDown, ArrowUp } from \"../shared/Icons\";\nimport { Markdown } from \"../shared/Markdown\";\nimport \"./Readme.css\";\n\ninterface ReeadmeProps {\n  closed: boolean;\n  content: string;\n}\n\nexport const Readme = ({ closed, content }: ReeadmeProps) => {\n  const [isOpen, toggleOpen] = useReducer(x => !x, false);\n  useEffect(() => {\n    if (isOpen) { toggleOpen() }\n  }, [content]);\n\n  if (!content.length) {\n    return null;\n  }\n\n  const summary = getSummary(content);\n  const isLarge = content.length > summary.length;\n\n  return (\n    <div className=\"Readme\">\n      <Markdown markdown={isOpen ? content : summary} />\n      <button className=\"btn-link\" onClick={toggleOpen}>\n        {isLarge && (isOpen ? <ArrowUp /> : <ArrowDown />)}\n      </button>\n    </div>\n  );\n};\n\nfunction getSummary(content: string) {\n  const nextLineIndex = content.indexOf(\"\\n\");\n  const firstLine =\n    nextLineIndex > 0 ? content.slice(0, nextLineIndex) : content;\n  if (firstLine.length < 100) {\n    return firstLine;\n  }\n\n  const firstPointIndex = firstLine.search(/[.:]/);\n  const firstSentence =\n    firstPointIndex > 0 ? firstLine.slice(0, firstPointIndex) : firstLine;\n  return firstSentence + \".\";\n}\n"]},"metadata":{},"sourceType":"module"}