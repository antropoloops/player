{"ast":null,"code":"import { select } from \"d3\";\n\n/**\n * A display encapsulates drawing mechanics\n *\n * @param {*} el\n */\nexport class Display {\n  constructor(el) {\n    this.el = void 0;\n    this.svg = void 0;\n    this.el = el;\n    this.createSvg();\n    this.clear();\n  }\n\n  getDimensions() {\n    return {\n      width: this.el.offsetWidth,\n      height: this.el.offsetHeight\n    };\n  }\n\n  setVisible(isVisible) {\n    this.el.style.display = isVisible ? \"block\" : \"none\";\n  }\n\n  createSvg() {\n    const container = select(this.el);\n    const dimensions = this.getDimensions();\n    this.svg = container.append(\"svg\").attr(\"width\", dimensions.width).attr(\"height\", dimensions.height).attr(\"viewBox\", `0 0 ${dimensions.width} ${dimensions.height}`);\n    return this.svg;\n  }\n\n  clear() {\n    const container = select(this.el);\n    container.selectAll(\"*\").remove();\n  }\n\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/visuals/display.ts"],"names":["select","Display","constructor","el","svg","createSvg","clear","getDimensions","width","offsetWidth","height","offsetHeight","setVisible","isVisible","style","display","container","dimensions","append","attr","selectAll","remove"],"mappings":"AAAA,SAASA,MAAT,QAAuB,IAAvB;;AAOA;;;;;AAMA,OAAO,MAAMC,OAAN,CAAc;AAInBC,EAAAA,WAAW,CAACC,EAAD,EAAU;AAAA,SAHdA,EAGc;AAAA,SAFdC,GAEc;AACnB,SAAKD,EAAL,GAAUA,EAAV;AACA,SAAKE,SAAL;AACA,SAAKC,KAAL;AACD;;AAEMC,EAAAA,aAAP,GAAuB;AACrB,WAAO;AACLC,MAAAA,KAAK,EAAE,KAAKL,EAAL,CAAQM,WADV;AAELC,MAAAA,MAAM,EAAE,KAAKP,EAAL,CAAQQ;AAFX,KAAP;AAID;;AAEMC,EAAAA,UAAP,CAAkBC,SAAlB,EAAsC;AACpC,SAAKV,EAAL,CAAQW,KAAR,CAAcC,OAAd,GAAwBF,SAAS,GAAG,OAAH,GAAa,MAA9C;AACD;;AAEMR,EAAAA,SAAP,GAAmB;AACjB,UAAMW,SAAS,GAAGhB,MAAM,CAAC,KAAKG,EAAN,CAAxB;AACA,UAAMc,UAAU,GAAG,KAAKV,aAAL,EAAnB;AAEA,SAAKH,GAAL,GAAWY,SAAS,CACjBE,MADQ,CACD,KADC,EAERC,IAFQ,CAEH,OAFG,EAEMF,UAAU,CAACT,KAFjB,EAGRW,IAHQ,CAGH,QAHG,EAGOF,UAAU,CAACP,MAHlB,EAIRS,IAJQ,CAIH,SAJG,EAIS,OAAMF,UAAU,CAACT,KAAM,IAAGS,UAAU,CAACP,MAAO,EAJrD,CAAX;AAMA,WAAO,KAAKN,GAAZ;AACD;;AAEME,EAAAA,KAAP,GAAe;AACb,UAAMU,SAAS,GAAGhB,MAAM,CAAC,KAAKG,EAAN,CAAxB;AACAa,IAAAA,SAAS,CAACI,SAAV,CAAoB,GAApB,EAAyBC,MAAzB;AACD;;AArCkB","sourcesContent":["import { select } from \"d3\";\n\nexport interface Dimension {\n  width: number;\n  height: number;\n}\n\n/**\n * A display encapsulates drawing mechanics\n *\n * @param {*} el\n */\n\nexport class Display {\n  public el: any;\n  public svg: any;\n\n  constructor(el: any) {\n    this.el = el;\n    this.createSvg();\n    this.clear();\n  }\n\n  public getDimensions() {\n    return {\n      width: this.el.offsetWidth,\n      height: this.el.offsetHeight,\n    };\n  }\n\n  public setVisible(isVisible: boolean) {\n    this.el.style.display = isVisible ? \"block\" : \"none\";\n  }\n\n  public createSvg() {\n    const container = select(this.el);\n    const dimensions = this.getDimensions();\n\n    this.svg = container\n      .append(\"svg\")\n      .attr(\"width\", dimensions.width)\n      .attr(\"height\", dimensions.height)\n      .attr(\"viewBox\", `0 0 ${dimensions.width} ${dimensions.height}`);\n\n    return this.svg;\n  }\n\n  public clear() {\n    const container = select(this.el);\n    container.selectAll(\"*\").remove();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}