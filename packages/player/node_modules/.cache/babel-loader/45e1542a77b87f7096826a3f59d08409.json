{"ast":null,"code":"import*as d3 from\"d3\";// Number of slices in a circle\nvar NUMSLICES=36;// Scale. Get the degrees for a specific slice\nvar degreesFromSlice=d3.scaleLinear().range([0,360])// working in degrees\n.domain([0,NUMSLICES]);export default function drawCircle(parent,width,cx,cy,clip){var duration=clip.audio.durationSeconds;var trackVolume=clip.audio.volume;var trackColor=clip.color;var circlesGroup=parent.append(\"g\").attr(\"class\",\"circleGroup\").attr(\"transform\",\"translate(\".concat(cx,\", \").concat(cy,\")\"));// We need to group again, so that the circle turns in its location\nvar circle=circlesGroup.append(\"g\").attr(\"class\",\"circle\");// Arc generator\nvar arc=d3.arc();// Create outerArcs data\nvar outerArcs=createOuterArcs(width,trackVolume);// Draw outerArcs\ncircle.selectAll(\".outerArcs\").data(outerArcs).enter().append(\"path\").attr(\"class\",\"outerArcs\").attr(\"d\",arc).style(\"fill\",trackColor).style(\"opacity\",function(d,i){return 0.3/NUMSLICES*i;});// Create innerArcs data\nvar innerArcs=createInnerArcs(width,trackVolume);// Draw innerArcs\ncircle.selectAll(\".innerArcs\").data(innerArcs).enter().append(\"path\").attr(\"class\",\"innerArcs\").attr(\"d\",arc).style(\"fill\",trackColor).style(\"opacity\",function(d,i){return 1/NUMSLICES*i;});circle.append(\"line\").attr(\"x1\",0).attr(\"y1\",0).attr(\"x2\",0).attr(\"y2\",-(width/30*trackVolume+width/350)).style(\"stroke\",trackColor).style(\"stroke-width\",1.5);// Add animation to make the circle turn\nvar turnTimer=d3.timer(turn);function turn(elapsed){var elapsedSeconds=elapsed/1000%duration;var turnScale=d3.scaleLinear().range([1,0]).domain([0,duration]);circle.style(\"transform\",\"rotate(\".concat(-turnScale(elapsedSeconds),\"turn)\"));if(d3.select(\".circle\").empty()){turnTimer.stop();}}return circlesGroup;}function createInnerArcs(width,trackVolume){return d3.range(NUMSLICES).map(function(d,i){return{startAngle:deg2rad(degreesFromSlice(d)),endAngle:i===NUMSLICES-1?deg2rad(degreesFromSlice(d+1)):deg2rad(degreesFromSlice(d+2)),innerRadius:0,outerRadius:width/30*trackVolume};});}function createOuterArcs(width,trackVolume){return d3.range(NUMSLICES).map(function(d,i){return{startAngle:deg2rad(degreesFromSlice(d)),endAngle:i===NUMSLICES-1?deg2rad(degreesFromSlice(d+1)):deg2rad(degreesFromSlice(d+2)),innerRadius:0,outerRadius:width/30*trackVolume*2};});}// Transform degrees into radians\nfunction deg2rad(degrees){return degrees*(Math.PI/180);}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/packages/player/src/visuals/drawCircle.ts"],"names":["d3","NUMSLICES","degreesFromSlice","scaleLinear","range","domain","drawCircle","parent","width","cx","cy","clip","duration","audio","durationSeconds","trackVolume","volume","trackColor","color","circlesGroup","append","attr","circle","arc","outerArcs","createOuterArcs","selectAll","data","enter","style","d","i","innerArcs","createInnerArcs","turnTimer","timer","turn","elapsed","elapsedSeconds","turnScale","select","empty","stop","map","startAngle","deg2rad","endAngle","innerRadius","outerRadius","degrees","Math","PI"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport { Clip } from \"../audioset\";\n\n// Number of slices in a circle\nconst NUMSLICES = 36;\n\n// Scale. Get the degrees for a specific slice\nconst degreesFromSlice = d3\n  .scaleLinear()\n  .range([0, 360]) // working in degrees\n  .domain([0, NUMSLICES]);\n\nexport default function drawCircle(\n  parent: any,\n  width: number,\n  cx: number,\n  cy: number,\n  clip: Clip\n) {\n  const duration = clip.audio.durationSeconds;\n  const trackVolume = clip.audio.volume;\n  const trackColor = clip.color;\n  const circlesGroup = parent\n    .append(\"g\")\n    .attr(\"class\", \"circleGroup\")\n    .attr(\"transform\", `translate(${cx}, ${cy})`);\n\n  // We need to group again, so that the circle turns in its location\n  const circle = circlesGroup.append(\"g\").attr(\"class\", \"circle\");\n\n  // Arc generator\n  const arc = d3.arc();\n\n  // Create outerArcs data\n  const outerArcs = createOuterArcs(width, trackVolume);\n\n  // Draw outerArcs\n  circle\n    .selectAll(\".outerArcs\")\n    .data(outerArcs)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"outerArcs\")\n    .attr(\"d\", arc)\n    .style(\"fill\", trackColor)\n    .style(\"opacity\", (d: any, i: number) => {\n      return (0.3 / NUMSLICES) * i;\n    });\n\n  // Create innerArcs data\n  const innerArcs = createInnerArcs(width, trackVolume);\n\n  // Draw innerArcs\n  circle\n    .selectAll(\".innerArcs\")\n    .data(innerArcs)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"innerArcs\")\n    .attr(\"d\", arc)\n    .style(\"fill\", trackColor)\n    .style(\"opacity\", (d: any, i: number) => {\n      return (1 / NUMSLICES) * i;\n    });\n\n  circle\n    .append(\"line\")\n    .attr(\"x1\", 0)\n    .attr(\"y1\", 0)\n    .attr(\"x2\", 0)\n    .attr(\"y2\", -((width / 30) * trackVolume + width / 350))\n    .style(\"stroke\", trackColor)\n    .style(\"stroke-width\", 1.5);\n\n  // Add animation to make the circle turn\n  const turnTimer = d3.timer(turn);\n  function turn(elapsed: number) {\n    const elapsedSeconds = (elapsed / 1000) % duration;\n    const turnScale = d3.scaleLinear().range([1, 0]).domain([0, duration]);\n    circle.style(\"transform\", `rotate(${-turnScale(elapsedSeconds)}turn)`);\n    if (d3.select(\".circle\").empty()) {\n      turnTimer.stop();\n    }\n  }\n\n  return circlesGroup;\n}\n\nfunction createInnerArcs(width: number, trackVolume: number) {\n  return d3.range(NUMSLICES).map((d, i) => {\n    return {\n      startAngle: deg2rad(degreesFromSlice(d)),\n      endAngle:\n        i === NUMSLICES - 1\n          ? deg2rad(degreesFromSlice(d + 1))\n          : deg2rad(degreesFromSlice(d + 2)),\n      innerRadius: 0,\n      outerRadius: (width / 30) * trackVolume,\n    };\n  });\n}\n\nfunction createOuterArcs(width: number, trackVolume: number) {\n  return d3.range(NUMSLICES).map((d, i) => {\n    return {\n      startAngle: deg2rad(degreesFromSlice(d)),\n      endAngle:\n        i === NUMSLICES - 1\n          ? deg2rad(degreesFromSlice(d + 1))\n          : deg2rad(degreesFromSlice(d + 2)),\n      innerRadius: 0,\n      outerRadius: (width / 30) * trackVolume * 2,\n    };\n  });\n}\n\n// Transform degrees into radians\nfunction deg2rad(degrees: number) {\n  return degrees * (Math.PI / 180);\n}\n"]},"metadata":{},"sourceType":"module"}