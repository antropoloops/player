{"ast":null,"code":"import _slicedToArray from \"/Users/dani/Antropoloops/atpls-player/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useLayoutEffect, useState } from \"react\";\nimport { getActiveAudioContext } from \"../../player\";\nimport { AudioContextEngine } from \"../../player/AudioContextEngine\";\nimport { AudiosetControl, EmptyControlState } from \"../../player/Control\";\nimport { ResourceLoader } from \"../../player/ResourceLoader\";\nimport { Sampler } from \"../../player/Sampler\";\nexport function usePlayer(audioset) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        ref = _useState2[0],\n        setRef = _useState2[1];\n\n  const visualsRef = useCallback(newRef => {\n    setRef(newRef);\n    ref.current.focus(); // a side effect!\n  });\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isReady = _useState4[0],\n        setReady = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        control = _useState6[0],\n        setControl = _useState6[1];\n\n  const _useState7 = useState(EmptyControlState),\n        _useState8 = _slicedToArray(_useState7, 2),\n        state = _useState8[0],\n        setState = _useState8[1];\n\n  const el = visualsRef.current;\n  useLayoutEffect(() => {\n    let cancelled = false;\n    let sampler;\n    let visuals;\n\n    async function createPlayer() {\n      setReady(false);\n      console.log(\"create player!!\");\n      const loader = new ResourceLoader(audioset, status => {// TODO: set clip enabled\n      });\n      loader.preload();\n\n      const _ref = await import(\"../../visuals/index\"),\n            VisualControl = _ref.VisualControl;\n\n      const ctx = await getActiveAudioContext();\n\n      if (cancelled) {\n        return;\n      }\n\n      loader.load(ctx);\n      sampler = createSampler(audioset, ctx, loader);\n\n      if (el) {\n        visuals = new VisualControl(audioset, el);\n      } else {\n        setTimeout(() => {\n          console.log(\"yay!\");\n        }, 2000);\n      }\n\n      const ctl = new AudiosetControl(audioset, {\n        onControlStateChanged: newState => {\n          setState(newState);\n        },\n        onControlCommand: command => {\n          var _sampler, _visuals;\n\n          (_sampler = sampler) === null || _sampler === void 0 ? void 0 : _sampler.run(command);\n          (_visuals = visuals) === null || _visuals === void 0 ? void 0 : _visuals.run(command);\n        }\n      });\n      setControl(ctl);\n      setState(ctl.getState());\n    }\n\n    createPlayer();\n    return () => {\n      var _visuals2, _sampler2;\n\n      cancelled = true;\n      (_visuals2 = visuals) === null || _visuals2 === void 0 ? void 0 : _visuals2.detach();\n      (_sampler2 = sampler) === null || _sampler2 === void 0 ? void 0 : _sampler2.dispose();\n    };\n  }, [audioset, el]);\n  return {\n    visualsRef,\n    control,\n    state,\n    isReady,\n    setReady\n  };\n}\n\nfunction createSampler(audioset, ctx, buffers) {\n  const audio = new AudioContextEngine(ctx);\n  const sampler = new Sampler(audioset, buffers, audio);\n  return sampler;\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/src/ui/Player/usePlayer.tsx"],"names":["useCallback","useLayoutEffect","useState","getActiveAudioContext","AudioContextEngine","AudiosetControl","EmptyControlState","ResourceLoader","Sampler","usePlayer","audioset","ref","setRef","visualsRef","newRef","current","focus","isReady","setReady","control","setControl","state","setState","el","cancelled","sampler","visuals","createPlayer","console","log","loader","status","preload","VisualControl","ctx","load","createSampler","setTimeout","ctl","onControlStateChanged","newState","onControlCommand","command","run","getState","detach","dispose","buffers","audio"],"mappings":"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","sourcesContent":["import {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { IAudioContext } from \"standardized-audio-context\";\nimport { Audioset } from \"../../audioset\";\nimport { getActiveAudioContext } from \"../../player\";\nimport { AudioContextEngine } from \"../../player/AudioContextEngine\";\nimport {\n  AudiosetControl,\n  EmptyControlState,\n  PlayerControl,\n} from \"../../player/Control\";\nimport { ResourceLoader } from \"../../player/ResourceLoader\";\nimport { Sampler } from \"../../player/Sampler\";\nimport { VisualControl as VC } from \"../../visuals\";\n\nexport function usePlayer(audioset: Audioset) {\n  const [ref, setRef] = useState<HTMLDivElement | null>(null);\n  const visualsRef = useCallback((newRef: HTMLDivElement) => {\n    setRef(newRef);\n    ref.current.focus(); // a side effect!\n  });\n  const [isReady, setReady] = useState<boolean>(false);\n  const [control, setControl] = useState<PlayerControl | null>(null);\n  const [state, setState] = useState(EmptyControlState);\n\n  const el = visualsRef.current;\n\n  useLayoutEffect(() => {\n    let cancelled = false;\n    let sampler: Sampler | undefined;\n    let visuals: VC | undefined;\n\n    async function createPlayer() {\n      setReady(false);\n      console.log(\"create player!!\");\n      const loader = new ResourceLoader(audioset, status => {\n        // TODO: set clip enabled\n      });\n      loader.preload();\n\n      const { VisualControl } = await import(\"../../visuals/index\");\n      const ctx = await getActiveAudioContext();\n\n      if (cancelled) {\n        return;\n      }\n\n      loader.load(ctx);\n      sampler = createSampler(audioset, ctx, loader);\n\n      if (el) {\n        visuals = new VisualControl(audioset, el);\n      } else {\n        setTimeout(() => {\n          console.log(\"yay!\");\n        }, 2000);\n      }\n\n      const ctl = new AudiosetControl(audioset, {\n        onControlStateChanged: newState => {\n          setState(newState);\n        },\n        onControlCommand: command => {\n          sampler?.run(command);\n          visuals?.run(command);\n        },\n      });\n      setControl(ctl);\n      setState(ctl.getState());\n    }\n\n    createPlayer();\n    return () => {\n      cancelled = true;\n      visuals?.detach();\n      sampler?.dispose();\n    };\n  }, [audioset, el]);\n\n  return { visualsRef, control, state, isReady, setReady };\n}\n\nfunction createSampler(\n  audioset: Audioset,\n  ctx: IAudioContext,\n  buffers: ResourceLoader,\n): Sampler {\n  const audio = new AudioContextEngine(ctx);\n  const sampler = new Sampler(audioset, buffers, audio);\n  return sampler;\n}\n"]},"metadata":{},"sourceType":"module"}