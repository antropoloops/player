{"ast":null,"code":"export default function (topology) {\n  var ownerByArc = new Array(topology.arcs.length),\n      // arc index -> index of unique associated ring, or -1 if used by multiple rings\n  ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(testGeometry);\n        break;\n\n      case \"Polygon\":\n        testArcs(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        o.arcs.forEach(testArcs);\n        break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function (ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}","map":{"version":3,"sources":["/Users/dani/Antropoloops/atpls-player/node_modules/topojson/node_modules/topojson-simplify/src/filterAttached.js"],"names":["topology","ownerByArc","Array","arcs","length","ownerIndex","key","testGeometry","o","type","geometries","forEach","testArcs","i","n","ring","j","m","arc","owner","objects"],"mappings":"AAAA,eAAe,UAASA,QAAT,EAAmB;AAChC,MAAIC,UAAU,GAAG,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,IAAT,CAAcC,MAAxB,CAAjB;AAAA,MAAkD;AAC9CC,EAAAA,UAAU,GAAG,CADjB;AAAA,MAEIC,GAFJ;;AAIA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,YAAQA,CAAC,CAACC,IAAV;AACE,WAAK,oBAAL;AAA2BD,QAAAA,CAAC,CAACE,UAAF,CAAaC,OAAb,CAAqBJ,YAArB;AAAoC;;AAC/D,WAAK,SAAL;AAAgBK,QAAAA,QAAQ,CAACJ,CAAC,CAACL,IAAH,CAAR;AAAkB;;AAClC,WAAK,cAAL;AAAqBK,QAAAA,CAAC,CAACL,IAAF,CAAOQ,OAAP,CAAeC,QAAf;AAA0B;AAHjD;AAKD;;AAED,WAASA,QAAT,CAAkBT,IAAlB,EAAwB;AACtB,SAAK,IAAIU,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGX,IAAI,CAACC,MAAzB,EAAiCS,CAAC,GAAGC,CAArC,EAAwC,EAAED,CAAF,EAAK,EAAER,UAA/C,EAA2D;AACzD,WAAK,IAAIU,IAAI,GAAGZ,IAAI,CAACU,CAAD,CAAf,EAAoBG,CAAC,GAAG,CAAxB,EAA2BC,CAAC,GAAGF,IAAI,CAACX,MAAzC,EAAiDY,CAAC,GAAGC,CAArD,EAAwD,EAAED,CAA1D,EAA6D;AAC3D,YAAIE,GAAG,GAAGH,IAAI,CAACC,CAAD,CAAd;AACA,YAAIE,GAAG,GAAG,CAAV,EAAaA,GAAG,GAAG,CAACA,GAAP;AACb,YAAIC,KAAK,GAAGlB,UAAU,CAACiB,GAAD,CAAtB;AACA,YAAIC,KAAK,IAAI,IAAb,EAAmBlB,UAAU,CAACiB,GAAD,CAAV,GAAkBb,UAAlB,CAAnB,KACK,IAAIc,KAAK,KAAKd,UAAd,EAA0BJ,UAAU,CAACiB,GAAD,CAAV,GAAkB,CAAC,CAAnB;AAChC;AACF;AACF;;AAED,OAAKZ,GAAL,IAAYN,QAAQ,CAACoB,OAArB,EAA8B;AAC5Bb,IAAAA,YAAY,CAACP,QAAQ,CAACoB,OAAT,CAAiBd,GAAjB,CAAD,CAAZ;AACD;;AAED,SAAO,UAASS,IAAT,EAAe;AACpB,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,IAAI,CAACX,MAApB,EAA4Bc,GAAjC,EAAsCF,CAAC,GAAGC,CAA1C,EAA6C,EAAED,CAA/C,EAAkD;AAChD,UAAIf,UAAU,CAAC,CAACiB,GAAG,GAAGH,IAAI,CAACC,CAAD,CAAX,IAAkB,CAAlB,GAAsB,CAACE,GAAvB,GAA6BA,GAA9B,CAAV,KAAiD,CAAC,CAAtD,EAAyD;AACvD,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD,GAPD;AAQD","sourcesContent":["export default function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}